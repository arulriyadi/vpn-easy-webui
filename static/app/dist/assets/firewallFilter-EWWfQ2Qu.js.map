{"version":3,"file":"firewallFilter-EWWfQ2Qu.js","sources":["../../src/views/firewallFilter.vue"],"sourcesContent":["<template>\n  <div class=\"container-fluid\">\n    <div class=\"row\">\n      <div class=\"col-12\">\n        <div class=\"mb-4\">\n          <h2 class=\"mb-0\">\n            <i class=\"bi bi-funnel me-2\"></i>\n            Firewall Filter\n          </h2>\n        </div>\n\n        <!-- Firewall Rules Table -->\n        <div class=\"card\">\n          <div class=\"card-header\">\n            <h5 class=\"mb-0\">\n              <i class=\"bi bi-list-ul me-2\"></i>\n              Current Firewall Rules (Filter)\n            </h5>\n          </div>\n          <div class=\"card-body\">\n            <div v-if=\"loading\" class=\"text-center py-4\">\n              <div class=\"spinner-border text-primary\" role=\"status\">\n                <span class=\"visually-hidden\">Loading...</span>\n              </div>\n            </div>\n            \n            <div v-else-if=\"firewallRules.length === 0\" class=\"text-center py-4 text-muted\">\n              <i class=\"bi bi-shield-x fs-1\"></i>\n              <p class=\"mt-2\">No firewall rules found</p>\n            </div>\n            \n            <div v-else class=\"table-responsive\">\n              <table class=\"table table-striped table-hover\">\n                <thead class=\"table-dark\">\n                  <tr>\n                    <th width=\"40\"><i class=\"bi bi-grip-vertical text-muted\"></i></th>\n                    <th>ID</th>\n                    <th>Chain</th>\n                    <th>Source</th>\n                    <th>Destination</th>\n                    <th>Protocol</th>\n                    <th>Port</th>\n                    <th>Target</th>\n                    <th>Actions</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr \n                    v-for=\"(rule, index) in firewallRules\" \n                    :key=\"rule.id\"\n                    :draggable=\"true\"\n                    @dragstart=\"handleDragStart(index, $event)\"\n                    @dragover=\"handleDragOver($event)\"\n                    @drop=\"handleDrop(index, $event)\"\n                    @dragend=\"handleDragEnd\"\n                    :class=\"{ 'drag-over': draggedIndex === index && dragOverIndex === index }\"\n                    class=\"draggable-row\"\n                  >\n                    <td class=\"drag-handle\">\n                      <i class=\"bi bi-grip-vertical text-muted cursor-grab\"></i>\n                    </td>\n                    <td>\n                      <span class=\"badge bg-primary\">{{ index + 1 }}</span>\n                    </td>\n                    <td>\n                      <span class=\"badge bg-secondary\">{{ rule.chain || 'N/A' }}</span>\n                    </td>\n                    <td>{{ rule.source || 'Any' }}</td>\n                    <td>{{ rule.destination || 'Any' }}</td>\n                    <td>\n                      <span v-if=\"rule.protocol\" class=\"badge bg-info\">{{ rule.protocol }}</span>\n                      <span v-else class=\"text-muted\">Any</span>\n                    </td>\n                    <td>{{ rule.port || 'Any' }}</td>\n                    <td>\n                      <span class=\"badge\" :class=\"getTargetBadgeClass(rule.target)\">\n                        {{ rule.target || 'N/A' }}\n                      </span>\n                    </td>\n                    <td>\n                      <button class=\"btn btn-sm btn-outline-danger\" @click=\"deleteRule(rule.id)\">\n                        <i class=\"bi bi-trash\"></i>\n                      </button>\n                    </td>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n          </div>\n          \n          <!-- Action Buttons Row (pfSense style) -->\n          <div class=\"card-footer bg-subtle border-top\">\n            <div class=\"row align-items-center\">\n              <div class=\"col-md-4\">\n                <small class=\"text-muted\">\n                  <i class=\"bi bi-info-circle me-1\"></i>\n                  Total Rules: {{ firewallRules.length }}\n                  <span v-if=\"hasUnsavedChanges\" class=\"text-warning ms-2\">\n                    <i class=\"bi bi-exclamation-triangle me-1\"></i>\n                    Unsaved changes\n                  </span>\n                </small>\n              </div>\n              <div class=\"col-md-8 text-end\">\n                <div class=\"btn-group\" role=\"group\">\n                  <button class=\"btn btn-primary\" @click=\"showAddRuleModal = true\">\n                    <i class=\"bi bi-plus-circle me-1\"></i>\n                    Add Rule\n                  </button>\n                  <button \n                    class=\"btn btn-success\" \n                    @click=\"saveRuleOrder\"\n                    :disabled=\"!hasUnsavedChanges || savingOrder\"\n                  >\n                    <i v-if=\"savingOrder\" class=\"bi bi-hourglass-split me-1\"></i>\n                    <i v-else class=\"bi bi-check-circle me-1\"></i>\n                    {{ savingOrder ? 'Saving...' : 'Save Changes' }}\n                  </button>\n                  <button class=\"btn btn-outline-secondary\" @click=\"reloadRules\">\n                    <i class=\"bi bi-arrow-clockwise me-1\"></i>\n                    Reload Rules\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- Add Rule Modal -->\n    <div v-if=\"showAddRuleModal\" class=\"modal show d-block\" tabindex=\"-1\" style=\"background-color: rgba(0,0,0,0.5)\">\n      <div class=\"modal-dialog modal-lg\">\n        <div class=\"modal-content\">\n          <div class=\"modal-header\">\n            <h5 class=\"modal-title\">\n              <i class=\"bi bi-plus-circle me-2\"></i>\n              Add Firewall Rule\n            </h5>\n            <button type=\"button\" class=\"btn-close\" @click=\"showAddRuleModal = false\"></button>\n          </div>\n          <div class=\"modal-body\">\n            <form @submit.prevent=\"addRule\">\n              <div class=\"row\">\n                <div class=\"col-md-6 mb-3\">\n                  <label for=\"chain\" class=\"form-label\">Chain</label>\n                  <select id=\"chain\" v-model=\"newRule.chain\" class=\"form-select\" required>\n                    <option value=\"\">Select Chain</option>\n                    <option value=\"INPUT\">INPUT</option>\n                    <option value=\"OUTPUT\">OUTPUT</option>\n                    <option value=\"FORWARD\">FORWARD</option>\n                  </select>\n                </div>\n                <div class=\"col-md-6 mb-3\">\n                  <label for=\"target\" class=\"form-label\">Target</label>\n                  <select id=\"target\" v-model=\"newRule.target\" class=\"form-select\" required>\n                    <option value=\"\">Select Target</option>\n                    <option value=\"ACCEPT\">ACCEPT</option>\n                    <option value=\"DROP\">DROP</option>\n                    <option value=\"REJECT\">REJECT</option>\n                  </select>\n                </div>\n              </div>\n              \n              <div class=\"row\">\n                <div class=\"col-md-6 mb-3\">\n                  <label for=\"source\" class=\"form-label\">Source IP</label>\n                  <input type=\"text\" id=\"source\" v-model=\"newRule.source\" class=\"form-control\" placeholder=\"e.g., 192.168.1.0/24\">\n                </div>\n                <div class=\"col-md-6 mb-3\">\n                  <label for=\"destination\" class=\"form-label\">Destination IP</label>\n                  <input type=\"text\" id=\"destination\" v-model=\"newRule.destination\" class=\"form-control\" placeholder=\"e.g., 10.0.0.0/8\">\n                </div>\n              </div>\n              \n              <div class=\"row\">\n                <div class=\"col-md-6 mb-3\">\n                  <label for=\"protocol\" class=\"form-label\">Protocol</label>\n                  <select id=\"protocol\" v-model=\"newRule.protocol\" class=\"form-select\">\n                    <option value=\"\">Any</option>\n                    <option value=\"tcp\">TCP</option>\n                    <option value=\"udp\">UDP</option>\n                    <option value=\"icmp\">ICMP</option>\n                  </select>\n                </div>\n                <div class=\"col-md-6 mb-3\">\n                  <label for=\"port\" class=\"form-label\">Port</label>\n                  <input type=\"text\" id=\"port\" v-model=\"newRule.port\" class=\"form-control\" placeholder=\"e.g., 80, 443, 22\">\n                </div>\n              </div>\n            </form>\n          </div>\n          <div class=\"modal-footer\">\n            <button type=\"button\" class=\"btn btn-secondary\" @click=\"showAddRuleModal = false\">Cancel</button>\n            <button type=\"button\" class=\"btn btn-primary\" @click=\"addRule\" :disabled=\"addingRule\">\n              <span v-if=\"addingRule\" class=\"spinner-border spinner-border-sm me-1\"></span>\n              Add Rule\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- Toast Notifications -->\n    <div class=\"toast-container position-fixed bottom-0 end-0 p-3\">\n      <div v-if=\"toast.show\" class=\"toast show\" role=\"alert\">\n        <div class=\"toast-header\">\n          <i :class=\"toast.type === 'success' ? 'bi bi-check-circle-fill text-success' : 'bi bi-exclamation-triangle-fill text-danger'\"></i>\n          <strong class=\"ms-2\">{{ toast.type === 'success' ? 'Success' : 'Error' }}</strong>\n          <button type=\"button\" class=\"btn-close ms-auto\" @click=\"toast.show = false\"></button>\n        </div>\n        <div class=\"toast-body\">\n          {{ toast.message }}\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, onMounted } from 'vue'\nimport { fetchGet, fetchPost, fetchDelete } from '@/utilities/fetch.js'\n\n// Reactive data\nconst loading = ref(true)\nconst addingRule = ref(false)\nconst showAddRuleModal = ref(false)\nconst firewallRules = ref([])\nconst originalRules = ref([])\nconst newRule = ref({\n  chain: '',\n  target: '',\n  source: '',\n  destination: '',\n  protocol: '',\n  port: ''\n})\nconst toast = ref({\n  show: false,\n  type: 'success',\n  message: ''\n})\n\n// Drag & Drop variables\nconst draggedIndex = ref(null)\nconst dragOverIndex = ref(null)\nconst hasUnsavedChanges = ref(false)\nconst savingOrder = ref(false)\n\n// Methods\nconst loadFirewallRules = async () => {\n  try {\n    loading.value = true\n    const response = await fetchGet('/api/firewall/rules')\n    if (response.status) {\n      firewallRules.value = response.data || []\n      originalRules.value = JSON.parse(JSON.stringify(firewallRules.value))\n      hasUnsavedChanges.value = false\n    } else {\n      showToast('error', 'Failed to load firewall rules')\n    }\n  } catch (error) {\n    showToast('error', 'Error loading firewall rules: ' + error.message)\n  } finally {\n    loading.value = false\n  }\n}\n\nconst addRule = async () => {\n  try {\n    addingRule.value = true\n    const response = await fetchPost('/api/firewall/rules', newRule.value)\n    if (response.status) {\n      showToast('success', 'Firewall rule added successfully')\n      showAddRuleModal.value = false\n      resetNewRule()\n      await loadFirewallRules()\n    } else {\n      showToast('error', response.message || 'Failed to add firewall rule')\n    }\n  } catch (error) {\n    showToast('error', 'Error adding firewall rule: ' + error.message)\n  } finally {\n    addingRule.value = false\n  }\n}\n\nconst deleteRule = async (ruleId) => {\n  if (!confirm('Are you sure you want to delete this firewall rule?')) {\n    return\n  }\n  \n  try {\n    const response = await fetchDelete(`/api/firewall/rules/${ruleId}`)\n    if (response.status) {\n      showToast('success', 'Firewall rule deleted successfully')\n      await loadFirewallRules()\n    } else {\n      showToast('error', response.message || 'Failed to delete firewall rule')\n    }\n  } catch (error) {\n    showToast('error', 'Error deleting firewall rule: ' + error.message)\n  }\n}\n\nconst reloadRules = async () => {\n  try {\n    const response = await fetchPost('/api/firewall/reload', {})\n    if (response.status) {\n      showToast('success', 'Firewall rules reloaded successfully')\n      await loadFirewallRules()\n    } else {\n      showToast('error', response.message || 'Failed to reload firewall rules')\n    }\n  } catch (error) {\n    showToast('error', 'Error reloading firewall rules: ' + error.message)\n  }\n}\n\nconst resetNewRule = () => {\n  newRule.value = {\n    chain: '',\n    target: '',\n    source: '',\n    destination: '',\n    protocol: '',\n    port: ''\n  }\n}\n\nconst showToast = (type, message) => {\n  toast.value = {\n    show: true,\n    type,\n    message\n  }\n  setTimeout(() => {\n    toast.value.show = false\n  }, 5000)\n}\n\nconst getTargetBadgeClass = (target) => {\n  switch (target) {\n    case 'ACCEPT': return 'bg-success'\n    case 'DROP': return 'bg-danger'\n    case 'REJECT': return 'bg-warning'\n    default: return 'bg-secondary'\n  }\n}\n\n// Drag & Drop Methods\nconst handleDragStart = (index, event) => {\n  draggedIndex.value = index\n  event.dataTransfer.effectAllowed = 'move'\n  event.dataTransfer.setData('text/html', event.target.outerHTML)\n  event.target.style.opacity = '0.5'\n}\n\nconst handleDragOver = (event) => {\n  event.preventDefault()\n  event.dataTransfer.dropEffect = 'move'\n}\n\nconst handleDrop = (index, event) => {\n  event.preventDefault()\n  \n  if (draggedIndex.value === null || draggedIndex.value === index) {\n    return\n  }\n  \n  // Move rule in array\n  const draggedRule = firewallRules.value[draggedIndex.value]\n  firewallRules.value.splice(draggedIndex.value, 1)\n  firewallRules.value.splice(index, 0, draggedRule)\n  \n  // Mark as having unsaved changes\n  hasUnsavedChanges.value = true\n  \n  draggedIndex.value = null\n  dragOverIndex.value = null\n}\n\nconst handleDragEnd = (event) => {\n  event.target.style.opacity = ''\n  draggedIndex.value = null\n  dragOverIndex.value = null\n}\n\nconst saveRuleOrder = async () => {\n  try {\n    savingOrder.value = true\n    \n    // Prepare rules data for API\n    const rulesData = firewallRules.value.map((rule, index) => ({\n      id: rule.id,\n      position: index + 1\n    }))\n    \n    const response = await fetch('/api/firewall/reorder', {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ rules: rulesData })\n    }).then(res => res.json())\n    \n    if (response.status) {\n      showToast('success', 'Firewall rules reordered successfully')\n      originalRules.value = JSON.parse(JSON.stringify(firewallRules.value))\n      hasUnsavedChanges.value = false\n    } else {\n      showToast('error', response.message || 'Failed to save rule order')\n      // Revert to original order\n      firewallRules.value = JSON.parse(JSON.stringify(originalRules.value))\n    }\n  } catch (error) {\n    showToast('error', 'Error saving rule order: ' + error.message)\n    // Revert to original order\n    firewallRules.value = JSON.parse(JSON.stringify(originalRules.value))\n  } finally {\n    savingOrder.value = false\n  }\n}\n\n// Lifecycle\nonMounted(() => {\n  loadFirewallRules()\n})\n</script>\n\n<style scoped>\n.table th {\n  border-top: none;\n}\n\n.badge {\n  font-size: 0.75em;\n}\n\n.modal {\n  z-index: 1055;\n}\n\n.toast {\n  z-index: 1060;\n}\n\n/* pfSense-style improvements */\n.card-footer {\n  padding: 1rem;\n  background-color: #f8f9fa !important;\n  border-top: 1px solid #e9ecef !important;\n}\n\n/* Dark theme card footer */\n[data-bs-theme=\"dark\"] .card-footer {\n  background-color: #2d3748 !important;\n  border-top: 1px solid #4a5568 !important;\n}\n\n.bg-subtle {\n  background-color: #f8f9fa !important;\n}\n\n/* Dark theme subtle background */\n[data-bs-theme=\"dark\"] .bg-subtle {\n  background-color: #2d3748 !important;\n}\n\n.btn-group .btn {\n  margin-left: 0.25rem;\n}\n\n.btn-group .btn:first-child {\n  margin-left: 0;\n}\n\n.table-responsive {\n  border-radius: 0.375rem;\n}\n\n.table thead th {\n  font-weight: 600;\n  font-size: 0.875rem;\n  text-transform: uppercase;\n  letter-spacing: 0.05em;\n  background-color: #343a40;\n  color: #ffffff;\n}\n\n/* Dark theme table header */\n[data-bs-theme=\"dark\"] .table thead th {\n  background-color: #4a5568;\n  color: #ffffff;\n}\n\n.table tbody td {\n  vertical-align: middle;\n  font-size: 0.875rem;\n  background-color: #ffffff;\n}\n\n/* Dark theme table body */\n[data-bs-theme=\"dark\"] .table tbody td {\n  background-color: #1a202c;\n  color: #e2e8f0;\n}\n\n.table tbody tr:nth-child(even) td {\n  background-color: #f8f9fa;\n}\n\n/* Dark theme even rows */\n[data-bs-theme=\"dark\"] .table tbody tr:nth-child(even) td {\n  background-color: #2d3748;\n}\n\n.table tbody tr:hover td {\n  background-color: #e9ecef;\n}\n\n/* Dark theme hover */\n[data-bs-theme=\"dark\"] .table tbody tr:hover td {\n  background-color: #4a5568;\n}\n\n/* Enhanced button styling - softer colors */\n.btn-primary {\n  background-color: #0d6efd;\n  border-color: #0d6efd;\n  color: #ffffff;\n}\n\n.btn-primary:hover {\n  background-color: #0b5ed7;\n  border-color: #0a58ca;\n}\n\n.btn-outline-secondary {\n  background-color: transparent;\n  border-color: #6c757d;\n  color: #6c757d;\n}\n\n.btn-outline-secondary:hover {\n  background-color: #6c757d;\n  border-color: #6c757d;\n  color: #ffffff;\n}\n\n/* Rule counter styling */\n.text-muted {\n  font-size: 0.875rem;\n  font-weight: 500;\n  color: #6c757d !important;\n}\n\n/* Dark theme rule counter */\n[data-bs-theme=\"dark\"] .text-muted {\n  color: #a0aec0 !important;\n}\n\n/* Card styling improvements */\n.card {\n  border: 1px solid #dee2e6;\n  box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);\n}\n\n/* Dark theme card */\n[data-bs-theme=\"dark\"] .card {\n  border: 1px solid #4a5568;\n  box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.3);\n  background-color: #1a202c;\n}\n\n.card-header {\n  background-color: #f8f9fa;\n  border-bottom: 1px solid #dee2e6;\n  color: #495057;\n}\n\n/* Dark theme card header */\n[data-bs-theme=\"dark\"] .card-header {\n  background-color: #2d3748;\n  border-bottom: 1px solid #4a5568;\n  color: #e2e8f0;\n}\n\n/* Badge improvements */\n.badge {\n  font-size: 0.75em;\n  font-weight: 500;\n}\n\n.badge.bg-secondary {\n  background-color: #6c757d !important;\n}\n\n.badge.bg-info {\n  background-color: #0dcaf0 !important;\n}\n\n.badge.bg-success {\n  background-color: #198754 !important;\n}\n\n.badge.bg-danger {\n  background-color: #dc3545 !important;\n}\n\n.badge.bg-warning {\n  background-color: #ffc107 !important;\n  color: #000000 !important;\n}\n\n/* Drag & Drop Styling */\n.draggable-row {\n  cursor: move;\n  transition: all 0.2s ease;\n}\n\n.draggable-row:hover {\n  background-color: #f8f9fa;\n}\n\n[data-bs-theme=\"dark\"] .draggable-row:hover {\n  background-color: #2d3748;\n}\n\n.draggable-row.drag-over {\n  border-top: 2px solid #0d6efd;\n  background-color: #e3f2fd;\n}\n\n[data-bs-theme=\"dark\"] .draggable-row.drag-over {\n  border-top: 2px solid #0d6efd;\n  background-color: #1e3a8a;\n}\n\n.drag-handle {\n  cursor: grab;\n  user-select: none;\n}\n\n.drag-handle:active {\n  cursor: grabbing;\n}\n\n.cursor-grab {\n  cursor: grab;\n}\n\n.cursor-grab:active {\n  cursor: grabbing;\n}\n\n/* Save button styling */\n.btn-success {\n  background-color: #198754;\n  border-color: #198754;\n}\n\n.btn-success:hover:not(:disabled) {\n  background-color: #157347;\n  border-color: #146c43;\n}\n\n.btn-success:disabled {\n  opacity: 0.6;\n  cursor: not-allowed;\n}\n</style>\n"],"names":["loading","ref","addingRule","showAddRuleModal","firewallRules","originalRules","newRule","toast","draggedIndex","dragOverIndex","hasUnsavedChanges","savingOrder","loadFirewallRules","response","fetchGet","showToast","error","addRule","fetchPost","resetNewRule","deleteRule","ruleId","fetchDelete","reloadRules","type","message","getTargetBadgeClass","target","handleDragStart","index","event","handleDragOver","handleDrop","draggedRule","handleDragEnd","saveRuleOrder","rulesData","rule","res","onMounted"],"mappings":"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"}