{"version":3,"file":"index-CYCG-erH.js","sources":["../../node_modules/@kurkle/color/dist/color.esm.js","../../node_modules/chart.js/dist/chunks/helpers.segment.js","../../node_modules/chart.js/dist/chart.js","../../node_modules/vue-chartjs/dist/index.js"],"sourcesContent":["/*!\n * @kurkle/color v0.3.2\n * https://github.com/kurkle/color#readme\n * (c) 2023 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n  x: 'dark',\n  Z: 'light',\n  Y: 're',\n  X: 'blu',\n  W: 'gr',\n  V: 'medium',\n  U: 'slate',\n  A: 'ee',\n  T: 'ol',\n  S: 'or',\n  B: 'ra',\n  C: 'lateg',\n  D: 'ights',\n  R: 'in',\n  Q: 'turquois',\n  E: 'hi',\n  P: 'ro',\n  O: 'al',\n  N: 'le',\n  M: 'de',\n  L: 'yello',\n  F: 'en',\n  K: 'ch',\n  G: 'arks',\n  H: 'ea',\n  I: 'ightg',\n  J: 'wh'\n};\nconst names$1 = {\n  OiceXe: 'f0f8ff',\n  antiquewEte: 'faebd7',\n  aqua: 'ffff',\n  aquamarRe: '7fffd4',\n  azuY: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '0',\n  blanKedOmond: 'ffebcd',\n  Xe: 'ff',\n  XeviTet: '8a2be2',\n  bPwn: 'a52a2a',\n  burlywood: 'deb887',\n  caMtXe: '5f9ea0',\n  KartYuse: '7fff00',\n  KocTate: 'd2691e',\n  cSO: 'ff7f50',\n  cSnflowerXe: '6495ed',\n  cSnsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: 'ffff',\n  xXe: '8b',\n  xcyan: '8b8b',\n  xgTMnPd: 'b8860b',\n  xWay: 'a9a9a9',\n  xgYF: '6400',\n  xgYy: 'a9a9a9',\n  xkhaki: 'bdb76b',\n  xmagFta: '8b008b',\n  xTivegYF: '556b2f',\n  xSange: 'ff8c00',\n  xScEd: '9932cc',\n  xYd: '8b0000',\n  xsOmon: 'e9967a',\n  xsHgYF: '8fbc8f',\n  xUXe: '483d8b',\n  xUWay: '2f4f4f',\n  xUgYy: '2f4f4f',\n  xQe: 'ced1',\n  xviTet: '9400d3',\n  dAppRk: 'ff1493',\n  dApskyXe: 'bfff',\n  dimWay: '696969',\n  dimgYy: '696969',\n  dodgerXe: '1e90ff',\n  fiYbrick: 'b22222',\n  flSOwEte: 'fffaf0',\n  foYstWAn: '228b22',\n  fuKsia: 'ff00ff',\n  gaRsbSo: 'dcdcdc',\n  ghostwEte: 'f8f8ff',\n  gTd: 'ffd700',\n  gTMnPd: 'daa520',\n  Way: '808080',\n  gYF: '8000',\n  gYFLw: 'adff2f',\n  gYy: '808080',\n  honeyMw: 'f0fff0',\n  hotpRk: 'ff69b4',\n  RdianYd: 'cd5c5c',\n  Rdigo: '4b0082',\n  ivSy: 'fffff0',\n  khaki: 'f0e68c',\n  lavFMr: 'e6e6fa',\n  lavFMrXsh: 'fff0f5',\n  lawngYF: '7cfc00',\n  NmoncEffon: 'fffacd',\n  ZXe: 'add8e6',\n  ZcSO: 'f08080',\n  Zcyan: 'e0ffff',\n  ZgTMnPdLw: 'fafad2',\n  ZWay: 'd3d3d3',\n  ZgYF: '90ee90',\n  ZgYy: 'd3d3d3',\n  ZpRk: 'ffb6c1',\n  ZsOmon: 'ffa07a',\n  ZsHgYF: '20b2aa',\n  ZskyXe: '87cefa',\n  ZUWay: '778899',\n  ZUgYy: '778899',\n  ZstAlXe: 'b0c4de',\n  ZLw: 'ffffe0',\n  lime: 'ff00',\n  limegYF: '32cd32',\n  lRF: 'faf0e6',\n  magFta: 'ff00ff',\n  maPon: '800000',\n  VaquamarRe: '66cdaa',\n  VXe: 'cd',\n  VScEd: 'ba55d3',\n  VpurpN: '9370db',\n  VsHgYF: '3cb371',\n  VUXe: '7b68ee',\n  VsprRggYF: 'fa9a',\n  VQe: '48d1cc',\n  VviTetYd: 'c71585',\n  midnightXe: '191970',\n  mRtcYam: 'f5fffa',\n  mistyPse: 'ffe4e1',\n  moccasR: 'ffe4b5',\n  navajowEte: 'ffdead',\n  navy: '80',\n  Tdlace: 'fdf5e6',\n  Tive: '808000',\n  TivedBb: '6b8e23',\n  Sange: 'ffa500',\n  SangeYd: 'ff4500',\n  ScEd: 'da70d6',\n  pOegTMnPd: 'eee8aa',\n  pOegYF: '98fb98',\n  pOeQe: 'afeeee',\n  pOeviTetYd: 'db7093',\n  papayawEp: 'ffefd5',\n  pHKpuff: 'ffdab9',\n  peru: 'cd853f',\n  pRk: 'ffc0cb',\n  plum: 'dda0dd',\n  powMrXe: 'b0e0e6',\n  purpN: '800080',\n  YbeccapurpN: '663399',\n  Yd: 'ff0000',\n  Psybrown: 'bc8f8f',\n  PyOXe: '4169e1',\n  saddNbPwn: '8b4513',\n  sOmon: 'fa8072',\n  sandybPwn: 'f4a460',\n  sHgYF: '2e8b57',\n  sHshell: 'fff5ee',\n  siFna: 'a0522d',\n  silver: 'c0c0c0',\n  skyXe: '87ceeb',\n  UXe: '6a5acd',\n  UWay: '708090',\n  UgYy: '708090',\n  snow: 'fffafa',\n  sprRggYF: 'ff7f',\n  stAlXe: '4682b4',\n  tan: 'd2b48c',\n  teO: '8080',\n  tEstN: 'd8bfd8',\n  tomato: 'ff6347',\n  Qe: '40e0d0',\n  viTet: 'ee82ee',\n  JHt: 'f5deb3',\n  wEte: 'ffffff',\n  wEtesmoke: 'f5f5f5',\n  Lw: 'ffff00',\n  LwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n","/*!\n * Chart.js v4.4.4\n * https://www.chartjs.org\n * (c) 2024 Chart.js Contributors\n * Released under the MIT License\n */\nimport { Color } from '@kurkle/color';\n\n/**\n * @namespace Chart.helpers\n */ /**\n * An empty function that can be used, for example, for optional callback.\n */ function noop() {\n/* noop */ }\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */ const uid = (()=>{\n    let id = 0;\n    return ()=>id++;\n})();\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isNullOrUndef(value) {\n    return value === null || typeof value === 'undefined';\n}\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */ function isArray(value) {\n    if (Array.isArray && Array.isArray(value)) {\n        return true;\n    }\n    const type = Object.prototype.toString.call(value);\n    if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n        return true;\n    }\n    return false;\n}\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isObject(value) {\n    return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */ function isNumberFinite(value) {\n    return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */ function finiteOrDefault(value, defaultValue) {\n    return isNumberFinite(value) ? value : defaultValue;\n}\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */ function valueOrDefault(value, defaultValue) {\n    return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 : +value / dimension;\nconst toDimension = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 * dimension : +value;\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */ function callback(fn, args, thisArg) {\n    if (fn && typeof fn.call === 'function') {\n        return fn.apply(thisArg, args);\n    }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n    let i, len, keys;\n    if (isArray(loopable)) {\n        len = loopable.length;\n        if (reverse) {\n            for(i = len - 1; i >= 0; i--){\n                fn.call(thisArg, loopable[i], i);\n            }\n        } else {\n            for(i = 0; i < len; i++){\n                fn.call(thisArg, loopable[i], i);\n            }\n        }\n    } else if (isObject(loopable)) {\n        keys = Object.keys(loopable);\n        len = keys.length;\n        for(i = 0; i < len; i++){\n            fn.call(thisArg, loopable[keys[i]], keys[i]);\n        }\n    }\n}\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */ function _elementsEqual(a0, a1) {\n    let i, ilen, v0, v1;\n    if (!a0 || !a1 || a0.length !== a1.length) {\n        return false;\n    }\n    for(i = 0, ilen = a0.length; i < ilen; ++i){\n        v0 = a0[i];\n        v1 = a1[i];\n        if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */ function clone(source) {\n    if (isArray(source)) {\n        return source.map(clone);\n    }\n    if (isObject(source)) {\n        const target = Object.create(null);\n        const keys = Object.keys(source);\n        const klen = keys.length;\n        let k = 0;\n        for(; k < klen; ++k){\n            target[keys[k]] = clone(source[keys[k]]);\n        }\n        return target;\n    }\n    return source;\n}\nfunction isValidKey(key) {\n    return [\n        '__proto__',\n        'prototype',\n        'constructor'\n    ].indexOf(key) === -1;\n}\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */ function _merger(key, target, source, options) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        merge(tval, sval, options);\n    } else {\n        target[key] = clone(sval);\n    }\n}\nfunction merge(target, source, options) {\n    const sources = isArray(source) ? source : [\n        source\n    ];\n    const ilen = sources.length;\n    if (!isObject(target)) {\n        return target;\n    }\n    options = options || {};\n    const merger = options.merger || _merger;\n    let current;\n    for(let i = 0; i < ilen; ++i){\n        current = sources[i];\n        if (!isObject(current)) {\n            continue;\n        }\n        const keys = Object.keys(current);\n        for(let k = 0, klen = keys.length; k < klen; ++k){\n            merger(keys[k], target, current, options);\n        }\n    }\n    return target;\n}\nfunction mergeIf(target, source) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    return merge(target, source, {\n        merger: _mergerIf\n    });\n}\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */ function _mergerIf(key, target, source) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        mergeIf(tval, sval);\n    } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n        target[key] = clone(sval);\n    }\n}\n/**\n * @private\n */ function _deprecated(scope, value, previous, current) {\n    if (value !== undefined) {\n        console.warn(scope + ': \"' + previous + '\" is deprecated. Please use \"' + current + '\" instead');\n    }\n}\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n    // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n    '': (v)=>v,\n    // default resolvers\n    x: (o)=>o.x,\n    y: (o)=>o.y\n};\n/**\n * @private\n */ function _splitKey(key) {\n    const parts = key.split('.');\n    const keys = [];\n    let tmp = '';\n    for (const part of parts){\n        tmp += part;\n        if (tmp.endsWith('\\\\')) {\n            tmp = tmp.slice(0, -1) + '.';\n        } else {\n            keys.push(tmp);\n            tmp = '';\n        }\n    }\n    return keys;\n}\nfunction _getKeyResolver(key) {\n    const keys = _splitKey(key);\n    return (obj)=>{\n        for (const k of keys){\n            if (k === '') {\n                break;\n            }\n            obj = obj && obj[k];\n        }\n        return obj;\n    };\n}\nfunction resolveObjectKey(obj, key) {\n    const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n    return resolver(obj);\n}\n/**\n * @private\n */ function _capitalize(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value)=>typeof value !== 'undefined';\nconst isFunction = (value)=>typeof value === 'function';\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nconst setsEqual = (a, b)=>{\n    if (a.size !== b.size) {\n        return false;\n    }\n    for (const item of a){\n        if (!b.has(item)) {\n            return false;\n        }\n    }\n    return true;\n};\n/**\n * @param e - The event\n * @private\n */ function _isClickEvent(e) {\n    return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */ const PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction almostEquals(x, y, epsilon) {\n    return Math.abs(x - y) < epsilon;\n}\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */ function niceNum(range) {\n    const roundedRange = Math.round(range);\n    range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n    const niceRange = Math.pow(10, Math.floor(log10(range)));\n    const fraction = range / niceRange;\n    const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n    return niceFraction * niceRange;\n}\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */ function _factorize(value) {\n    const result = [];\n    const sqrt = Math.sqrt(value);\n    let i;\n    for(i = 1; i < sqrt; i++){\n        if (value % i === 0) {\n            result.push(i);\n            result.push(value / i);\n        }\n    }\n    if (sqrt === (sqrt | 0)) {\n        result.push(sqrt);\n    }\n    result.sort((a, b)=>a - b).pop();\n    return result;\n}\nfunction isNumber(n) {\n    return !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostWhole(x, epsilon) {\n    const rounded = Math.round(x);\n    return rounded - epsilon <= x && rounded + epsilon >= x;\n}\n/**\n * @private\n */ function _setMinAndMaxByKey(array, target, property) {\n    let i, ilen, value;\n    for(i = 0, ilen = array.length; i < ilen; i++){\n        value = array[i][property];\n        if (!isNaN(value)) {\n            target.min = Math.min(target.min, value);\n            target.max = Math.max(target.max, value);\n        }\n    }\n}\nfunction toRadians(degrees) {\n    return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n    return radians * (180 / PI);\n}\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */ function _decimalPlaces(x) {\n    if (!isNumberFinite(x)) {\n        return;\n    }\n    let e = 1;\n    let p = 0;\n    while(Math.round(x * e) / e !== x){\n        e *= 10;\n        p++;\n    }\n    return p;\n}\n// Gets the angle from vertical upright to the point about a centre.\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n    const distanceFromXCenter = anglePoint.x - centrePoint.x;\n    const distanceFromYCenter = anglePoint.y - centrePoint.y;\n    const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n    let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n    if (angle < -0.5 * PI) {\n        angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n    }\n    return {\n        angle,\n        distance: radialDistanceFromCenter\n    };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n    return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */ function _angleDiff(a, b) {\n    return (a - b + PITAU) % TAU - PI;\n}\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */ function _normalizeAngle(a) {\n    return (a % TAU + TAU) % TAU;\n}\n/**\n * @private\n */ function _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n    const a = _normalizeAngle(angle);\n    const s = _normalizeAngle(start);\n    const e = _normalizeAngle(end);\n    const angleToStart = _normalizeAngle(s - a);\n    const angleToEnd = _normalizeAngle(e - a);\n    const startToAngle = _normalizeAngle(a - s);\n    const endToAngle = _normalizeAngle(a - e);\n    return a === s || a === e || sameAngleIsFullCircle && s === e || angleToStart > angleToEnd && startToAngle < endToAngle;\n}\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */ function _limitValue(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n}\n/**\n * @param {number} value\n * @private\n */ function _int16Range(value) {\n    return _limitValue(value, -32768, 32767);\n}\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */ function _isBetween(value, start, end, epsilon = 1e-6) {\n    return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n\nfunction _lookup(table, value, cmp) {\n    cmp = cmp || ((index)=>table[index] < value);\n    let hi = table.length - 1;\n    let lo = 0;\n    let mid;\n    while(hi - lo > 1){\n        mid = lo + hi >> 1;\n        if (cmp(mid)) {\n            lo = mid;\n        } else {\n            hi = mid;\n        }\n    }\n    return {\n        lo,\n        hi\n    };\n}\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */ const _lookupByKey = (table, key, value, last)=>_lookup(table, value, last ? (index)=>{\n        const ti = table[index][key];\n        return ti < value || ti === value && table[index + 1][key] === value;\n    } : (index)=>table[index][key] < value);\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */ const _rlookupByKey = (table, key, value)=>_lookup(table, value, (index)=>table[index][key] >= value);\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */ function _filterBetween(values, min, max) {\n    let start = 0;\n    let end = values.length;\n    while(start < end && values[start] < min){\n        start++;\n    }\n    while(end > start && values[end - 1] > max){\n        end--;\n    }\n    return start > 0 || end < values.length ? values.slice(start, end) : values;\n}\nconst arrayEvents = [\n    'push',\n    'pop',\n    'shift',\n    'splice',\n    'unshift'\n];\nfunction listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n        array._chartjs.listeners.push(listener);\n        return;\n    }\n    Object.defineProperty(array, '_chartjs', {\n        configurable: true,\n        enumerable: false,\n        value: {\n            listeners: [\n                listener\n            ]\n        }\n    });\n    arrayEvents.forEach((key)=>{\n        const method = '_onData' + _capitalize(key);\n        const base = array[key];\n        Object.defineProperty(array, key, {\n            configurable: true,\n            enumerable: false,\n            value (...args) {\n                const res = base.apply(this, args);\n                array._chartjs.listeners.forEach((object)=>{\n                    if (typeof object[method] === 'function') {\n                        object[method](...args);\n                    }\n                });\n                return res;\n            }\n        });\n    });\n}\nfunction unlistenArrayEvents(array, listener) {\n    const stub = array._chartjs;\n    if (!stub) {\n        return;\n    }\n    const listeners = stub.listeners;\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n        listeners.splice(index, 1);\n    }\n    if (listeners.length > 0) {\n        return;\n    }\n    arrayEvents.forEach((key)=>{\n        delete array[key];\n    });\n    delete array._chartjs;\n}\n/**\n * @param items\n */ function _arrayUnique(items) {\n    const set = new Set(items);\n    if (set.size === items.length) {\n        return items;\n    }\n    return Array.from(set);\n}\n\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n    return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n/**\n* Request animation polyfill\n*/ const requestAnimFrame = function() {\n    if (typeof window === 'undefined') {\n        return function(callback) {\n            return callback();\n        };\n    }\n    return window.requestAnimationFrame;\n}();\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */ function throttled(fn, thisArg) {\n    let argsToUse = [];\n    let ticking = false;\n    return function(...args) {\n        // Save the args for use later\n        argsToUse = args;\n        if (!ticking) {\n            ticking = true;\n            requestAnimFrame.call(window, ()=>{\n                ticking = false;\n                fn.apply(thisArg, argsToUse);\n            });\n        }\n    };\n}\n/**\n * Debounces calling `fn` for `delay` ms\n */ function debounce(fn, delay) {\n    let timeout;\n    return function(...args) {\n        if (delay) {\n            clearTimeout(timeout);\n            timeout = setTimeout(fn, delay, args);\n        } else {\n            fn.apply(this, args);\n        }\n        return delay;\n    };\n}\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */ const _toLeftRightCenter = (align)=>align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */ const _alignStartEnd = (align, start, end)=>align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */ const _textX = (align, left, right, rtl)=>{\n    const check = rtl ? 'left' : 'right';\n    return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n/**\n * Return start and count of visible points.\n * @private\n */ function _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n    const pointCount = points.length;\n    let start = 0;\n    let count = pointCount;\n    if (meta._sorted) {\n        const { iScale , _parsed  } = meta;\n        const axis = iScale.axis;\n        const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n        if (minDefined) {\n            start = _limitValue(Math.min(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, axis, min).lo, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo), 0, pointCount - 1);\n        }\n        if (maxDefined) {\n            count = _limitValue(Math.max(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, iScale.axis, max, true).hi + 1, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1), start, pointCount) - start;\n        } else {\n            count = pointCount - start;\n        }\n    }\n    return {\n        start,\n        count\n    };\n}\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */ function _scaleRangesChanged(meta) {\n    const { xScale , yScale , _scaleRanges  } = meta;\n    const newRanges = {\n        xmin: xScale.min,\n        xmax: xScale.max,\n        ymin: yScale.min,\n        ymax: yScale.max\n    };\n    if (!_scaleRanges) {\n        meta._scaleRanges = newRanges;\n        return true;\n    }\n    const changed = _scaleRanges.xmin !== xScale.min || _scaleRanges.xmax !== xScale.max || _scaleRanges.ymin !== yScale.min || _scaleRanges.ymax !== yScale.max;\n    Object.assign(_scaleRanges, newRanges);\n    return changed;\n}\n\nconst atEdge = (t)=>t === 0 || t === 1;\nconst elasticIn = (t, s, p)=>-(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p)=>Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */ const effects = {\n    linear: (t)=>t,\n    easeInQuad: (t)=>t * t,\n    easeOutQuad: (t)=>-t * (t - 2),\n    easeInOutQuad: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t : -0.5 * (--t * (t - 2) - 1),\n    easeInCubic: (t)=>t * t * t,\n    easeOutCubic: (t)=>(t -= 1) * t * t + 1,\n    easeInOutCubic: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t : 0.5 * ((t -= 2) * t * t + 2),\n    easeInQuart: (t)=>t * t * t * t,\n    easeOutQuart: (t)=>-((t -= 1) * t * t * t - 1),\n    easeInOutQuart: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t : -0.5 * ((t -= 2) * t * t * t - 2),\n    easeInQuint: (t)=>t * t * t * t * t,\n    easeOutQuint: (t)=>(t -= 1) * t * t * t * t + 1,\n    easeInOutQuint: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t * t : 0.5 * ((t -= 2) * t * t * t * t + 2),\n    easeInSine: (t)=>-Math.cos(t * HALF_PI) + 1,\n    easeOutSine: (t)=>Math.sin(t * HALF_PI),\n    easeInOutSine: (t)=>-0.5 * (Math.cos(PI * t) - 1),\n    easeInExpo: (t)=>t === 0 ? 0 : Math.pow(2, 10 * (t - 1)),\n    easeOutExpo: (t)=>t === 1 ? 1 : -Math.pow(2, -10 * t) + 1,\n    easeInOutExpo: (t)=>atEdge(t) ? t : t < 0.5 ? 0.5 * Math.pow(2, 10 * (t * 2 - 1)) : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n    easeInCirc: (t)=>t >= 1 ? t : -(Math.sqrt(1 - t * t) - 1),\n    easeOutCirc: (t)=>Math.sqrt(1 - (t -= 1) * t),\n    easeInOutCirc: (t)=>(t /= 0.5) < 1 ? -0.5 * (Math.sqrt(1 - t * t) - 1) : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n    easeInElastic: (t)=>atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n    easeOutElastic: (t)=>atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n    easeInOutElastic (t) {\n        const s = 0.1125;\n        const p = 0.45;\n        return atEdge(t) ? t : t < 0.5 ? 0.5 * elasticIn(t * 2, s, p) : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n    },\n    easeInBack (t) {\n        const s = 1.70158;\n        return t * t * ((s + 1) * t - s);\n    },\n    easeOutBack (t) {\n        const s = 1.70158;\n        return (t -= 1) * t * ((s + 1) * t + s) + 1;\n    },\n    easeInOutBack (t) {\n        let s = 1.70158;\n        if ((t /= 0.5) < 1) {\n            return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n        }\n        return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: (t)=>1 - effects.easeOutBounce(1 - t),\n    easeOutBounce (t) {\n        const m = 7.5625;\n        const d = 2.75;\n        if (t < 1 / d) {\n            return m * t * t;\n        }\n        if (t < 2 / d) {\n            return m * (t -= 1.5 / d) * t + 0.75;\n        }\n        if (t < 2.5 / d) {\n            return m * (t -= 2.25 / d) * t + 0.9375;\n        }\n        return m * (t -= 2.625 / d) * t + 0.984375;\n    },\n    easeInOutBounce: (t)=>t < 0.5 ? effects.easeInBounce(t * 2) * 0.5 : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5\n};\n\nfunction isPatternOrGradient(value) {\n    if (value && typeof value === 'object') {\n        const type = value.toString();\n        return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n    }\n    return false;\n}\nfunction color(value) {\n    return isPatternOrGradient(value) ? value : new Color(value);\n}\nfunction getHoverColor(value) {\n    return isPatternOrGradient(value) ? value : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n\nconst numbers = [\n    'x',\n    'y',\n    'borderWidth',\n    'radius',\n    'tension'\n];\nconst colors = [\n    'color',\n    'borderColor',\n    'backgroundColor'\n];\nfunction applyAnimationsDefaults(defaults) {\n    defaults.set('animation', {\n        delay: undefined,\n        duration: 1000,\n        easing: 'easeOutQuart',\n        fn: undefined,\n        from: undefined,\n        loop: undefined,\n        to: undefined,\n        type: undefined\n    });\n    defaults.describe('animation', {\n        _fallback: false,\n        _indexable: false,\n        _scriptable: (name)=>name !== 'onProgress' && name !== 'onComplete' && name !== 'fn'\n    });\n    defaults.set('animations', {\n        colors: {\n            type: 'color',\n            properties: colors\n        },\n        numbers: {\n            type: 'number',\n            properties: numbers\n        }\n    });\n    defaults.describe('animations', {\n        _fallback: 'animation'\n    });\n    defaults.set('transitions', {\n        active: {\n            animation: {\n                duration: 400\n            }\n        },\n        resize: {\n            animation: {\n                duration: 0\n            }\n        },\n        show: {\n            animations: {\n                colors: {\n                    from: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    duration: 0\n                }\n            }\n        },\n        hide: {\n            animations: {\n                colors: {\n                    to: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    easing: 'linear',\n                    fn: (v)=>v | 0\n                }\n            }\n        }\n    });\n}\n\nfunction applyLayoutsDefaults(defaults) {\n    defaults.set('layout', {\n        autoPadding: true,\n        padding: {\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0\n        }\n    });\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n    options = options || {};\n    const cacheKey = locale + JSON.stringify(options);\n    let formatter = intlCache.get(cacheKey);\n    if (!formatter) {\n        formatter = new Intl.NumberFormat(locale, options);\n        intlCache.set(cacheKey, formatter);\n    }\n    return formatter;\n}\nfunction formatNumber(num, locale, options) {\n    return getNumberFormat(locale, options).format(num);\n}\n\nconst formatters = {\n values (value) {\n        return isArray(value) ?  value : '' + value;\n    },\n numeric (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const locale = this.chart.options.locale;\n        let notation;\n        let delta = tickValue;\n        if (ticks.length > 1) {\n            const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n            if (maxTick < 1e-4 || maxTick > 1e+15) {\n                notation = 'scientific';\n            }\n            delta = calculateDelta(tickValue, ticks);\n        }\n        const logDelta = log10(Math.abs(delta));\n        const numDecimal = isNaN(logDelta) ? 1 : Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n        const options = {\n            notation,\n            minimumFractionDigits: numDecimal,\n            maximumFractionDigits: numDecimal\n        };\n        Object.assign(options, this.options.ticks.format);\n        return formatNumber(tickValue, locale, options);\n    },\n logarithmic (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const remain = ticks[index].significand || tickValue / Math.pow(10, Math.floor(log10(tickValue)));\n        if ([\n            1,\n            2,\n            3,\n            5,\n            10,\n            15\n        ].includes(remain) || index > 0.8 * ticks.length) {\n            return formatters.numeric.call(this, tickValue, index, ticks);\n        }\n        return '';\n    }\n};\nfunction calculateDelta(tickValue, ticks) {\n    let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n    if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n        delta = tickValue - Math.floor(tickValue);\n    }\n    return delta;\n}\n var Ticks = {\n    formatters\n};\n\nfunction applyScaleDefaults(defaults) {\n    defaults.set('scale', {\n        display: true,\n        offset: false,\n        reverse: false,\n        beginAtZero: false,\n bounds: 'ticks',\n        clip: true,\n grace: 0,\n        grid: {\n            display: true,\n            lineWidth: 1,\n            drawOnChartArea: true,\n            drawTicks: true,\n            tickLength: 8,\n            tickWidth: (_ctx, options)=>options.lineWidth,\n            tickColor: (_ctx, options)=>options.color,\n            offset: false\n        },\n        border: {\n            display: true,\n            dash: [],\n            dashOffset: 0.0,\n            width: 1\n        },\n        title: {\n            display: false,\n            text: '',\n            padding: {\n                top: 4,\n                bottom: 4\n            }\n        },\n        ticks: {\n            minRotation: 0,\n            maxRotation: 50,\n            mirror: false,\n            textStrokeWidth: 0,\n            textStrokeColor: '',\n            padding: 3,\n            display: true,\n            autoSkip: true,\n            autoSkipPadding: 3,\n            labelOffset: 0,\n            callback: Ticks.formatters.values,\n            minor: {},\n            major: {},\n            align: 'center',\n            crossAlign: 'near',\n            showLabelBackdrop: false,\n            backdropColor: 'rgba(255, 255, 255, 0.75)',\n            backdropPadding: 2\n        }\n    });\n    defaults.route('scale.ticks', 'color', '', 'color');\n    defaults.route('scale.grid', 'color', '', 'borderColor');\n    defaults.route('scale.border', 'color', '', 'borderColor');\n    defaults.route('scale.title', 'color', '', 'color');\n    defaults.describe('scale', {\n        _fallback: false,\n        _scriptable: (name)=>!name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n        _indexable: (name)=>name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash'\n    });\n    defaults.describe('scales', {\n        _fallback: 'scale'\n    });\n    defaults.describe('scale.ticks', {\n        _scriptable: (name)=>name !== 'backdropPadding' && name !== 'callback',\n        _indexable: (name)=>name !== 'backdropPadding'\n    });\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\n function getScope$1(node, key) {\n    if (!key) {\n        return node;\n    }\n    const keys = key.split('.');\n    for(let i = 0, n = keys.length; i < n; ++i){\n        const k = keys[i];\n        node = node[k] || (node[k] = Object.create(null));\n    }\n    return node;\n}\nfunction set(root, scope, values) {\n    if (typeof scope === 'string') {\n        return merge(getScope$1(root, scope), values);\n    }\n    return merge(getScope$1(root, ''), scope);\n}\n class Defaults {\n    constructor(_descriptors, _appliers){\n        this.animation = undefined;\n        this.backgroundColor = 'rgba(0,0,0,0.1)';\n        this.borderColor = 'rgba(0,0,0,0.1)';\n        this.color = '#666';\n        this.datasets = {};\n        this.devicePixelRatio = (context)=>context.chart.platform.getDevicePixelRatio();\n        this.elements = {};\n        this.events = [\n            'mousemove',\n            'mouseout',\n            'click',\n            'touchstart',\n            'touchmove'\n        ];\n        this.font = {\n            family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n            size: 12,\n            style: 'normal',\n            lineHeight: 1.2,\n            weight: null\n        };\n        this.hover = {};\n        this.hoverBackgroundColor = (ctx, options)=>getHoverColor(options.backgroundColor);\n        this.hoverBorderColor = (ctx, options)=>getHoverColor(options.borderColor);\n        this.hoverColor = (ctx, options)=>getHoverColor(options.color);\n        this.indexAxis = 'x';\n        this.interaction = {\n            mode: 'nearest',\n            intersect: true,\n            includeInvisible: false\n        };\n        this.maintainAspectRatio = true;\n        this.onHover = null;\n        this.onClick = null;\n        this.parsing = true;\n        this.plugins = {};\n        this.responsive = true;\n        this.scale = undefined;\n        this.scales = {};\n        this.showLine = true;\n        this.drawActiveElementsOnTop = true;\n        this.describe(_descriptors);\n        this.apply(_appliers);\n    }\n set(scope, values) {\n        return set(this, scope, values);\n    }\n get(scope) {\n        return getScope$1(this, scope);\n    }\n describe(scope, values) {\n        return set(descriptors, scope, values);\n    }\n    override(scope, values) {\n        return set(overrides, scope, values);\n    }\n route(scope, name, targetScope, targetName) {\n        const scopeObject = getScope$1(this, scope);\n        const targetScopeObject = getScope$1(this, targetScope);\n        const privateName = '_' + name;\n        Object.defineProperties(scopeObject, {\n            [privateName]: {\n                value: scopeObject[name],\n                writable: true\n            },\n            [name]: {\n                enumerable: true,\n                get () {\n                    const local = this[privateName];\n                    const target = targetScopeObject[targetName];\n                    if (isObject(local)) {\n                        return Object.assign({}, target, local);\n                    }\n                    return valueOrDefault(local, target);\n                },\n                set (value) {\n                    this[privateName] = value;\n                }\n            }\n        });\n    }\n    apply(appliers) {\n        appliers.forEach((apply)=>apply(this));\n    }\n}\nvar defaults = /* #__PURE__ */ new Defaults({\n    _scriptable: (name)=>!name.startsWith('on'),\n    _indexable: (name)=>name !== 'events',\n    hover: {\n        _fallback: 'interaction'\n    },\n    interaction: {\n        _scriptable: false,\n        _indexable: false\n    }\n}, [\n    applyAnimationsDefaults,\n    applyLayoutsDefaults,\n    applyScaleDefaults\n]);\n\n/**\n * Converts the given font object into a CSS font string.\n * @param font - A font object.\n * @return The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */ function toFontString(font) {\n    if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n        return null;\n    }\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n}\n/**\n * @private\n */ function _measureText(ctx, data, gc, longest, string) {\n    let textWidth = data[string];\n    if (!textWidth) {\n        textWidth = data[string] = ctx.measureText(string).width;\n        gc.push(string);\n    }\n    if (textWidth > longest) {\n        longest = textWidth;\n    }\n    return longest;\n}\n/**\n * @private\n */ // eslint-disable-next-line complexity\nfunction _longestText(ctx, font, arrayOfThings, cache) {\n    cache = cache || {};\n    let data = cache.data = cache.data || {};\n    let gc = cache.garbageCollect = cache.garbageCollect || [];\n    if (cache.font !== font) {\n        data = cache.data = {};\n        gc = cache.garbageCollect = [];\n        cache.font = font;\n    }\n    ctx.save();\n    ctx.font = font;\n    let longest = 0;\n    const ilen = arrayOfThings.length;\n    let i, j, jlen, thing, nestedThing;\n    for(i = 0; i < ilen; i++){\n        thing = arrayOfThings[i];\n        // Undefined strings and arrays should not be measured\n        if (thing !== undefined && thing !== null && !isArray(thing)) {\n            longest = _measureText(ctx, data, gc, longest, thing);\n        } else if (isArray(thing)) {\n            // if it is an array lets measure each element\n            // to do maybe simplify this function a bit so we can do this more recursively?\n            for(j = 0, jlen = thing.length; j < jlen; j++){\n                nestedThing = thing[j];\n                // Undefined strings and arrays should not be measured\n                if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n                    longest = _measureText(ctx, data, gc, longest, nestedThing);\n                }\n            }\n        }\n    }\n    ctx.restore();\n    const gcLen = gc.length / 2;\n    if (gcLen > arrayOfThings.length) {\n        for(i = 0; i < gcLen; i++){\n            delete data[gc[i]];\n        }\n        gc.splice(0, gcLen);\n    }\n    return longest;\n}\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param chart - The chart instance.\n * @param pixel - A pixel value.\n * @param width - The width of the element.\n * @returns The aligned pixel value.\n * @private\n */ function _alignPixel(chart, pixel, width) {\n    const devicePixelRatio = chart.currentDevicePixelRatio;\n    const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n    return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n/**\n * Clears the entire canvas.\n */ function clearCanvas(canvas, ctx) {\n    if (!ctx && !canvas) {\n        return;\n    }\n    ctx = ctx || canvas.getContext('2d');\n    ctx.save();\n    // canvas.width and canvas.height do not consider the canvas transform,\n    // while clearRect does\n    ctx.resetTransform();\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    drawPointLegend(ctx, options, x, y, null);\n}\n// eslint-disable-next-line complexity\nfunction drawPointLegend(ctx, options, x, y, w) {\n    let type, xOffset, yOffset, size, cornerRadius, width, xOffsetW, yOffsetW;\n    const style = options.pointStyle;\n    const rotation = options.rotation;\n    const radius = options.radius;\n    let rad = (rotation || 0) * RAD_PER_DEG;\n    if (style && typeof style === 'object') {\n        type = style.toString();\n        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n            ctx.save();\n            ctx.translate(x, y);\n            ctx.rotate(rad);\n            ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n            ctx.restore();\n            return;\n        }\n    }\n    if (isNaN(radius) || radius <= 0) {\n        return;\n    }\n    ctx.beginPath();\n    switch(style){\n        // Default includes circle\n        default:\n            if (w) {\n                ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n            } else {\n                ctx.arc(x, y, radius, 0, TAU);\n            }\n            ctx.closePath();\n            break;\n        case 'triangle':\n            width = w ? w / 2 : radius;\n            ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            ctx.closePath();\n            break;\n        case 'rectRounded':\n            // NOTE: the rounded rect implementation changed to use `arc` instead of\n            // `quadraticCurveTo` since it generates better results when rect is\n            // almost a circle. 0.516 (instead of 0.5) produces results with visually\n            // closer proportion to the previous impl and it is inscribed in the\n            // circle with `radius`. For more details, see the following PRs:\n            // https://github.com/chartjs/Chart.js/issues/5597\n            // https://github.com/chartjs/Chart.js/issues/5858\n            cornerRadius = radius * 0.516;\n            size = radius - cornerRadius;\n            xOffset = Math.cos(rad + QUARTER_PI) * size;\n            xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            yOffset = Math.sin(rad + QUARTER_PI) * size;\n            yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n            ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n            ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n            ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n            ctx.closePath();\n            break;\n        case 'rect':\n            if (!rotation) {\n                size = Math.SQRT1_2 * radius;\n                width = w ? w / 2 : size;\n                ctx.rect(x - width, y - size, 2 * width, 2 * size);\n                break;\n            }\n            rad += QUARTER_PI;\n        /* falls through */ case 'rectRot':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            ctx.closePath();\n            break;\n        case 'crossRot':\n            rad += QUARTER_PI;\n        /* falls through */ case 'cross':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'star':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            rad += QUARTER_PI;\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'line':\n            xOffset = w ? w / 2 : Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            ctx.moveTo(x - xOffset, y - yOffset);\n            ctx.lineTo(x + xOffset, y + yOffset);\n            break;\n        case 'dash':\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n            break;\n        case false:\n            ctx.closePath();\n            break;\n    }\n    ctx.fill();\n    if (options.borderWidth > 0) {\n        ctx.stroke();\n    }\n}\n/**\n * Returns true if the point is inside the rectangle\n * @param point - The point to test\n * @param area - The rectangle\n * @param margin - allowed margin\n * @private\n */ function _isPointInArea(point, area, margin) {\n    margin = margin || 0.5; // margin - default is to match rounded decimals\n    return !area || point && point.x > area.left - margin && point.x < area.right + margin && point.y > area.top - margin && point.y < area.bottom + margin;\n}\nfunction clipArea(ctx, area) {\n    ctx.save();\n    ctx.beginPath();\n    ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n    ctx.clip();\n}\nfunction unclipArea(ctx) {\n    ctx.restore();\n}\n/**\n * @private\n */ function _steppedLineTo(ctx, previous, target, flip, mode) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    if (mode === 'middle') {\n        const midpoint = (previous.x + target.x) / 2.0;\n        ctx.lineTo(midpoint, previous.y);\n        ctx.lineTo(midpoint, target.y);\n    } else if (mode === 'after' !== !!flip) {\n        ctx.lineTo(previous.x, target.y);\n    } else {\n        ctx.lineTo(target.x, previous.y);\n    }\n    ctx.lineTo(target.x, target.y);\n}\n/**\n * @private\n */ function _bezierCurveTo(ctx, previous, target, flip) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    ctx.bezierCurveTo(flip ? previous.cp1x : previous.cp2x, flip ? previous.cp1y : previous.cp2y, flip ? target.cp2x : target.cp1x, flip ? target.cp2y : target.cp1y, target.x, target.y);\n}\nfunction setRenderOpts(ctx, opts) {\n    if (opts.translation) {\n        ctx.translate(opts.translation[0], opts.translation[1]);\n    }\n    if (!isNullOrUndef(opts.rotation)) {\n        ctx.rotate(opts.rotation);\n    }\n    if (opts.color) {\n        ctx.fillStyle = opts.color;\n    }\n    if (opts.textAlign) {\n        ctx.textAlign = opts.textAlign;\n    }\n    if (opts.textBaseline) {\n        ctx.textBaseline = opts.textBaseline;\n    }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n    if (opts.strikethrough || opts.underline) {\n        /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */ const metrics = ctx.measureText(line);\n        const left = x - metrics.actualBoundingBoxLeft;\n        const right = x + metrics.actualBoundingBoxRight;\n        const top = y - metrics.actualBoundingBoxAscent;\n        const bottom = y + metrics.actualBoundingBoxDescent;\n        const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n        ctx.strokeStyle = ctx.fillStyle;\n        ctx.beginPath();\n        ctx.lineWidth = opts.decorationWidth || 2;\n        ctx.moveTo(left, yDecoration);\n        ctx.lineTo(right, yDecoration);\n        ctx.stroke();\n    }\n}\nfunction drawBackdrop(ctx, opts) {\n    const oldColor = ctx.fillStyle;\n    ctx.fillStyle = opts.color;\n    ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n    ctx.fillStyle = oldColor;\n}\n/**\n * Render text onto the canvas\n */ function renderText(ctx, text, x, y, font, opts = {}) {\n    const lines = isArray(text) ? text : [\n        text\n    ];\n    const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n    let i, line;\n    ctx.save();\n    ctx.font = font.string;\n    setRenderOpts(ctx, opts);\n    for(i = 0; i < lines.length; ++i){\n        line = lines[i];\n        if (opts.backdrop) {\n            drawBackdrop(ctx, opts.backdrop);\n        }\n        if (stroke) {\n            if (opts.strokeColor) {\n                ctx.strokeStyle = opts.strokeColor;\n            }\n            if (!isNullOrUndef(opts.strokeWidth)) {\n                ctx.lineWidth = opts.strokeWidth;\n            }\n            ctx.strokeText(line, x, y, opts.maxWidth);\n        }\n        ctx.fillText(line, x, y, opts.maxWidth);\n        decorateText(ctx, x, y, line, opts);\n        y += Number(font.lineHeight);\n    }\n    ctx.restore();\n}\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param ctx - Context\n * @param rect - Bounding rect\n */ function addRoundedRectPath(ctx, rect) {\n    const { x , y , w , h , radius  } = rect;\n    // top left arc\n    ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, 1.5 * PI, PI, true);\n    // line from top left to bottom left\n    ctx.lineTo(x, y + h - radius.bottomLeft);\n    // bottom left arc\n    ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n    // line from bottom left to bottom right\n    ctx.lineTo(x + w - radius.bottomRight, y + h);\n    // bottom right arc\n    ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n    // line from bottom right to top right\n    ctx.lineTo(x + w, y + radius.topRight);\n    // top right arc\n    ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n    // line from top right to top left\n    ctx.lineTo(x + radius.topLeft, y);\n}\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n/**\n * @alias Chart.helpers.options\n * @namespace\n */ /**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */ function toLineHeight(value, size) {\n    const matches = ('' + value).match(LINE_HEIGHT);\n    if (!matches || matches[1] === 'normal') {\n        return size * 1.2;\n    }\n    value = +matches[2];\n    switch(matches[3]){\n        case 'px':\n            return value;\n        case '%':\n            value /= 100;\n            break;\n    }\n    return size * value;\n}\nconst numberOrZero = (v)=>+v || 0;\nfunction _readValueToProps(value, props) {\n    const ret = {};\n    const objProps = isObject(props);\n    const keys = objProps ? Object.keys(props) : props;\n    const read = isObject(value) ? objProps ? (prop)=>valueOrDefault(value[prop], value[props[prop]]) : (prop)=>value[prop] : ()=>value;\n    for (const prop of keys){\n        ret[prop] = numberOrZero(read(prop));\n    }\n    return ret;\n}\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */ function toTRBL(value) {\n    return _readValueToProps(value, {\n        top: 'y',\n        right: 'x',\n        bottom: 'y',\n        left: 'x'\n    });\n}\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */ function toTRBLCorners(value) {\n    return _readValueToProps(value, [\n        'topLeft',\n        'topRight',\n        'bottomLeft',\n        'bottomRight'\n    ]);\n}\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */ function toPadding(value) {\n    const obj = toTRBL(value);\n    obj.width = obj.left + obj.right;\n    obj.height = obj.top + obj.bottom;\n    return obj;\n}\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */ function toFont(options, fallback) {\n    options = options || {};\n    fallback = fallback || defaults.font;\n    let size = valueOrDefault(options.size, fallback.size);\n    if (typeof size === 'string') {\n        size = parseInt(size, 10);\n    }\n    let style = valueOrDefault(options.style, fallback.style);\n    if (style && !('' + style).match(FONT_STYLE)) {\n        console.warn('Invalid font style specified: \"' + style + '\"');\n        style = undefined;\n    }\n    const font = {\n        family: valueOrDefault(options.family, fallback.family),\n        lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n        size,\n        style,\n        weight: valueOrDefault(options.weight, fallback.weight),\n        string: ''\n    };\n    font.string = toFontString(font);\n    return font;\n}\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */ function resolve(inputs, context, index, info) {\n    let cacheable = true;\n    let i, ilen, value;\n    for(i = 0, ilen = inputs.length; i < ilen; ++i){\n        value = inputs[i];\n        if (value === undefined) {\n            continue;\n        }\n        if (context !== undefined && typeof value === 'function') {\n            value = value(context);\n            cacheable = false;\n        }\n        if (index !== undefined && isArray(value)) {\n            value = value[index % value.length];\n            cacheable = false;\n        }\n        if (value !== undefined) {\n            if (info && !cacheable) {\n                info.cacheable = false;\n            }\n            return value;\n        }\n    }\n}\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */ function _addGrace(minmax, grace, beginAtZero) {\n    const { min , max  } = minmax;\n    const change = toDimension(grace, (max - min) / 2);\n    const keepZero = (value, add)=>beginAtZero && value === 0 ? 0 : value + add;\n    return {\n        min: keepZero(min, -Math.abs(change)),\n        max: keepZero(max, change)\n    };\n}\nfunction createContext(parentContext, context) {\n    return Object.assign(Object.create(parentContext), context);\n}\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param scopes - The option scopes to look for values, in resolution order\n * @param prefixes - The prefixes for values, in resolution order.\n * @param rootScopes - The root option scopes\n * @param fallback - Parent scopes fallback\n * @param getTarget - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */ function _createResolver(scopes, prefixes = [\n    ''\n], rootScopes, fallback, getTarget = ()=>scopes[0]) {\n    const finalRootScopes = rootScopes || scopes;\n    if (typeof fallback === 'undefined') {\n        fallback = _resolve('_fallback', scopes);\n    }\n    const cache = {\n        [Symbol.toStringTag]: 'Object',\n        _cacheable: true,\n        _scopes: scopes,\n        _rootScopes: finalRootScopes,\n        _fallback: fallback,\n        _getTarget: getTarget,\n        override: (scope)=>_createResolver([\n                scope,\n                ...scopes\n            ], prefixes, finalRootScopes, fallback)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete target._keys; // remove cached keys\n            delete scopes[0][prop]; // remove from top level scope\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop) {\n            return _cached(target, prop, ()=>_resolveWithPrefixes(prop, prefixes, scopes, target));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(scopes[0]);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return getKeysFromAllScopes(target).includes(prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys (target) {\n            return getKeysFromAllScopes(target);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            const storage = target._storage || (target._storage = getTarget());\n            target[prop] = storage[prop] = value; // set to top level scope + cache\n            delete target._keys; // remove cached keys\n            return true;\n        }\n    });\n}\n/**\n * Returns an Proxy for resolving option values with context.\n * @param proxy - The Proxy returned by `_createResolver`\n * @param context - Context object for scriptable/indexable options\n * @param subProxy - The proxy provided for scriptable options\n * @param descriptorDefaults - Defaults for descriptors\n * @private\n */ function _attachContext(proxy, context, subProxy, descriptorDefaults) {\n    const cache = {\n        _cacheable: false,\n        _proxy: proxy,\n        _context: context,\n        _subProxy: subProxy,\n        _stack: new Set(),\n        _descriptors: _descriptors(proxy, descriptorDefaults),\n        setContext: (ctx)=>_attachContext(proxy, ctx, subProxy, descriptorDefaults),\n        override: (scope)=>_attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete proxy[prop]; // remove from proxy\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop, receiver) {\n            return _cached(target, prop, ()=>_resolveWithContext(target, prop, receiver));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return target._descriptors.allKeys ? Reflect.has(proxy, prop) ? {\n                enumerable: true,\n                configurable: true\n            } : undefined : Reflect.getOwnPropertyDescriptor(proxy, prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(proxy);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return Reflect.has(proxy, prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys () {\n            return Reflect.ownKeys(proxy);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            proxy[prop] = value; // set to proxy\n            delete target[prop]; // remove from cache\n            return true;\n        }\n    });\n}\n/**\n * @private\n */ function _descriptors(proxy, defaults = {\n    scriptable: true,\n    indexable: true\n}) {\n    const { _scriptable =defaults.scriptable , _indexable =defaults.indexable , _allKeys =defaults.allKeys  } = proxy;\n    return {\n        allKeys: _allKeys,\n        scriptable: _scriptable,\n        indexable: _indexable,\n        isScriptable: isFunction(_scriptable) ? _scriptable : ()=>_scriptable,\n        isIndexable: isFunction(_indexable) ? _indexable : ()=>_indexable\n    };\n}\nconst readKey = (prefix, name)=>prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value)=>isObject(value) && prop !== 'adapters' && (Object.getPrototypeOf(value) === null || value.constructor === Object);\nfunction _cached(target, prop, resolve) {\n    if (Object.prototype.hasOwnProperty.call(target, prop) || prop === 'constructor') {\n        return target[prop];\n    }\n    const value = resolve();\n    // cache the resolved value\n    target[prop] = value;\n    return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    let value = _proxy[prop]; // resolve from proxy\n    // resolve with context\n    if (isFunction(value) && descriptors.isScriptable(prop)) {\n        value = _resolveScriptable(prop, value, target, receiver);\n    }\n    if (isArray(value) && value.length) {\n        value = _resolveArray(prop, value, target, descriptors.isIndexable);\n    }\n    if (needsSubResolver(prop, value)) {\n        // if the resolved value is an object, create a sub resolver for it\n        value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n    }\n    return value;\n}\nfunction _resolveScriptable(prop, getValue, target, receiver) {\n    const { _proxy , _context , _subProxy , _stack  } = target;\n    if (_stack.has(prop)) {\n        throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n    }\n    _stack.add(prop);\n    let value = getValue(_context, _subProxy || receiver);\n    _stack.delete(prop);\n    if (needsSubResolver(prop, value)) {\n        // When scriptable option returns an object, create a resolver on that.\n        value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n    }\n    return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    if (typeof _context.index !== 'undefined' && isIndexable(prop)) {\n        return value[_context.index % value.length];\n    } else if (isObject(value[0])) {\n        // Array of objects, return array or resolvers\n        const arr = value;\n        const scopes = _proxy._scopes.filter((s)=>s !== arr);\n        value = [];\n        for (const item of arr){\n            const resolver = createSubResolver(scopes, _proxy, prop, item);\n            value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n        }\n    }\n    return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n    return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent)=>key === true ? parent : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n    for (const parent of parentScopes){\n        const scope = getScope(key, parent);\n        if (scope) {\n            set.add(scope);\n            const fallback = resolveFallback(scope._fallback, key, value);\n            if (typeof fallback !== 'undefined' && fallback !== key && fallback !== parentFallback) {\n                // When we reach the descriptor that defines a new _fallback, return that.\n                // The fallback will resume to that new scope.\n                return fallback;\n            }\n        } else if (scope === false && typeof parentFallback !== 'undefined' && key !== parentFallback) {\n            // Fallback to `false` results to `false`, when falling back to different key.\n            // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n            return null;\n        }\n    }\n    return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n    const rootScopes = resolver._rootScopes;\n    const fallback = resolveFallback(resolver._fallback, prop, value);\n    const allScopes = [\n        ...parentScopes,\n        ...rootScopes\n    ];\n    const set = new Set();\n    set.add(value);\n    let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n    if (key === null) {\n        return false;\n    }\n    if (typeof fallback !== 'undefined' && fallback !== prop) {\n        key = addScopesFromKey(set, allScopes, fallback, key, value);\n        if (key === null) {\n            return false;\n        }\n    }\n    return _createResolver(Array.from(set), [\n        ''\n    ], rootScopes, fallback, ()=>subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n    while(key){\n        key = addScopes(set, allScopes, key, fallback, item);\n    }\n    return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n    const parent = resolver._getTarget();\n    if (!(prop in parent)) {\n        parent[prop] = {};\n    }\n    const target = parent[prop];\n    if (isArray(target) && isObject(value)) {\n        // For array of objects, the object is used to store updated values\n        return value;\n    }\n    return target || {};\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n    let value;\n    for (const prefix of prefixes){\n        value = _resolve(readKey(prefix, prop), scopes);\n        if (typeof value !== 'undefined') {\n            return needsSubResolver(prop, value) ? createSubResolver(scopes, proxy, prop, value) : value;\n        }\n    }\n}\nfunction _resolve(key, scopes) {\n    for (const scope of scopes){\n        if (!scope) {\n            continue;\n        }\n        const value = scope[key];\n        if (typeof value !== 'undefined') {\n            return value;\n        }\n    }\n}\nfunction getKeysFromAllScopes(target) {\n    let keys = target._keys;\n    if (!keys) {\n        keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n    }\n    return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n    const set = new Set();\n    for (const scope of scopes){\n        for (const key of Object.keys(scope).filter((k)=>!k.startsWith('_'))){\n            set.add(key);\n        }\n    }\n    return Array.from(set);\n}\nfunction _parseObjectDataRadialScale(meta, data, start, count) {\n    const { iScale  } = meta;\n    const { key ='r'  } = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for(i = 0, ilen = count; i < ilen; ++i){\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n            r: iScale.parse(resolveObjectKey(item, key), index)\n        };\n    }\n    return parsed;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i)=>i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis)=>indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n    // Props to Rob Spencer at scaled innovation for his post on splining between points\n    // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n    // This function must also respect \"skipped\" points\n    const previous = firstPoint.skip ? middlePoint : firstPoint;\n    const current = middlePoint;\n    const next = afterPoint.skip ? middlePoint : afterPoint;\n    const d01 = distanceBetweenPoints(current, previous);\n    const d12 = distanceBetweenPoints(next, current);\n    let s01 = d01 / (d01 + d12);\n    let s12 = d12 / (d01 + d12);\n    // If all points are the same, s01 & s02 will be inf\n    s01 = isNaN(s01) ? 0 : s01;\n    s12 = isNaN(s12) ? 0 : s12;\n    const fa = t * s01; // scaling factor for triangle Ta\n    const fb = t * s12;\n    return {\n        previous: {\n            x: current.x - fa * (next.x - previous.x),\n            y: current.y - fa * (next.y - previous.y)\n        },\n        next: {\n            x: current.x + fb * (next.x - previous.x),\n            y: current.y + fb * (next.y - previous.y)\n        }\n    };\n}\n/**\n * Adjust tangents to ensure monotonic properties\n */ function monotoneAdjust(points, deltaK, mK) {\n    const pointsLen = points.length;\n    let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen - 1; ++i){\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent || !pointAfter) {\n            continue;\n        }\n        if (almostEquals(deltaK[i], 0, EPSILON)) {\n            mK[i] = mK[i + 1] = 0;\n            continue;\n        }\n        alphaK = mK[i] / deltaK[i];\n        betaK = mK[i + 1] / deltaK[i];\n        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n        if (squaredMagnitude <= 9) {\n            continue;\n        }\n        tauK = 3 / Math.sqrt(squaredMagnitude);\n        mK[i] = alphaK * tauK * deltaK[i];\n        mK[i + 1] = betaK * tauK * deltaK[i];\n    }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    let delta, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        const iPixel = pointCurrent[indexAxis];\n        const vPixel = pointCurrent[valueAxis];\n        if (pointBefore) {\n            delta = (iPixel - pointBefore[indexAxis]) / 3;\n            pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n            pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n        }\n        if (pointAfter) {\n            delta = (pointAfter[indexAxis] - iPixel) / 3;\n            pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n            pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n        }\n    }\n}\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */ function splineCurveMonotone(points, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    const deltaK = Array(pointsLen).fill(0);\n    const mK = Array(pointsLen);\n    // Calculate slopes (deltaK) and initialize tangents (mK)\n    let i, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        if (pointAfter) {\n            const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n            // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n            deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n        }\n        mK[i] = !pointBefore ? deltaK[i] : !pointAfter ? deltaK[i - 1] : sign(deltaK[i - 1]) !== sign(deltaK[i]) ? 0 : (deltaK[i - 1] + deltaK[i]) / 2;\n    }\n    monotoneAdjust(points, deltaK, mK);\n    monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n    return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n    let i, ilen, point, inArea, inAreaPrev;\n    let inAreaNext = _isPointInArea(points[0], area);\n    for(i = 0, ilen = points.length; i < ilen; ++i){\n        inAreaPrev = inArea;\n        inArea = inAreaNext;\n        inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n        if (!inArea) {\n            continue;\n        }\n        point = points[i];\n        if (inAreaPrev) {\n            point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n            point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n        }\n        if (inAreaNext) {\n            point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n            point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n        }\n    }\n}\n/**\n * @private\n */ function _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n    let i, ilen, point, controlPoints;\n    // Only consider points that are drawn in case the spanGaps option is used\n    if (options.spanGaps) {\n        points = points.filter((pt)=>!pt.skip);\n    }\n    if (options.cubicInterpolationMode === 'monotone') {\n        splineCurveMonotone(points, indexAxis);\n    } else {\n        let prev = loop ? points[points.length - 1] : points[0];\n        for(i = 0, ilen = points.length; i < ilen; ++i){\n            point = points[i];\n            controlPoints = splineCurve(prev, point, points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen], options.tension);\n            point.cp1x = controlPoints.previous.x;\n            point.cp1y = controlPoints.previous.y;\n            point.cp2x = controlPoints.next.x;\n            point.cp2y = controlPoints.next.y;\n            prev = point;\n        }\n    }\n    if (options.capBezierPoints) {\n        capBezierPoints(points, area);\n    }\n}\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `dom` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import('../core/core.controller.js').default } dom.Chart\n * @typedef { import('../../types').ChartEvent } ChartEvent\n */ /**\n * @private\n */ function _isDomSupported() {\n    return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n/**\n * @private\n */ function _getParentNode(domNode) {\n    let parent = domNode.parentNode;\n    if (parent && parent.toString() === '[object ShadowRoot]') {\n        parent = parent.host;\n    }\n    return parent;\n}\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */ function parseMaxStyle(styleValue, node, parentProperty) {\n    let valueInPixels;\n    if (typeof styleValue === 'string') {\n        valueInPixels = parseInt(styleValue, 10);\n        if (styleValue.indexOf('%') !== -1) {\n            // percentage * size in dimension\n            valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n        }\n    } else {\n        valueInPixels = styleValue;\n    }\n    return valueInPixels;\n}\nconst getComputedStyle = (element)=>element.ownerDocument.defaultView.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n    return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = [\n    'top',\n    'right',\n    'bottom',\n    'left'\n];\nfunction getPositionedStyle(styles, style, suffix) {\n    const result = {};\n    suffix = suffix ? '-' + suffix : '';\n    for(let i = 0; i < 4; i++){\n        const pos = positions[i];\n        result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n    }\n    result.width = result.left + result.right;\n    result.height = result.top + result.bottom;\n    return result;\n}\nconst useOffsetPos = (x, y, target)=>(x > 0 || y > 0) && (!target || !target.shadowRoot);\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */ function getCanvasPosition(e, canvas) {\n    const touches = e.touches;\n    const source = touches && touches.length ? touches[0] : e;\n    const { offsetX , offsetY  } = source;\n    let box = false;\n    let x, y;\n    if (useOffsetPos(offsetX, offsetY, e.target)) {\n        x = offsetX;\n        y = offsetY;\n    } else {\n        const rect = canvas.getBoundingClientRect();\n        x = source.clientX - rect.left;\n        y = source.clientY - rect.top;\n        box = true;\n    }\n    return {\n        x,\n        y,\n        box\n    };\n}\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */ function getRelativePosition(event, chart) {\n    if ('native' in event) {\n        return event;\n    }\n    const { canvas , currentDevicePixelRatio  } = chart;\n    const style = getComputedStyle(canvas);\n    const borderBox = style.boxSizing === 'border-box';\n    const paddings = getPositionedStyle(style, 'padding');\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const { x , y , box  } = getCanvasPosition(event, canvas);\n    const xOffset = paddings.left + (box && borders.left);\n    const yOffset = paddings.top + (box && borders.top);\n    let { width , height  } = chart;\n    if (borderBox) {\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    return {\n        x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n        y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n    };\n}\nfunction getContainerSize(canvas, width, height) {\n    let maxWidth, maxHeight;\n    if (width === undefined || height === undefined) {\n        const container = canvas && _getParentNode(canvas);\n        if (!container) {\n            width = canvas.clientWidth;\n            height = canvas.clientHeight;\n        } else {\n            const rect = container.getBoundingClientRect(); // this is the border box of the container\n            const containerStyle = getComputedStyle(container);\n            const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n            const containerPadding = getPositionedStyle(containerStyle, 'padding');\n            width = rect.width - containerPadding.width - containerBorder.width;\n            height = rect.height - containerPadding.height - containerBorder.height;\n            maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n            maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n        }\n    }\n    return {\n        width,\n        height,\n        maxWidth: maxWidth || INFINITY,\n        maxHeight: maxHeight || INFINITY\n    };\n}\nconst round1 = (v)=>Math.round(v * 10) / 10;\n// eslint-disable-next-line complexity\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n    const style = getComputedStyle(canvas);\n    const margins = getPositionedStyle(style, 'margin');\n    const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n    const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n    const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n    let { width , height  } = containerSize;\n    if (style.boxSizing === 'content-box') {\n        const borders = getPositionedStyle(style, 'border', 'width');\n        const paddings = getPositionedStyle(style, 'padding');\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    width = Math.max(0, width - margins.width);\n    height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n    width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n    height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n    if (width && !height) {\n        // https://github.com/chartjs/Chart.js/issues/4659\n        // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n        height = round1(width / 2);\n    }\n    const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n    if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n        height = containerSize.height;\n        width = round1(Math.floor(height * aspectRatio));\n    }\n    return {\n        width,\n        height\n    };\n}\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */ function retinaScale(chart, forceRatio, forceStyle) {\n    const pixelRatio = forceRatio || 1;\n    const deviceHeight = Math.floor(chart.height * pixelRatio);\n    const deviceWidth = Math.floor(chart.width * pixelRatio);\n    chart.height = Math.floor(chart.height);\n    chart.width = Math.floor(chart.width);\n    const canvas = chart.canvas;\n    // If no style has been set on the canvas, the render size is used as display size,\n    // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n    // See https://github.com/chartjs/Chart.js/issues/3575\n    if (canvas.style && (forceStyle || !canvas.style.height && !canvas.style.width)) {\n        canvas.style.height = `${chart.height}px`;\n        canvas.style.width = `${chart.width}px`;\n    }\n    if (chart.currentDevicePixelRatio !== pixelRatio || canvas.height !== deviceHeight || canvas.width !== deviceWidth) {\n        chart.currentDevicePixelRatio = pixelRatio;\n        canvas.height = deviceHeight;\n        canvas.width = deviceWidth;\n        chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n        return true;\n    }\n    return false;\n}\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */ const supportsEventListenerOptions = function() {\n    let passiveSupported = false;\n    try {\n        const options = {\n            get passive () {\n                passiveSupported = true;\n                return false;\n            }\n        };\n        if (_isDomSupported()) {\n            window.addEventListener('test', null, options);\n            window.removeEventListener('test', null, options);\n        }\n    } catch (e) {\n    // continue regardless of error\n    }\n    return passiveSupported;\n}();\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */ function readUsedSize(element, property) {\n    const value = getStyle(element, property);\n    const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? +matches[1] : undefined;\n}\n\n/**\n * @private\n */ function _pointInLine(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: p1.y + t * (p2.y - p1.y)\n    };\n}\n/**\n * @private\n */ function _steppedInterpolation(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y : mode === 'after' ? t < 1 ? p1.y : p2.y : t > 0 ? p2.y : p1.y\n    };\n}\n/**\n * @private\n */ function _bezierInterpolation(p1, p2, t, mode) {\n    const cp1 = {\n        x: p1.cp2x,\n        y: p1.cp2y\n    };\n    const cp2 = {\n        x: p2.cp1x,\n        y: p2.cp1y\n    };\n    const a = _pointInLine(p1, cp1, t);\n    const b = _pointInLine(cp1, cp2, t);\n    const c = _pointInLine(cp2, p2, t);\n    const d = _pointInLine(a, b, t);\n    const e = _pointInLine(b, c, t);\n    return _pointInLine(d, e, t);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n    return {\n        x (x) {\n            return rectX + rectX + width - x;\n        },\n        setWidth (w) {\n            width = w;\n        },\n        textAlign (align) {\n            if (align === 'center') {\n                return align;\n            }\n            return align === 'right' ? 'left' : 'right';\n        },\n        xPlus (x, value) {\n            return x - value;\n        },\n        leftForLtr (x, itemWidth) {\n            return x - itemWidth;\n        }\n    };\n};\nconst getLeftToRightAdapter = function() {\n    return {\n        x (x) {\n            return x;\n        },\n        setWidth (w) {},\n        textAlign (align) {\n            return align;\n        },\n        xPlus (x, value) {\n            return x + value;\n        },\n        leftForLtr (x, _itemWidth) {\n            return x;\n        }\n    };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n    return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n    let style, original;\n    if (direction === 'ltr' || direction === 'rtl') {\n        style = ctx.canvas.style;\n        original = [\n            style.getPropertyValue('direction'),\n            style.getPropertyPriority('direction')\n        ];\n        style.setProperty('direction', direction, 'important');\n        ctx.prevTextDirection = original;\n    }\n}\nfunction restoreTextDirection(ctx, original) {\n    if (original !== undefined) {\n        delete ctx.prevTextDirection;\n        ctx.canvas.style.setProperty('direction', original[0], original[1]);\n    }\n}\n\nfunction propertyFn(property) {\n    if (property === 'angle') {\n        return {\n            between: _angleBetween,\n            compare: _angleDiff,\n            normalize: _normalizeAngle\n        };\n    }\n    return {\n        between: _isBetween,\n        compare: (a, b)=>a - b,\n        normalize: (x)=>x\n    };\n}\nfunction normalizeSegment({ start , end , count , loop , style  }) {\n    return {\n        start: start % count,\n        end: end % count,\n        loop: loop && (end - start + 1) % count === 0,\n        style\n    };\n}\nfunction getSegment(segment, points, bounds) {\n    const { property , start: startBound , end: endBound  } = bounds;\n    const { between , normalize  } = propertyFn(property);\n    const count = points.length;\n    let { start , end , loop  } = segment;\n    let i, ilen;\n    if (loop) {\n        start += count;\n        end += count;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n                break;\n            }\n            start--;\n            end--;\n        }\n        start %= count;\n        end %= count;\n    }\n    if (end < start) {\n        end += count;\n    }\n    return {\n        start,\n        end,\n        loop,\n        style: segment.style\n    };\n}\n function _boundSegment(segment, points, bounds) {\n    if (!bounds) {\n        return [\n            segment\n        ];\n    }\n    const { property , start: startBound , end: endBound  } = bounds;\n    const count = points.length;\n    const { compare , between , normalize  } = propertyFn(property);\n    const { start , end , loop , style  } = getSegment(segment, points, bounds);\n    const result = [];\n    let inside = false;\n    let subStart = null;\n    let value, point, prevValue;\n    const startIsBefore = ()=>between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n    const endIsBefore = ()=>compare(endBound, value) === 0 || between(endBound, prevValue, value);\n    const shouldStart = ()=>inside || startIsBefore();\n    const shouldStop = ()=>!inside || endIsBefore();\n    for(let i = start, prev = start; i <= end; ++i){\n        point = points[i % count];\n        if (point.skip) {\n            continue;\n        }\n        value = normalize(point[property]);\n        if (value === prevValue) {\n            continue;\n        }\n        inside = between(value, startBound, endBound);\n        if (subStart === null && shouldStart()) {\n            subStart = compare(value, startBound) === 0 ? i : prev;\n        }\n        if (subStart !== null && shouldStop()) {\n            result.push(normalizeSegment({\n                start: subStart,\n                end: i,\n                loop,\n                count,\n                style\n            }));\n            subStart = null;\n        }\n        prev = i;\n        prevValue = value;\n    }\n    if (subStart !== null) {\n        result.push(normalizeSegment({\n            start: subStart,\n            end,\n            loop,\n            count,\n            style\n        }));\n    }\n    return result;\n}\n function _boundSegments(line, bounds) {\n    const result = [];\n    const segments = line.segments;\n    for(let i = 0; i < segments.length; i++){\n        const sub = _boundSegment(segments[i], line.points, bounds);\n        if (sub.length) {\n            result.push(...sub);\n        }\n    }\n    return result;\n}\n function findStartAndEnd(points, count, loop, spanGaps) {\n    let start = 0;\n    let end = count - 1;\n    if (loop && !spanGaps) {\n        while(start < count && !points[start].skip){\n            start++;\n        }\n    }\n    while(start < count && points[start].skip){\n        start++;\n    }\n    start %= count;\n    if (loop) {\n        end += start;\n    }\n    while(end > start && points[end % count].skip){\n        end--;\n    }\n    end %= count;\n    return {\n        start,\n        end\n    };\n}\n function solidSegments(points, start, max, loop) {\n    const count = points.length;\n    const result = [];\n    let last = start;\n    let prev = points[start];\n    let end;\n    for(end = start + 1; end <= max; ++end){\n        const cur = points[end % count];\n        if (cur.skip || cur.stop) {\n            if (!prev.skip) {\n                loop = false;\n                result.push({\n                    start: start % count,\n                    end: (end - 1) % count,\n                    loop\n                });\n                start = last = cur.stop ? end : null;\n            }\n        } else {\n            last = end;\n            if (prev.skip) {\n                start = end;\n            }\n        }\n        prev = cur;\n    }\n    if (last !== null) {\n        result.push({\n            start: start % count,\n            end: last % count,\n            loop\n        });\n    }\n    return result;\n}\n function _computeSegments(line, segmentOptions) {\n    const points = line.points;\n    const spanGaps = line.options.spanGaps;\n    const count = points.length;\n    if (!count) {\n        return [];\n    }\n    const loop = !!line._loop;\n    const { start , end  } = findStartAndEnd(points, count, loop, spanGaps);\n    if (spanGaps === true) {\n        return splitByStyles(line, [\n            {\n                start,\n                end,\n                loop\n            }\n        ], points, segmentOptions);\n    }\n    const max = end < start ? end + count : end;\n    const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n    return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n function splitByStyles(line, segments, points, segmentOptions) {\n    if (!segmentOptions || !segmentOptions.setContext || !points) {\n        return segments;\n    }\n    return doSplitByStyles(line, segments, points, segmentOptions);\n}\n function doSplitByStyles(line, segments, points, segmentOptions) {\n    const chartContext = line._chart.getContext();\n    const baseStyle = readStyle(line.options);\n    const { _datasetIndex: datasetIndex , options: { spanGaps  }  } = line;\n    const count = points.length;\n    const result = [];\n    let prevStyle = baseStyle;\n    let start = segments[0].start;\n    let i = start;\n    function addStyle(s, e, l, st) {\n        const dir = spanGaps ? -1 : 1;\n        if (s === e) {\n            return;\n        }\n        s += count;\n        while(points[s % count].skip){\n            s -= dir;\n        }\n        while(points[e % count].skip){\n            e += dir;\n        }\n        if (s % count !== e % count) {\n            result.push({\n                start: s % count,\n                end: e % count,\n                loop: l,\n                style: st\n            });\n            prevStyle = st;\n            start = e % count;\n        }\n    }\n    for (const segment of segments){\n        start = spanGaps ? start : segment.start;\n        let prev = points[start % count];\n        let style;\n        for(i = start + 1; i <= segment.end; i++){\n            const pt = points[i % count];\n            style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n                type: 'segment',\n                p0: prev,\n                p1: pt,\n                p0DataIndex: (i - 1) % count,\n                p1DataIndex: i % count,\n                datasetIndex\n            })));\n            if (styleChanged(style, prevStyle)) {\n                addStyle(start, i - 1, segment.loop, prevStyle);\n            }\n            prev = pt;\n            prevStyle = style;\n        }\n        if (start < i - 1) {\n            addStyle(start, i - 1, segment.loop, prevStyle);\n        }\n    }\n    return result;\n}\nfunction readStyle(options) {\n    return {\n        backgroundColor: options.backgroundColor,\n        borderCapStyle: options.borderCapStyle,\n        borderDash: options.borderDash,\n        borderDashOffset: options.borderDashOffset,\n        borderJoinStyle: options.borderJoinStyle,\n        borderWidth: options.borderWidth,\n        borderColor: options.borderColor\n    };\n}\nfunction styleChanged(style, prevStyle) {\n    if (!prevStyle) {\n        return false;\n    }\n    const cache = [];\n    const replacer = function(key, value) {\n        if (!isPatternOrGradient(value)) {\n            return value;\n        }\n        if (!cache.includes(value)) {\n            cache.push(value);\n        }\n        return cache.indexOf(value);\n    };\n    return JSON.stringify(style, replacer) !== JSON.stringify(prevStyle, replacer);\n}\n\nexport { unclipArea as $, _rlookupByKey as A, _lookupByKey as B, _isPointInArea as C, getAngleFromPoint as D, toPadding as E, each as F, getMaximumSize as G, HALF_PI as H, _getParentNode as I, readUsedSize as J, supportsEventListenerOptions as K, throttled as L, _isDomSupported as M, _factorize as N, finiteOrDefault as O, PI as P, callback as Q, _addGrace as R, _limitValue as S, TAU as T, toDegrees as U, _measureText as V, _int16Range as W, _alignPixel as X, clipArea as Y, renderText as Z, _arrayUnique as _, resolve as a, fontString as a$, toFont as a0, _toLeftRightCenter as a1, _alignStartEnd as a2, overrides as a3, merge as a4, _capitalize as a5, descriptors as a6, isFunction as a7, _attachContext as a8, _createResolver as a9, overrideTextDirection as aA, _textX as aB, restoreTextDirection as aC, drawPointLegend as aD, distanceBetweenPoints as aE, noop as aF, _setMinAndMaxByKey as aG, niceNum as aH, almostWhole as aI, almostEquals as aJ, _decimalPlaces as aK, Ticks as aL, log10 as aM, _longestText as aN, _filterBetween as aO, _lookup as aP, isPatternOrGradient as aQ, getHoverColor as aR, clone as aS, _merger as aT, _mergerIf as aU, _deprecated as aV, _splitKey as aW, toFontString as aX, splineCurve as aY, splineCurveMonotone as aZ, getStyle as a_, _descriptors as aa, mergeIf as ab, uid as ac, debounce as ad, retinaScale as ae, clearCanvas as af, setsEqual as ag, _elementsEqual as ah, _isClickEvent as ai, _isBetween as aj, _readValueToProps as ak, _updateBezierControlPoints as al, _computeSegments as am, _boundSegments as an, _steppedInterpolation as ao, _bezierInterpolation as ap, _pointInLine as aq, _steppedLineTo as ar, _bezierCurveTo as as, drawPoint as at, addRoundedRectPath as au, toTRBL as av, toTRBLCorners as aw, _boundSegment as ax, _normalizeAngle as ay, getRtlAdapter as az, isArray as b, toLineHeight as b0, PITAU as b1, INFINITY as b2, RAD_PER_DEG as b3, QUARTER_PI as b4, TWO_THIRDS_PI as b5, _angleDiff as b6, color as c, defaults as d, effects as e, resolveObjectKey as f, isNumberFinite as g, defined as h, isObject as i, createContext as j, isNullOrUndef as k, listenArrayEvents as l, toPercentage as m, toDimension as n, formatNumber as o, _angleBetween as p, _getStartAndCountOfVisiblePoints as q, requestAnimFrame as r, sign as s, toRadians as t, unlistenArrayEvents as u, valueOrDefault as v, _scaleRangesChanged as w, isNumber as x, _parseObjectDataRadialScale as y, getRelativePosition as z };\n//# sourceMappingURL=helpers.segment.js.map\n","/*!\n * Chart.js v4.4.4\n * https://www.chartjs.org\n * (c) 2024 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, i as isObject, d as defaults, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as createContext, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as _getStartAndCountOfVisiblePoints, w as _scaleRangesChanged, x as isNumber, y as _parseObjectDataRadialScale, z as getRelativePosition, A as _rlookupByKey, B as _lookupByKey, C as _isPointInArea, D as getAngleFromPoint, E as toPadding, F as each, G as getMaximumSize, I as _getParentNode, J as readUsedSize, K as supportsEventListenerOptions, L as throttled, M as _isDomSupported, N as _factorize, O as finiteOrDefault, Q as callback, R as _addGrace, S as _limitValue, U as toDegrees, V as _measureText, W as _int16Range, X as _alignPixel, Y as clipArea, Z as renderText, $ as unclipArea, a0 as toFont, a1 as _toLeftRightCenter, a2 as _alignStartEnd, a3 as overrides, a4 as merge, a5 as _capitalize, a6 as descriptors, a7 as isFunction, a8 as _attachContext, a9 as _createResolver, aa as _descriptors, ab as mergeIf, ac as uid, ad as debounce, ae as retinaScale, af as clearCanvas, ag as setsEqual, ah as _elementsEqual, ai as _isClickEvent, aj as _isBetween, ak as _readValueToProps, al as _updateBezierControlPoints, am as _computeSegments, an as _boundSegments, ao as _steppedInterpolation, ap as _bezierInterpolation, aq as _pointInLine, ar as _steppedLineTo, as as _bezierCurveTo, at as drawPoint, au as addRoundedRectPath, av as toTRBL, aw as toTRBLCorners, ax as _boundSegment, ay as _normalizeAngle, az as getRtlAdapter, aA as overrideTextDirection, aB as _textX, aC as restoreTextDirection, aD as drawPointLegend, aE as distanceBetweenPoints, aF as noop, aG as _setMinAndMaxByKey, aH as niceNum, aI as almostWhole, aJ as almostEquals, aK as _decimalPlaces, aL as Ticks, aM as log10, aN as _longestText, aO as _filterBetween, aP as _lookup } from './chunks/helpers.segment.js';\nimport '@kurkle/color';\n\nclass Animator {\n    constructor(){\n        this._request = null;\n        this._charts = new Map();\n        this._running = false;\n        this._lastDate = undefined;\n    }\n _notify(chart, anims, date, type) {\n        const callbacks = anims.listeners[type];\n        const numSteps = anims.duration;\n        callbacks.forEach((fn)=>fn({\n                chart,\n                initial: anims.initial,\n                numSteps,\n                currentStep: Math.min(date - anims.start, numSteps)\n            }));\n    }\n _refresh() {\n        if (this._request) {\n            return;\n        }\n        this._running = true;\n        this._request = requestAnimFrame.call(window, ()=>{\n            this._update();\n            this._request = null;\n            if (this._running) {\n                this._refresh();\n            }\n        });\n    }\n _update(date = Date.now()) {\n        let remaining = 0;\n        this._charts.forEach((anims, chart)=>{\n            if (!anims.running || !anims.items.length) {\n                return;\n            }\n            const items = anims.items;\n            let i = items.length - 1;\n            let draw = false;\n            let item;\n            for(; i >= 0; --i){\n                item = items[i];\n                if (item._active) {\n                    if (item._total > anims.duration) {\n                        anims.duration = item._total;\n                    }\n                    item.tick(date);\n                    draw = true;\n                } else {\n                    items[i] = items[items.length - 1];\n                    items.pop();\n                }\n            }\n            if (draw) {\n                chart.draw();\n                this._notify(chart, anims, date, 'progress');\n            }\n            if (!items.length) {\n                anims.running = false;\n                this._notify(chart, anims, date, 'complete');\n                anims.initial = false;\n            }\n            remaining += items.length;\n        });\n        this._lastDate = date;\n        if (remaining === 0) {\n            this._running = false;\n        }\n    }\n _getAnims(chart) {\n        const charts = this._charts;\n        let anims = charts.get(chart);\n        if (!anims) {\n            anims = {\n                running: false,\n                initial: true,\n                items: [],\n                listeners: {\n                    complete: [],\n                    progress: []\n                }\n            };\n            charts.set(chart, anims);\n        }\n        return anims;\n    }\n listen(chart, event, cb) {\n        this._getAnims(chart).listeners[event].push(cb);\n    }\n add(chart, items) {\n        if (!items || !items.length) {\n            return;\n        }\n        this._getAnims(chart).items.push(...items);\n    }\n has(chart) {\n        return this._getAnims(chart).items.length > 0;\n    }\n start(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims) {\n            return;\n        }\n        anims.running = true;\n        anims.start = Date.now();\n        anims.duration = anims.items.reduce((acc, cur)=>Math.max(acc, cur._duration), 0);\n        this._refresh();\n    }\n    running(chart) {\n        if (!this._running) {\n            return false;\n        }\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.running || !anims.items.length) {\n            return false;\n        }\n        return true;\n    }\n stop(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.items.length) {\n            return;\n        }\n        const items = anims.items;\n        let i = items.length - 1;\n        for(; i >= 0; --i){\n            items[i].cancel();\n        }\n        anims.items = [];\n        this._notify(chart, anims, Date.now(), 'complete');\n    }\n remove(chart) {\n        return this._charts.delete(chart);\n    }\n}\nvar animator = /* #__PURE__ */ new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n    boolean (from, to, factor) {\n        return factor > 0.5 ? to : from;\n    },\n color (from, to, factor) {\n        const c0 = color(from || transparent);\n        const c1 = c0.valid && color(to || transparent);\n        return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n    },\n    number (from, to, factor) {\n        return from + (to - from) * factor;\n    }\n};\nclass Animation {\n    constructor(cfg, target, prop, to){\n        const currentValue = target[prop];\n        to = resolve([\n            cfg.to,\n            to,\n            currentValue,\n            cfg.from\n        ]);\n        const from = resolve([\n            cfg.from,\n            currentValue,\n            to\n        ]);\n        this._active = true;\n        this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n        this._easing = effects[cfg.easing] || effects.linear;\n        this._start = Math.floor(Date.now() + (cfg.delay || 0));\n        this._duration = this._total = Math.floor(cfg.duration);\n        this._loop = !!cfg.loop;\n        this._target = target;\n        this._prop = prop;\n        this._from = from;\n        this._to = to;\n        this._promises = undefined;\n    }\n    active() {\n        return this._active;\n    }\n    update(cfg, to, date) {\n        if (this._active) {\n            this._notify(false);\n            const currentValue = this._target[this._prop];\n            const elapsed = date - this._start;\n            const remain = this._duration - elapsed;\n            this._start = date;\n            this._duration = Math.floor(Math.max(remain, cfg.duration));\n            this._total += elapsed;\n            this._loop = !!cfg.loop;\n            this._to = resolve([\n                cfg.to,\n                to,\n                currentValue,\n                cfg.from\n            ]);\n            this._from = resolve([\n                cfg.from,\n                currentValue,\n                to\n            ]);\n        }\n    }\n    cancel() {\n        if (this._active) {\n            this.tick(Date.now());\n            this._active = false;\n            this._notify(false);\n        }\n    }\n    tick(date) {\n        const elapsed = date - this._start;\n        const duration = this._duration;\n        const prop = this._prop;\n        const from = this._from;\n        const loop = this._loop;\n        const to = this._to;\n        let factor;\n        this._active = from !== to && (loop || elapsed < duration);\n        if (!this._active) {\n            this._target[prop] = to;\n            this._notify(true);\n            return;\n        }\n        if (elapsed < 0) {\n            this._target[prop] = from;\n            return;\n        }\n        factor = elapsed / duration % 2;\n        factor = loop && factor > 1 ? 2 - factor : factor;\n        factor = this._easing(Math.min(1, Math.max(0, factor)));\n        this._target[prop] = this._fn(from, to, factor);\n    }\n    wait() {\n        const promises = this._promises || (this._promises = []);\n        return new Promise((res, rej)=>{\n            promises.push({\n                res,\n                rej\n            });\n        });\n    }\n    _notify(resolved) {\n        const method = resolved ? 'res' : 'rej';\n        const promises = this._promises || [];\n        for(let i = 0; i < promises.length; i++){\n            promises[i][method]();\n        }\n    }\n}\n\nclass Animations {\n    constructor(chart, config){\n        this._chart = chart;\n        this._properties = new Map();\n        this.configure(config);\n    }\n    configure(config) {\n        if (!isObject(config)) {\n            return;\n        }\n        const animationOptions = Object.keys(defaults.animation);\n        const animatedProps = this._properties;\n        Object.getOwnPropertyNames(config).forEach((key)=>{\n            const cfg = config[key];\n            if (!isObject(cfg)) {\n                return;\n            }\n            const resolved = {};\n            for (const option of animationOptions){\n                resolved[option] = cfg[option];\n            }\n            (isArray(cfg.properties) && cfg.properties || [\n                key\n            ]).forEach((prop)=>{\n                if (prop === key || !animatedProps.has(prop)) {\n                    animatedProps.set(prop, resolved);\n                }\n            });\n        });\n    }\n _animateOptions(target, values) {\n        const newOptions = values.options;\n        const options = resolveTargetOptions(target, newOptions);\n        if (!options) {\n            return [];\n        }\n        const animations = this._createAnimations(options, newOptions);\n        if (newOptions.$shared) {\n            awaitAll(target.options.$animations, newOptions).then(()=>{\n                target.options = newOptions;\n            }, ()=>{\n            });\n        }\n        return animations;\n    }\n _createAnimations(target, values) {\n        const animatedProps = this._properties;\n        const animations = [];\n        const running = target.$animations || (target.$animations = {});\n        const props = Object.keys(values);\n        const date = Date.now();\n        let i;\n        for(i = props.length - 1; i >= 0; --i){\n            const prop = props[i];\n            if (prop.charAt(0) === '$') {\n                continue;\n            }\n            if (prop === 'options') {\n                animations.push(...this._animateOptions(target, values));\n                continue;\n            }\n            const value = values[prop];\n            let animation = running[prop];\n            const cfg = animatedProps.get(prop);\n            if (animation) {\n                if (cfg && animation.active()) {\n                    animation.update(cfg, value, date);\n                    continue;\n                } else {\n                    animation.cancel();\n                }\n            }\n            if (!cfg || !cfg.duration) {\n                target[prop] = value;\n                continue;\n            }\n            running[prop] = animation = new Animation(cfg, target, prop, value);\n            animations.push(animation);\n        }\n        return animations;\n    }\n update(target, values) {\n        if (this._properties.size === 0) {\n            Object.assign(target, values);\n            return;\n        }\n        const animations = this._createAnimations(target, values);\n        if (animations.length) {\n            animator.add(this._chart, animations);\n            return true;\n        }\n    }\n}\nfunction awaitAll(animations, properties) {\n    const running = [];\n    const keys = Object.keys(properties);\n    for(let i = 0; i < keys.length; i++){\n        const anim = animations[keys[i]];\n        if (anim && anim.active()) {\n            running.push(anim.wait());\n        }\n    }\n    return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n    if (!newOptions) {\n        return;\n    }\n    let options = target.options;\n    if (!options) {\n        target.options = newOptions;\n        return;\n    }\n    if (options.$shared) {\n        target.options = options = Object.assign({}, options, {\n            $shared: false,\n            $animations: {}\n        });\n    }\n    return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n    const opts = scale && scale.options || {};\n    const reverse = opts.reverse;\n    const min = opts.min === undefined ? allowedOverflow : 0;\n    const max = opts.max === undefined ? allowedOverflow : 0;\n    return {\n        start: reverse ? max : min,\n        end: reverse ? min : max\n    };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n    if (allowedOverflow === false) {\n        return false;\n    }\n    const x = scaleClip(xScale, allowedOverflow);\n    const y = scaleClip(yScale, allowedOverflow);\n    return {\n        top: y.end,\n        right: x.end,\n        bottom: y.start,\n        left: x.start\n    };\n}\nfunction toClip(value) {\n    let t, r, b, l;\n    if (isObject(value)) {\n        t = value.top;\n        r = value.right;\n        b = value.bottom;\n        l = value.left;\n    } else {\n        t = r = b = l = value;\n    }\n    return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        disabled: value === false\n    };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n    const keys = [];\n    const metasets = chart._getSortedDatasetMetas(filterVisible);\n    let i, ilen;\n    for(i = 0, ilen = metasets.length; i < ilen; ++i){\n        keys.push(metasets[i].index);\n    }\n    return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n    const keys = stack.keys;\n    const singleMode = options.mode === 'single';\n    let i, ilen, datasetIndex, otherValue;\n    if (value === null) {\n        return;\n    }\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        datasetIndex = +keys[i];\n        if (datasetIndex === dsIndex) {\n            if (options.all) {\n                continue;\n            }\n            break;\n        }\n        otherValue = stack.values[datasetIndex];\n        if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n            value += otherValue;\n        }\n    }\n    return value;\n}\nfunction convertObjectDataToArray(data, meta) {\n    const { iScale , vScale  } = meta;\n    const iAxisKey = iScale.axis === 'x' ? 'x' : 'y';\n    const vAxisKey = vScale.axis === 'x' ? 'x' : 'y';\n    const keys = Object.keys(data);\n    const adata = new Array(keys.length);\n    let i, ilen, key;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        key = keys[i];\n        adata[i] = {\n            [iAxisKey]: key,\n            [vAxisKey]: data[key]\n        };\n    }\n    return adata;\n}\nfunction isStacked(scale, meta) {\n    const stacked = scale && scale.options.stacked;\n    return stacked || stacked === undefined && meta.stack !== undefined;\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n    return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n    const { min , max , minDefined , maxDefined  } = scale.getUserBounds();\n    return {\n        min: minDefined ? min : Number.NEGATIVE_INFINITY,\n        max: maxDefined ? max : Number.POSITIVE_INFINITY\n    };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n    const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n    return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n    for (const meta of vScale.getMatchingVisibleMetas(type).reverse()){\n        const value = stack[meta.index];\n        if (positive && value > 0 || !positive && value < 0) {\n            return meta.index;\n        }\n    }\n    return null;\n}\nfunction updateStacks(controller, parsed) {\n    const { chart , _cachedMeta: meta  } = controller;\n    const stacks = chart._stacks || (chart._stacks = {});\n    const { iScale , vScale , index: datasetIndex  } = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const key = getStackKey(iScale, vScale, meta);\n    const ilen = parsed.length;\n    let stack;\n    for(let i = 0; i < ilen; ++i){\n        const item = parsed[i];\n        const { [iAxis]: index , [vAxis]: value  } = item;\n        const itemStacks = item._stacks || (item._stacks = {});\n        stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n        stack[datasetIndex] = value;\n        stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n        stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n        const visualValues = stack._visualValues || (stack._visualValues = {});\n        visualValues[datasetIndex] = value;\n    }\n}\nfunction getFirstScaleId(chart, axis) {\n    const scales = chart.scales;\n    return Object.keys(scales).filter((key)=>scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n    return createContext(parent, {\n        active: false,\n        dataset: undefined,\n        datasetIndex: index,\n        index,\n        mode: 'default',\n        type: 'dataset'\n    });\n}\nfunction createDataContext(parent, index, element) {\n    return createContext(parent, {\n        active: false,\n        dataIndex: index,\n        parsed: undefined,\n        raw: undefined,\n        element,\n        index,\n        mode: 'default',\n        type: 'data'\n    });\n}\nfunction clearStacks(meta, items) {\n    const datasetIndex = meta.controller.index;\n    const axis = meta.vScale && meta.vScale.axis;\n    if (!axis) {\n        return;\n    }\n    items = items || meta._parsed;\n    for (const parsed of items){\n        const stacks = parsed._stacks;\n        if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n            return;\n        }\n        delete stacks[axis][datasetIndex];\n        if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n            delete stacks[axis]._visualValues[datasetIndex];\n        }\n    }\n}\nconst isDirectUpdateMode = (mode)=>mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared)=>shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart)=>canStack && !meta.hidden && meta._stacked && {\n        keys: getSortedDatasetIndices(chart, true),\n        values: null\n    };\nclass DatasetController {\n static defaults = {};\n static datasetElementType = null;\n static dataElementType = null;\n constructor(chart, datasetIndex){\n        this.chart = chart;\n        this._ctx = chart.ctx;\n        this.index = datasetIndex;\n        this._cachedDataOpts = {};\n        this._cachedMeta = this.getMeta();\n        this._type = this._cachedMeta.type;\n        this.options = undefined;\n         this._parsing = false;\n        this._data = undefined;\n        this._objectData = undefined;\n        this._sharedOptions = undefined;\n        this._drawStart = undefined;\n        this._drawCount = undefined;\n        this.enableOptionSharing = false;\n        this.supportsDecimation = false;\n        this.$context = undefined;\n        this._syncList = [];\n        this.datasetElementType = new.target.datasetElementType;\n        this.dataElementType = new.target.dataElementType;\n        this.initialize();\n    }\n    initialize() {\n        const meta = this._cachedMeta;\n        this.configure();\n        this.linkScales();\n        meta._stacked = isStacked(meta.vScale, meta);\n        this.addElements();\n        if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n            console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n        }\n    }\n    updateIndex(datasetIndex) {\n        if (this.index !== datasetIndex) {\n            clearStacks(this._cachedMeta);\n        }\n        this.index = datasetIndex;\n    }\n    linkScales() {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        const chooseId = (axis, x, y, r)=>axis === 'x' ? x : axis === 'r' ? r : y;\n        const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n        const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n        const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n        const indexAxis = meta.indexAxis;\n        const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n        const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n        meta.xScale = this.getScaleForId(xid);\n        meta.yScale = this.getScaleForId(yid);\n        meta.rScale = this.getScaleForId(rid);\n        meta.iScale = this.getScaleForId(iid);\n        meta.vScale = this.getScaleForId(vid);\n    }\n    getDataset() {\n        return this.chart.data.datasets[this.index];\n    }\n    getMeta() {\n        return this.chart.getDatasetMeta(this.index);\n    }\n getScaleForId(scaleID) {\n        return this.chart.scales[scaleID];\n    }\n _getOtherScale(scale) {\n        const meta = this._cachedMeta;\n        return scale === meta.iScale ? meta.vScale : meta.iScale;\n    }\n    reset() {\n        this._update('reset');\n    }\n _destroy() {\n        const meta = this._cachedMeta;\n        if (this._data) {\n            unlistenArrayEvents(this._data, this);\n        }\n        if (meta._stacked) {\n            clearStacks(meta);\n        }\n    }\n _dataCheck() {\n        const dataset = this.getDataset();\n        const data = dataset.data || (dataset.data = []);\n        const _data = this._data;\n        if (isObject(data)) {\n            const meta = this._cachedMeta;\n            this._data = convertObjectDataToArray(data, meta);\n        } else if (_data !== data) {\n            if (_data) {\n                unlistenArrayEvents(_data, this);\n                const meta = this._cachedMeta;\n                clearStacks(meta);\n                meta._parsed = [];\n            }\n            if (data && Object.isExtensible(data)) {\n                listenArrayEvents(data, this);\n            }\n            this._syncList = [];\n            this._data = data;\n        }\n    }\n    addElements() {\n        const meta = this._cachedMeta;\n        this._dataCheck();\n        if (this.datasetElementType) {\n            meta.dataset = new this.datasetElementType();\n        }\n    }\n    buildOrUpdateElements(resetNewElements) {\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        let stackChanged = false;\n        this._dataCheck();\n        const oldStacked = meta._stacked;\n        meta._stacked = isStacked(meta.vScale, meta);\n        if (meta.stack !== dataset.stack) {\n            stackChanged = true;\n            clearStacks(meta);\n            meta.stack = dataset.stack;\n        }\n        this._resyncElements(resetNewElements);\n        if (stackChanged || oldStacked !== meta._stacked) {\n            updateStacks(this, meta._parsed);\n        }\n    }\n configure() {\n        const config = this.chart.config;\n        const scopeKeys = config.datasetScopeKeys(this._type);\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n        this.options = config.createResolver(scopes, this.getContext());\n        this._parsing = this.options.parsing;\n        this._cachedDataOpts = {};\n    }\n parse(start, count) {\n        const { _cachedMeta: meta , _data: data  } = this;\n        const { iScale , _stacked  } = meta;\n        const iAxis = iScale.axis;\n        let sorted = start === 0 && count === data.length ? true : meta._sorted;\n        let prev = start > 0 && meta._parsed[start - 1];\n        let i, cur, parsed;\n        if (this._parsing === false) {\n            meta._parsed = data;\n            meta._sorted = true;\n            parsed = data;\n        } else {\n            if (isArray(data[start])) {\n                parsed = this.parseArrayData(meta, data, start, count);\n            } else if (isObject(data[start])) {\n                parsed = this.parseObjectData(meta, data, start, count);\n            } else {\n                parsed = this.parsePrimitiveData(meta, data, start, count);\n            }\n            const isNotInOrderComparedToPrev = ()=>cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n            for(i = 0; i < count; ++i){\n                meta._parsed[i + start] = cur = parsed[i];\n                if (sorted) {\n                    if (isNotInOrderComparedToPrev()) {\n                        sorted = false;\n                    }\n                    prev = cur;\n                }\n            }\n            meta._sorted = sorted;\n        }\n        if (_stacked) {\n            updateStacks(this, parsed);\n        }\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const labels = iScale.getLabels();\n        const singleScale = iScale === vScale;\n        const parsed = new Array(count);\n        let i, ilen, index;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            parsed[i] = {\n                [iAxis]: singleScale || iScale.parse(labels[index], index),\n                [vAxis]: vScale.parse(data[index], index)\n            };\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(item[0], index),\n                y: yScale.parse(item[1], index)\n            };\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n                y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n            };\n        }\n        return parsed;\n    }\n getParsed(index) {\n        return this._cachedMeta._parsed[index];\n    }\n getDataElement(index) {\n        return this._cachedMeta.data[index];\n    }\n applyStack(scale, parsed, mode) {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const value = parsed[scale.axis];\n        const stack = {\n            keys: getSortedDatasetIndices(chart, true),\n            values: parsed._stacks[scale.axis]._visualValues\n        };\n        return applyStack(stack, value, meta.index, {\n            mode\n        });\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        const parsedValue = parsed[scale.axis];\n        let value = parsedValue === null ? NaN : parsedValue;\n        const values = stack && parsed._stacks[scale.axis];\n        if (stack && values) {\n            stack.values = values;\n            value = applyStack(stack, parsedValue, this._cachedMeta.index);\n        }\n        range.min = Math.min(range.min, value);\n        range.max = Math.max(range.max, value);\n    }\n getMinMax(scale, canStack) {\n        const meta = this._cachedMeta;\n        const _parsed = meta._parsed;\n        const sorted = meta._sorted && scale === meta.iScale;\n        const ilen = _parsed.length;\n        const otherScale = this._getOtherScale(scale);\n        const stack = createStack(canStack, meta, this.chart);\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        const { min: otherMin , max: otherMax  } = getUserBounds(otherScale);\n        let i, parsed;\n        function _skip() {\n            parsed = _parsed[i];\n            const otherValue = parsed[otherScale.axis];\n            return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n        }\n        for(i = 0; i < ilen; ++i){\n            if (_skip()) {\n                continue;\n            }\n            this.updateRangeFromParsed(range, scale, parsed, stack);\n            if (sorted) {\n                break;\n            }\n        }\n        if (sorted) {\n            for(i = ilen - 1; i >= 0; --i){\n                if (_skip()) {\n                    continue;\n                }\n                this.updateRangeFromParsed(range, scale, parsed, stack);\n                break;\n            }\n        }\n        return range;\n    }\n    getAllParsedValues(scale) {\n        const parsed = this._cachedMeta._parsed;\n        const values = [];\n        let i, ilen, value;\n        for(i = 0, ilen = parsed.length; i < ilen; ++i){\n            value = parsed[i][scale.axis];\n            if (isNumberFinite(value)) {\n                values.push(value);\n            }\n        }\n        return values;\n    }\n getMaxOverflow() {\n        return false;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const vScale = meta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n            value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n        };\n    }\n _update(mode) {\n        const meta = this._cachedMeta;\n        this.update(mode || 'default');\n        meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n    }\n update(mode) {}\n    draw() {\n        const ctx = this._ctx;\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const elements = meta.data || [];\n        const area = chart.chartArea;\n        const active = [];\n        const start = this._drawStart || 0;\n        const count = this._drawCount || elements.length - start;\n        const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n        let i;\n        if (meta.dataset) {\n            meta.dataset.draw(ctx, area, start, count);\n        }\n        for(i = start; i < start + count; ++i){\n            const element = elements[i];\n            if (element.hidden) {\n                continue;\n            }\n            if (element.active && drawActiveElementsOnTop) {\n                active.push(element);\n            } else {\n                element.draw(ctx, area);\n            }\n        }\n        for(i = 0; i < active.length; ++i){\n            active[i].draw(ctx, area);\n        }\n    }\n getStyle(index, active) {\n        const mode = active ? 'active' : 'default';\n        return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n    }\n getContext(index, active, mode) {\n        const dataset = this.getDataset();\n        let context;\n        if (index >= 0 && index < this._cachedMeta.data.length) {\n            const element = this._cachedMeta.data[index];\n            context = element.$context || (element.$context = createDataContext(this.getContext(), index, element));\n            context.parsed = this.getParsed(index);\n            context.raw = dataset.data[index];\n            context.index = context.dataIndex = index;\n        } else {\n            context = this.$context || (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n            context.dataset = dataset;\n            context.index = context.datasetIndex = this.index;\n        }\n        context.active = !!active;\n        context.mode = mode;\n        return context;\n    }\n resolveDatasetElementOptions(mode) {\n        return this._resolveElementOptions(this.datasetElementType.id, mode);\n    }\n resolveDataElementOptions(index, mode) {\n        return this._resolveElementOptions(this.dataElementType.id, mode, index);\n    }\n _resolveElementOptions(elementType, mode = 'default', index) {\n        const active = mode === 'active';\n        const cache = this._cachedDataOpts;\n        const cacheKey = elementType + '-' + mode;\n        const cached = cache[cacheKey];\n        const sharing = this.enableOptionSharing && defined(index);\n        if (cached) {\n            return cloneIfNotShared(cached, sharing);\n        }\n        const config = this.chart.config;\n        const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n        const prefixes = active ? [\n            `${elementType}Hover`,\n            'hover',\n            elementType,\n            ''\n        ] : [\n            elementType,\n            ''\n        ];\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n        const names = Object.keys(defaults.elements[elementType]);\n        const context = ()=>this.getContext(index, active, mode);\n        const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n        if (values.$shared) {\n            values.$shared = sharing;\n            cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n        }\n        return values;\n    }\n _resolveAnimations(index, transition, active) {\n        const chart = this.chart;\n        const cache = this._cachedDataOpts;\n        const cacheKey = `animation-${transition}`;\n        const cached = cache[cacheKey];\n        if (cached) {\n            return cached;\n        }\n        let options;\n        if (chart.options.animation !== false) {\n            const config = this.chart.config;\n            const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n            const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n            options = config.createResolver(scopes, this.getContext(index, active, transition));\n        }\n        const animations = new Animations(chart, options && options.animations);\n        if (options && options._cacheable) {\n            cache[cacheKey] = Object.freeze(animations);\n        }\n        return animations;\n    }\n getSharedOptions(options) {\n        if (!options.$shared) {\n            return;\n        }\n        return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n    }\n includeOptions(mode, sharedOptions) {\n        return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n    }\n _getSharedOptions(start, mode) {\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const previouslySharedOptions = this._sharedOptions;\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions) || sharedOptions !== previouslySharedOptions;\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n        return {\n            sharedOptions,\n            includeOptions\n        };\n    }\n updateElement(element, index, properties, mode) {\n        if (isDirectUpdateMode(mode)) {\n            Object.assign(element, properties);\n        } else {\n            this._resolveAnimations(index, mode).update(element, properties);\n        }\n    }\n updateSharedOptions(sharedOptions, mode, newOptions) {\n        if (sharedOptions && !isDirectUpdateMode(mode)) {\n            this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n        }\n    }\n _setStyle(element, index, mode, active) {\n        element.active = active;\n        const options = this.getStyle(index, active);\n        this._resolveAnimations(index, mode, active).update(element, {\n            options: !active && this.getSharedOptions(options) || options\n        });\n    }\n    removeHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', false);\n    }\n    setHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', true);\n    }\n _removeDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', false);\n        }\n    }\n _setDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', true);\n        }\n    }\n _resyncElements(resetNewElements) {\n        const data = this._data;\n        const elements = this._cachedMeta.data;\n        for (const [method, arg1, arg2] of this._syncList){\n            this[method](arg1, arg2);\n        }\n        this._syncList = [];\n        const numMeta = elements.length;\n        const numData = data.length;\n        const count = Math.min(numData, numMeta);\n        if (count) {\n            this.parse(0, count);\n        }\n        if (numData > numMeta) {\n            this._insertElements(numMeta, numData - numMeta, resetNewElements);\n        } else if (numData < numMeta) {\n            this._removeElements(numData, numMeta - numData);\n        }\n    }\n _insertElements(start, count, resetNewElements = true) {\n        const meta = this._cachedMeta;\n        const data = meta.data;\n        const end = start + count;\n        let i;\n        const move = (arr)=>{\n            arr.length += count;\n            for(i = arr.length - 1; i >= end; i--){\n                arr[i] = arr[i - count];\n            }\n        };\n        move(data);\n        for(i = start; i < end; ++i){\n            data[i] = new this.dataElementType();\n        }\n        if (this._parsing) {\n            move(meta._parsed);\n        }\n        this.parse(start, count);\n        if (resetNewElements) {\n            this.updateElements(data, start, count, 'reset');\n        }\n    }\n    updateElements(element, start, count, mode) {}\n _removeElements(start, count) {\n        const meta = this._cachedMeta;\n        if (this._parsing) {\n            const removed = meta._parsed.splice(start, count);\n            if (meta._stacked) {\n                clearStacks(meta, removed);\n            }\n        }\n        meta.data.splice(start, count);\n    }\n _sync(args) {\n        if (this._parsing) {\n            this._syncList.push(args);\n        } else {\n            const [method, arg1, arg2] = args;\n            this[method](arg1, arg2);\n        }\n        this.chart._dataChanges.push([\n            this.index,\n            ...args\n        ]);\n    }\n    _onDataPush() {\n        const count = arguments.length;\n        this._sync([\n            '_insertElements',\n            this.getDataset().data.length - count,\n            count\n        ]);\n    }\n    _onDataPop() {\n        this._sync([\n            '_removeElements',\n            this._cachedMeta.data.length - 1,\n            1\n        ]);\n    }\n    _onDataShift() {\n        this._sync([\n            '_removeElements',\n            0,\n            1\n        ]);\n    }\n    _onDataSplice(start, count) {\n        if (count) {\n            this._sync([\n                '_removeElements',\n                start,\n                count\n            ]);\n        }\n        const newCount = arguments.length - 2;\n        if (newCount) {\n            this._sync([\n                '_insertElements',\n                start,\n                newCount\n            ]);\n        }\n    }\n    _onDataUnshift() {\n        this._sync([\n            '_insertElements',\n            0,\n            arguments.length\n        ]);\n    }\n}\n\nfunction getAllScaleValues(scale, type) {\n    if (!scale._cache.$bar) {\n        const visibleMetas = scale.getMatchingVisibleMetas(type);\n        let values = [];\n        for(let i = 0, ilen = visibleMetas.length; i < ilen; i++){\n            values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n        }\n        scale._cache.$bar = _arrayUnique(values.sort((a, b)=>a - b));\n    }\n    return scale._cache.$bar;\n}\n function computeMinSampleSize(meta) {\n    const scale = meta.iScale;\n    const values = getAllScaleValues(scale, meta.type);\n    let min = scale._length;\n    let i, ilen, curr, prev;\n    const updateMinAndPrev = ()=>{\n        if (curr === 32767 || curr === -32768) {\n            return;\n        }\n        if (defined(prev)) {\n            min = Math.min(min, Math.abs(curr - prev) || min);\n        }\n        prev = curr;\n    };\n    for(i = 0, ilen = values.length; i < ilen; ++i){\n        curr = scale.getPixelForValue(values[i]);\n        updateMinAndPrev();\n    }\n    prev = undefined;\n    for(i = 0, ilen = scale.ticks.length; i < ilen; ++i){\n        curr = scale.getPixelForTick(i);\n        updateMinAndPrev();\n    }\n    return min;\n}\n function computeFitCategoryTraits(index, ruler, options, stackCount) {\n    const thickness = options.barThickness;\n    let size, ratio;\n    if (isNullOrUndef(thickness)) {\n        size = ruler.min * options.categoryPercentage;\n        ratio = options.barPercentage;\n    } else {\n        size = thickness * stackCount;\n        ratio = 1;\n    }\n    return {\n        chunk: size / stackCount,\n        ratio,\n        start: ruler.pixels[index] - size / 2\n    };\n}\n function computeFlexCategoryTraits(index, ruler, options, stackCount) {\n    const pixels = ruler.pixels;\n    const curr = pixels[index];\n    let prev = index > 0 ? pixels[index - 1] : null;\n    let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    const percent = options.categoryPercentage;\n    if (prev === null) {\n        prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n    if (next === null) {\n        next = curr + curr - prev;\n    }\n    const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    const size = Math.abs(next - prev) / 2 * percent;\n    return {\n        chunk: size / stackCount,\n        ratio: options.barPercentage,\n        start\n    };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n    const startValue = vScale.parse(entry[0], i);\n    const endValue = vScale.parse(entry[1], i);\n    const min = Math.min(startValue, endValue);\n    const max = Math.max(startValue, endValue);\n    let barStart = min;\n    let barEnd = max;\n    if (Math.abs(min) > Math.abs(max)) {\n        barStart = max;\n        barEnd = min;\n    }\n    item[vScale.axis] = barEnd;\n    item._custom = {\n        barStart,\n        barEnd,\n        start: startValue,\n        end: endValue,\n        min,\n        max\n    };\n}\nfunction parseValue(entry, item, vScale, i) {\n    if (isArray(entry)) {\n        parseFloatBar(entry, item, vScale, i);\n    } else {\n        item[vScale.axis] = vScale.parse(entry, i);\n    }\n    return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = [];\n    let i, ilen, item, entry;\n    for(i = start, ilen = start + count; i < ilen; ++i){\n        entry = data[i];\n        item = {};\n        item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n        parsed.push(parseValue(entry, item, vScale, i));\n    }\n    return parsed;\n}\nfunction isFloatBar(custom) {\n    return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n    if (size !== 0) {\n        return sign(size);\n    }\n    return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n    let reverse, start, end, top, bottom;\n    if (properties.horizontal) {\n        reverse = properties.base > properties.x;\n        start = 'left';\n        end = 'right';\n    } else {\n        reverse = properties.base < properties.y;\n        start = 'bottom';\n        end = 'top';\n    }\n    if (reverse) {\n        top = 'end';\n        bottom = 'start';\n    } else {\n        top = 'start';\n        bottom = 'end';\n    }\n    return {\n        start,\n        end,\n        reverse,\n        top,\n        bottom\n    };\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n    let edge = options.borderSkipped;\n    const res = {};\n    if (!edge) {\n        properties.borderSkipped = res;\n        return;\n    }\n    if (edge === true) {\n        properties.borderSkipped = {\n            top: true,\n            right: true,\n            bottom: true,\n            left: true\n        };\n        return;\n    }\n    const { start , end , reverse , top , bottom  } = borderProps(properties);\n    if (edge === 'middle' && stack) {\n        properties.enableBorderRadius = true;\n        if ((stack._top || 0) === index) {\n            edge = top;\n        } else if ((stack._bottom || 0) === index) {\n            edge = bottom;\n        } else {\n            res[parseEdge(bottom, start, end, reverse)] = true;\n            edge = top;\n        }\n    }\n    res[parseEdge(edge, start, end, reverse)] = true;\n    properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n    if (reverse) {\n        edge = swap(edge, a, b);\n        edge = startEnd(edge, b, a);\n    } else {\n        edge = startEnd(edge, a, b);\n    }\n    return edge;\n}\nfunction swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n    return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, { inflateAmount  }, ratio) {\n    properties.inflateAmount = inflateAmount === 'auto' ? ratio === 1 ? 0.33 : 0 : inflateAmount;\n}\nclass BarController extends DatasetController {\n    static id = 'bar';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'bar',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        grouped: true,\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'base',\n                    'width',\n                    'height'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category',\n                offset: true,\n                grid: {\n                    offset: true\n                }\n            },\n            _value_: {\n                type: 'linear',\n                beginAtZero: true\n            }\n        }\n    };\n parsePrimitiveData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseArrayData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseObjectData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const parsed = [];\n        let i, ilen, item, obj;\n        for(i = start, ilen = start + count; i < ilen; ++i){\n            obj = data[i];\n            item = {};\n            item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n            parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n        }\n        return parsed;\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        super.updateRangeFromParsed(range, scale, parsed, stack);\n        const custom = parsed._custom;\n        if (custom && scale === this._cachedMeta.vScale) {\n            range.min = Math.min(range.min, custom.min);\n            range.max = Math.max(range.max, custom.max);\n        }\n    }\n getMaxOverflow() {\n        return 0;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const { iScale , vScale  } = meta;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n        return {\n            label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n            value\n        };\n    }\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n        const meta = this._cachedMeta;\n        meta.stack = this.getDataset().stack;\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        this.updateElements(meta.data, 0, meta.data.length, mode);\n    }\n    updateElements(bars, start, count, mode) {\n        const reset = mode === 'reset';\n        const { index , _cachedMeta: { vScale  }  } = this;\n        const base = vScale.getBasePixel();\n        const horizontal = vScale.isHorizontal();\n        const ruler = this._getRuler();\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        for(let i = start; i < start + count; i++){\n            const parsed = this.getParsed(i);\n            const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n                base,\n                head: base\n            } : this._calculateBarValuePixels(i);\n            const ipixels = this._calculateBarIndexPixels(i, ruler);\n            const stack = (parsed._stacks || {})[vScale.axis];\n            const properties = {\n                horizontal,\n                base: vpixels.base,\n                enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n                x: horizontal ? vpixels.head : ipixels.center,\n                y: horizontal ? ipixels.center : vpixels.head,\n                height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n                width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n            }\n            const options = properties.options || bars[i].options;\n            setBorderSkipped(properties, options, stack, index);\n            setInflateAmount(properties, options, ruler.ratio);\n            this.updateElement(bars[i], i, properties, mode);\n        }\n    }\n _getStacks(last, dataIndex) {\n        const { iScale  } = this._cachedMeta;\n        const metasets = iScale.getMatchingVisibleMetas(this._type).filter((meta)=>meta.controller.options.grouped);\n        const stacked = iScale.options.stacked;\n        const stacks = [];\n        const currentParsed = this._cachedMeta.controller.getParsed(dataIndex);\n        const iScaleValue = currentParsed && currentParsed[iScale.axis];\n        const skipNull = (meta)=>{\n            const parsed = meta._parsed.find((item)=>item[iScale.axis] === iScaleValue);\n            const val = parsed && parsed[meta.vScale.axis];\n            if (isNullOrUndef(val) || isNaN(val)) {\n                return true;\n            }\n        };\n        for (const meta of metasets){\n            if (dataIndex !== undefined && skipNull(meta)) {\n                continue;\n            }\n            if (stacked === false || stacks.indexOf(meta.stack) === -1 || stacked === undefined && meta.stack === undefined) {\n                stacks.push(meta.stack);\n            }\n            if (meta.index === last) {\n                break;\n            }\n        }\n        if (!stacks.length) {\n            stacks.push(undefined);\n        }\n        return stacks;\n    }\n _getStackCount(index) {\n        return this._getStacks(undefined, index).length;\n    }\n _getStackIndex(datasetIndex, name, dataIndex) {\n        const stacks = this._getStacks(datasetIndex, dataIndex);\n        const index = name !== undefined ? stacks.indexOf(name) : -1;\n        return index === -1 ? stacks.length - 1 : index;\n    }\n _getRuler() {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const pixels = [];\n        let i, ilen;\n        for(i = 0, ilen = meta.data.length; i < ilen; ++i){\n            pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n        }\n        const barThickness = opts.barThickness;\n        const min = barThickness || computeMinSampleSize(meta);\n        return {\n            min,\n            pixels,\n            start: iScale._startPixel,\n            end: iScale._endPixel,\n            stackCount: this._getStackCount(),\n            scale: iScale,\n            grouped: opts.grouped,\n            ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n        };\n    }\n _calculateBarValuePixels(index) {\n        const { _cachedMeta: { vScale , _stacked , index: datasetIndex  } , options: { base: baseValue , minBarLength  }  } = this;\n        const actualBase = baseValue || 0;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const floating = isFloatBar(custom);\n        let value = parsed[vScale.axis];\n        let start = 0;\n        let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n        let head, size;\n        if (length !== value) {\n            start = length - value;\n            length = value;\n        }\n        if (floating) {\n            value = custom.barStart;\n            length = custom.barEnd - custom.barStart;\n            if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n                start = 0;\n            }\n            start += value;\n        }\n        const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n        let base = vScale.getPixelForValue(startValue);\n        if (this.chart.getDataVisibility(index)) {\n            head = vScale.getPixelForValue(start + length);\n        } else {\n            head = base;\n        }\n        size = head - base;\n        if (Math.abs(size) < minBarLength) {\n            size = barSign(size, vScale, actualBase) * minBarLength;\n            if (value === actualBase) {\n                base -= size / 2;\n            }\n            const startPixel = vScale.getPixelForDecimal(0);\n            const endPixel = vScale.getPixelForDecimal(1);\n            const min = Math.min(startPixel, endPixel);\n            const max = Math.max(startPixel, endPixel);\n            base = Math.max(Math.min(base, max), min);\n            head = base + size;\n            if (_stacked && !floating) {\n                parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n            }\n        }\n        if (base === vScale.getPixelForValue(actualBase)) {\n            const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n            base += halfGrid;\n            size -= halfGrid;\n        }\n        return {\n            size,\n            base,\n            head,\n            center: head + size / 2\n        };\n    }\n _calculateBarIndexPixels(index, ruler) {\n        const scale = ruler.scale;\n        const options = this.options;\n        const skipNull = options.skipNull;\n        const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n        let center, size;\n        if (ruler.grouped) {\n            const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n            const range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount) : computeFitCategoryTraits(index, ruler, options, stackCount);\n            const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n            center = range.start + range.chunk * stackIndex + range.chunk / 2;\n            size = Math.min(maxBarThickness, range.chunk * range.ratio);\n        } else {\n            center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n            size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n        }\n        return {\n            base: center - size / 2,\n            head: center + size / 2,\n            center,\n            size\n        };\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        const vScale = meta.vScale;\n        const rects = meta.data;\n        const ilen = rects.length;\n        let i = 0;\n        for(; i < ilen; ++i){\n            if (this.getParsed(i)[vScale.axis] !== null && !rects[i].hidden) {\n                rects[i].draw(this._ctx);\n            }\n        }\n    }\n}\n\nclass BubbleController extends DatasetController {\n    static id = 'bubble';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'borderWidth',\n                    'radius'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const parsed = super.parsePrimitiveData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const parsed = super.parseArrayData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const parsed = super.parseObjectData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n getMaxOverflow() {\n        const data = this._cachedMeta.data;\n        let max = 0;\n        for(let i = data.length - 1; i >= 0; --i){\n            max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n        }\n        return max > 0 && max;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        const r = parsed._custom;\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n        };\n    }\n    update(mode) {\n        const points = this._cachedMeta.data;\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const parsed = !reset && this.getParsed(i);\n            const properties = {};\n            const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n            const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel);\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n                if (reset) {\n                    properties.options.radius = 0;\n                }\n            }\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n resolveDataElementOptions(index, mode) {\n        const parsed = this.getParsed(index);\n        let values = super.resolveDataElementOptions(index, mode);\n        if (values.$shared) {\n            values = Object.assign({}, values, {\n                $shared: false\n            });\n        }\n        const radius = values.radius;\n        if (mode !== 'active') {\n            values.radius = 0;\n        }\n        values.radius += valueOrDefault(parsed && parsed._custom, radius);\n        return values;\n    }\n}\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n    let ratioX = 1;\n    let ratioY = 1;\n    let offsetX = 0;\n    let offsetY = 0;\n    if (circumference < TAU) {\n        const startAngle = rotation;\n        const endAngle = startAngle + circumference;\n        const startX = Math.cos(startAngle);\n        const startY = Math.sin(startAngle);\n        const endX = Math.cos(endAngle);\n        const endY = Math.sin(endAngle);\n        const calcMax = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n        const calcMin = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n        const maxX = calcMax(0, startX, endX);\n        const maxY = calcMax(HALF_PI, startY, endY);\n        const minX = calcMin(PI, startX, endX);\n        const minY = calcMin(PI + HALF_PI, startY, endY);\n        ratioX = (maxX - minX) / 2;\n        ratioY = (maxY - minY) / 2;\n        offsetX = -(maxX + minX) / 2;\n        offsetY = -(maxY + minY) / 2;\n    }\n    return {\n        ratioX,\n        ratioY,\n        offsetX,\n        offsetY\n    };\n}\nclass DoughnutController extends DatasetController {\n    static id = 'doughnut';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: false\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'circumference',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius',\n                    'startAngle',\n                    'x',\n                    'y',\n                    'offset',\n                    'borderWidth',\n                    'spacing'\n                ]\n            }\n        },\n        cutout: '50%',\n        rotation: 0,\n        circumference: 360,\n        radius: '100%',\n        spacing: 0,\n        indexAxis: 'r'\n    };\n    static descriptors = {\n        _scriptable: (name)=>name !== 'spacing',\n        _indexable: (name)=>name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash')\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.enableOptionSharing = true;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.offsetX = undefined;\n        this.offsetY = undefined;\n    }\n    linkScales() {}\n parse(start, count) {\n        const data = this.getDataset().data;\n        const meta = this._cachedMeta;\n        if (this._parsing === false) {\n            meta._parsed = data;\n        } else {\n            let getter = (i)=>+data[i];\n            if (isObject(data[start])) {\n                const { key ='value'  } = this._parsing;\n                getter = (i)=>+resolveObjectKey(data[i], key);\n            }\n            let i, ilen;\n            for(i = start, ilen = start + count; i < ilen; ++i){\n                meta._parsed[i] = getter(i);\n            }\n        }\n    }\n _getRotation() {\n        return toRadians(this.options.rotation - 90);\n    }\n _getCircumference() {\n        return toRadians(this.options.circumference);\n    }\n _getRotationExtents() {\n        let min = TAU;\n        let max = -TAU;\n        for(let i = 0; i < this.chart.data.datasets.length; ++i){\n            if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n                const controller = this.chart.getDatasetMeta(i).controller;\n                const rotation = controller._getRotation();\n                const circumference = controller._getCircumference();\n                min = Math.min(min, rotation);\n                max = Math.max(max, rotation + circumference);\n            }\n        }\n        return {\n            rotation: min,\n            circumference: max - min\n        };\n    }\n update(mode) {\n        const chart = this.chart;\n        const { chartArea  } = chart;\n        const meta = this._cachedMeta;\n        const arcs = meta.data;\n        const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n        const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n        const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n        const chartWeight = this._getRingWeight(this.index);\n        const { circumference , rotation  } = this._getRotationExtents();\n        const { ratioX , ratioY , offsetX , offsetY  } = getRatioAndOffset(rotation, circumference, cutout);\n        const maxWidth = (chartArea.width - spacing) / ratioX;\n        const maxHeight = (chartArea.height - spacing) / ratioY;\n        const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n        const outerRadius = toDimension(this.options.radius, maxRadius);\n        const innerRadius = Math.max(outerRadius * cutout, 0);\n        const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n        this.offsetX = offsetX * outerRadius;\n        this.offsetY = offsetY * outerRadius;\n        meta.total = this.calculateTotal();\n        this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n        this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n _circumference(i, reset) {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const circumference = this._getCircumference();\n        if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n            return 0;\n        }\n        return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const centerX = (chartArea.left + chartArea.right) / 2;\n        const centerY = (chartArea.top + chartArea.bottom) / 2;\n        const animateScale = reset && animationOpts.animateScale;\n        const innerRadius = animateScale ? 0 : this.innerRadius;\n        const outerRadius = animateScale ? 0 : this.outerRadius;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        let startAngle = this._getRotation();\n        let i;\n        for(i = 0; i < start; ++i){\n            startAngle += this._circumference(i, reset);\n        }\n        for(i = start; i < start + count; ++i){\n            const circumference = this._circumference(i, reset);\n            const arc = arcs[i];\n            const properties = {\n                x: centerX + this.offsetX,\n                y: centerY + this.offsetY,\n                startAngle,\n                endAngle: startAngle + circumference,\n                circumference,\n                outerRadius,\n                innerRadius\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n            }\n            startAngle += circumference;\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    calculateTotal() {\n        const meta = this._cachedMeta;\n        const metaData = meta.data;\n        let total = 0;\n        let i;\n        for(i = 0; i < metaData.length; i++){\n            const value = meta._parsed[i];\n            if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n                total += Math.abs(value);\n            }\n        }\n        return total;\n    }\n    calculateCircumference(value) {\n        const total = this._cachedMeta.total;\n        if (total > 0 && !isNaN(value)) {\n            return TAU * (Math.abs(value) / total);\n        }\n        return 0;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index], chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    getMaxBorderWidth(arcs) {\n        let max = 0;\n        const chart = this.chart;\n        let i, ilen, meta, controller, options;\n        if (!arcs) {\n            for(i = 0, ilen = chart.data.datasets.length; i < ilen; ++i){\n                if (chart.isDatasetVisible(i)) {\n                    meta = chart.getDatasetMeta(i);\n                    arcs = meta.data;\n                    controller = meta.controller;\n                    break;\n                }\n            }\n        }\n        if (!arcs) {\n            return 0;\n        }\n        for(i = 0, ilen = arcs.length; i < ilen; ++i){\n            options = controller.resolveDataElementOptions(i);\n            if (options.borderAlign !== 'inner') {\n                max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n            }\n        }\n        return max;\n    }\n    getMaxOffset(arcs) {\n        let max = 0;\n        for(let i = 0, ilen = arcs.length; i < ilen; ++i){\n            const options = this.resolveDataElementOptions(i);\n            max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n        }\n        return max;\n    }\n _getRingWeightOffset(datasetIndex) {\n        let ringWeightOffset = 0;\n        for(let i = 0; i < datasetIndex; ++i){\n            if (this.chart.isDatasetVisible(i)) {\n                ringWeightOffset += this._getRingWeight(i);\n            }\n        }\n        return ringWeightOffset;\n    }\n _getRingWeight(datasetIndex) {\n        return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n    }\n _getVisibleDatasetWeightTotal() {\n        return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n    }\n}\n\nclass LineController extends DatasetController {\n    static id = 'line';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        showLine: true,\n        spanGaps: false\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category'\n            },\n            _value_: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        this.supportsDecimation = true;\n        super.initialize();\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { dataset: line , data: points = [] , _dataset  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        line._chart = this.chart;\n        line._datasetIndex = this.index;\n        line._decimated = !!_dataset._decimated;\n        line.points = points;\n        const options = this.resolveDatasetElementOptions(mode);\n        if (!this.options.showLine) {\n            options.borderWidth = 0;\n        }\n        options.segment = this.options.segment;\n        this.updateElement(line, undefined, {\n            animated: !animationsDisabled,\n            options\n        }, mode);\n        this.updateElements(points, start, count, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        const end = start + count;\n        const pointsCount = points.length;\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = 0; i < pointsCount; ++i){\n            const point = points[i];\n            const properties = directUpdate ? point : {};\n            if (i < start || i >= end) {\n                properties.skip = true;\n                continue;\n            }\n            const parsed = this.getParsed(i);\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        const data = meta.data || [];\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n        super.draw();\n    }\n}\n\nclass PolarAreaController extends DatasetController {\n    static id = 'polarArea';\n static defaults = {\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: true\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'startAngle',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius'\n                ]\n            }\n        },\n        indexAxis: 'r',\n        startAngle: 0\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        },\n        scales: {\n            r: {\n                type: 'radialLinear',\n                angleLines: {\n                    display: false\n                },\n                beginAtZero: true,\n                grid: {\n                    circular: true\n                },\n                pointLabels: {\n                    display: false\n                },\n                startAngle: 0\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const arcs = this._cachedMeta.data;\n        this._updateRadius();\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n getMinMax() {\n        const meta = this._cachedMeta;\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        meta.data.forEach((element, index)=>{\n            const parsed = this.getParsed(index).r;\n            if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n                if (parsed < range.min) {\n                    range.min = parsed;\n                }\n                if (parsed > range.max) {\n                    range.max = parsed;\n                }\n            }\n        });\n        return range;\n    }\n _updateRadius() {\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n        const outerRadius = Math.max(minSize / 2, 0);\n        const innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n        const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n        this.outerRadius = outerRadius - radiusLength * this.index;\n        this.innerRadius = this.outerRadius - radiusLength;\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const scale = this._cachedMeta.rScale;\n        const centerX = scale.xCenter;\n        const centerY = scale.yCenter;\n        const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n        let angle = datasetStartAngle;\n        let i;\n        const defaultAngle = 360 / this.countVisibleElements();\n        for(i = 0; i < start; ++i){\n            angle += this._computeAngle(i, mode, defaultAngle);\n        }\n        for(i = start; i < start + count; i++){\n            const arc = arcs[i];\n            let startAngle = angle;\n            let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n            let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n            angle = endAngle;\n            if (reset) {\n                if (animationOpts.animateScale) {\n                    outerRadius = 0;\n                }\n                if (animationOpts.animateRotate) {\n                    startAngle = endAngle = datasetStartAngle;\n                }\n            }\n            const properties = {\n                x: centerX,\n                y: centerY,\n                innerRadius: 0,\n                outerRadius,\n                startAngle,\n                endAngle,\n                options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n            };\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    countVisibleElements() {\n        const meta = this._cachedMeta;\n        let count = 0;\n        meta.data.forEach((element, index)=>{\n            if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n                count++;\n            }\n        });\n        return count;\n    }\n _computeAngle(index, mode, defaultAngle) {\n        return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n    }\n}\n\nclass PieController extends DoughnutController {\n    static id = 'pie';\n static defaults = {\n        cutout: 0,\n        rotation: 0,\n        circumference: 360,\n        radius: '100%'\n    };\n}\n\nclass RadarController extends DatasetController {\n    static id = 'radar';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        indexAxis: 'r',\n        showLine: true,\n        elements: {\n            line: {\n                fill: 'start'\n            }\n        }\n    };\n static overrides = {\n        aspectRatio: 1,\n        scales: {\n            r: {\n                type: 'radialLinear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const vScale = this._cachedMeta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: vScale.getLabels()[index],\n            value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const line = meta.dataset;\n        const points = meta.data || [];\n        const labels = meta.iScale.getLabels();\n        line.points = points;\n        if (mode !== 'resize') {\n            const options = this.resolveDatasetElementOptions(mode);\n            if (!this.options.showLine) {\n                options.borderWidth = 0;\n            }\n            const properties = {\n                _loop: true,\n                _fullLoop: labels.length === points.length,\n                options\n            };\n            this.updateElement(line, undefined, properties, mode);\n        }\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const scale = this._cachedMeta.rScale;\n        const reset = mode === 'reset';\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n            const x = reset ? scale.xCenter : pointPosition.x;\n            const y = reset ? scale.yCenter : pointPosition.y;\n            const properties = {\n                x,\n                y,\n                angle: pointPosition.angle,\n                skip: isNaN(x) || isNaN(y),\n                options\n            };\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n}\n\nclass ScatterController extends DatasetController {\n    static id = 'scatter';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        showLine: false,\n        fill: false\n    };\n static overrides = {\n        interaction: {\n            mode: 'point'\n        },\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + ')'\n        };\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { data: points = []  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        if (this.options.showLine) {\n            if (!this.datasetElementType) {\n                this.addElements();\n            }\n            const { dataset: line , _dataset  } = meta;\n            line._chart = this.chart;\n            line._datasetIndex = this.index;\n            line._decimated = !!_dataset._decimated;\n            line.points = points;\n            const options = this.resolveDatasetElementOptions(mode);\n            options.segment = this.options.segment;\n            this.updateElement(line, undefined, {\n                animated: !animationsDisabled,\n                options\n            }, mode);\n        } else if (this.datasetElementType) {\n            delete meta.dataset;\n            this.datasetElementType = false;\n        }\n        this.updateElements(points, start, count, mode);\n    }\n    addElements() {\n        const { showLine  } = this.options;\n        if (!this.datasetElementType && showLine) {\n            this.datasetElementType = this.chart.registry.getElement('line');\n        }\n        super.addElements();\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = start; i < start + count; ++i){\n            const point = points[i];\n            const parsed = this.getParsed(i);\n            const properties = directUpdate ? point : {};\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const data = meta.data || [];\n        if (!this.options.showLine) {\n            let max = 0;\n            for(let i = data.length - 1; i >= 0; --i){\n                max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n            }\n            return max > 0 && max;\n        }\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n}\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPieController: PieController,\nPolarAreaController: PolarAreaController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\n/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */ function abstract() {\n    throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */ class DateAdapterBase {\n    /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */ static override(members) {\n        Object.assign(DateAdapterBase.prototype, members);\n    }\n    options;\n    constructor(options){\n        this.options = options || {};\n    }\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    init() {}\n    formats() {\n        return abstract();\n    }\n    parse() {\n        return abstract();\n    }\n    format() {\n        return abstract();\n    }\n    add() {\n        return abstract();\n    }\n    diff() {\n        return abstract();\n    }\n    startOf() {\n        return abstract();\n    }\n    endOf() {\n        return abstract();\n    }\n}\nvar adapters = {\n    _date: DateAdapterBase\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n    const { controller , data , _sorted  } = metaset;\n    const iScale = controller._cachedMeta.iScale;\n    if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n        const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n        if (!intersect) {\n            return lookupMethod(data, axis, value);\n        } else if (controller._sharedOptions) {\n            const el = data[0];\n            const range = typeof el.getRange === 'function' && el.getRange(axis);\n            if (range) {\n                const start = lookupMethod(data, axis, value - range);\n                const end = lookupMethod(data, axis, value + range);\n                return {\n                    lo: start.lo,\n                    hi: end.hi\n                };\n            }\n        }\n    }\n    return {\n        lo: 0,\n        hi: data.length - 1\n    };\n}\n function evaluateInteractionItems(chart, axis, position, handler, intersect) {\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const value = position[axis];\n    for(let i = 0, ilen = metasets.length; i < ilen; ++i){\n        const { index , data  } = metasets[i];\n        const { lo , hi  } = binarySearch(metasets[i], axis, value, intersect);\n        for(let j = lo; j <= hi; ++j){\n            const element = data[j];\n            if (!element.skip) {\n                handler(element, index, j);\n            }\n        }\n    }\n}\n function getDistanceMetricForAxis(axis) {\n    const useX = axis.indexOf('x') !== -1;\n    const useY = axis.indexOf('y') !== -1;\n    return function(pt1, pt2) {\n        const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n        const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n        return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n}\n function getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n    const items = [];\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return items;\n    }\n    const evaluationFunc = function(element, datasetIndex, index) {\n        if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n            return;\n        }\n        if (element.inRange(position.x, position.y, useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    };\n    evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n    return items;\n}\n function getNearestRadialItems(chart, position, axis, useFinalPosition) {\n    let items = [];\n    function evaluationFunc(element, datasetIndex, index) {\n        const { startAngle , endAngle  } = element.getProps([\n            'startAngle',\n            'endAngle'\n        ], useFinalPosition);\n        const { angle  } = getAngleFromPoint(element, {\n            x: position.x,\n            y: position.y\n        });\n        if (_angleBetween(angle, startAngle, endAngle)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    let items = [];\n    const distanceMetric = getDistanceMetricForAxis(axis);\n    let minDistance = Number.POSITIVE_INFINITY;\n    function evaluationFunc(element, datasetIndex, index) {\n        const inRange = element.inRange(position.x, position.y, useFinalPosition);\n        if (intersect && !inRange) {\n            return;\n        }\n        const center = element.getCenterPoint(useFinalPosition);\n        const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n        if (!pointInArea && !inRange) {\n            return;\n        }\n        const distance = distanceMetric(position, center);\n        if (distance < minDistance) {\n            items = [\n                {\n                    element,\n                    datasetIndex,\n                    index\n                }\n            ];\n            minDistance = distance;\n        } else if (distance === minDistance) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return [];\n    }\n    return axis === 'r' && !intersect ? getNearestRadialItems(chart, position, axis, useFinalPosition) : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n function getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n    const items = [];\n    const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n    let intersectsItem = false;\n    evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index)=>{\n        if (element[rangeMethod] && element[rangeMethod](position[axis], useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n            intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n        }\n    });\n    if (intersect && !intersectsItem) {\n        return [];\n    }\n    return items;\n}\n var Interaction = {\n    evaluateInteractionItems,\n    modes: {\n index (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'x';\n            const includeInvisible = options.includeInvisible || false;\n            const items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            const elements = [];\n            if (!items.length) {\n                return [];\n            }\n            chart.getSortedVisibleDatasetMetas().forEach((meta)=>{\n                const index = items[0].index;\n                const element = meta.data[index];\n                if (element && !element.skip) {\n                    elements.push({\n                        element,\n                        datasetIndex: meta.index,\n                        index\n                    });\n                }\n            });\n            return elements;\n        },\n dataset (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            let items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            if (items.length > 0) {\n                const datasetIndex = items[0].datasetIndex;\n                const data = chart.getDatasetMeta(datasetIndex).data;\n                items = [];\n                for(let i = 0; i < data.length; ++i){\n                    items.push({\n                        element: data[i],\n                        datasetIndex,\n                        index: i\n                    });\n                }\n            }\n            return items;\n        },\n point (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n        },\n nearest (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n        },\n x (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n        },\n y (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n        }\n    }\n};\n\nconst STATIC_POSITIONS = [\n    'left',\n    'top',\n    'right',\n    'bottom'\n];\nfunction filterByPosition(array, position) {\n    return array.filter((v)=>v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n    return array.filter((v)=>STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n    return array.sort((a, b)=>{\n        const v0 = reverse ? b : a;\n        const v1 = reverse ? a : b;\n        return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n    });\n}\nfunction wrapBoxes(boxes) {\n    const layoutBoxes = [];\n    let i, ilen, box, pos, stack, stackWeight;\n    for(i = 0, ilen = (boxes || []).length; i < ilen; ++i){\n        box = boxes[i];\n        ({ position: pos , options: { stack , stackWeight =1  }  } = box);\n        layoutBoxes.push({\n            index: i,\n            box,\n            pos,\n            horizontal: box.isHorizontal(),\n            weight: box.weight,\n            stack: stack && pos + stack,\n            stackWeight\n        });\n    }\n    return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n    const stacks = {};\n    for (const wrap of layouts){\n        const { stack , pos , stackWeight  } = wrap;\n        if (!stack || !STATIC_POSITIONS.includes(pos)) {\n            continue;\n        }\n        const _stack = stacks[stack] || (stacks[stack] = {\n            count: 0,\n            placed: 0,\n            weight: 0,\n            size: 0\n        });\n        _stack.count++;\n        _stack.weight += stackWeight;\n    }\n    return stacks;\n}\n function setLayoutDims(layouts, params) {\n    const stacks = buildStacks(layouts);\n    const { vBoxMaxWidth , hBoxMaxHeight  } = params;\n    let i, ilen, layout;\n    for(i = 0, ilen = layouts.length; i < ilen; ++i){\n        layout = layouts[i];\n        const { fullSize  } = layout.box;\n        const stack = stacks[layout.stack];\n        const factor = stack && layout.stackWeight / stack.weight;\n        if (layout.horizontal) {\n            layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n            layout.height = hBoxMaxHeight;\n        } else {\n            layout.width = vBoxMaxWidth;\n            layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n        }\n    }\n    return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n    const layoutBoxes = wrapBoxes(boxes);\n    const fullSize = sortByWeight(layoutBoxes.filter((wrap)=>wrap.box.fullSize), true);\n    const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n    const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n    const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n    const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n    const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n    const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n    return {\n        fullSize,\n        leftAndTop: left.concat(top),\n        rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n        chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n        vertical: left.concat(right).concat(centerVertical),\n        horizontal: top.concat(bottom).concat(centerHorizontal)\n    };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n    return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n    maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n    maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n    maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n    maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n    const { pos , box  } = layout;\n    const maxPadding = chartArea.maxPadding;\n    if (!isObject(pos)) {\n        if (layout.size) {\n            chartArea[pos] -= layout.size;\n        }\n        const stack = stacks[layout.stack] || {\n            size: 0,\n            count: 1\n        };\n        stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n        layout.size = stack.size / stack.count;\n        chartArea[pos] += layout.size;\n    }\n    if (box.getPadding) {\n        updateMaxPadding(maxPadding, box.getPadding());\n    }\n    const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n    const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n    const widthChanged = newWidth !== chartArea.w;\n    const heightChanged = newHeight !== chartArea.h;\n    chartArea.w = newWidth;\n    chartArea.h = newHeight;\n    return layout.horizontal ? {\n        same: widthChanged,\n        other: heightChanged\n    } : {\n        same: heightChanged,\n        other: widthChanged\n    };\n}\nfunction handleMaxPadding(chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function updatePos(pos) {\n        const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n        chartArea[pos] += change;\n        return change;\n    }\n    chartArea.y += updatePos('top');\n    chartArea.x += updatePos('left');\n    updatePos('right');\n    updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function marginForPositions(positions) {\n        const margin = {\n            left: 0,\n            top: 0,\n            right: 0,\n            bottom: 0\n        };\n        positions.forEach((pos)=>{\n            margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n        });\n        return margin;\n    }\n    return horizontal ? marginForPositions([\n        'left',\n        'right'\n    ]) : marginForPositions([\n        'top',\n        'bottom'\n    ]);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n    const refitBoxes = [];\n    let i, ilen, layout, box, refit, changed;\n    for(i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i){\n        layout = boxes[i];\n        box = layout.box;\n        box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n        const { same , other  } = updateDims(chartArea, params, layout, stacks);\n        refit |= same && refitBoxes.length;\n        changed = changed || other;\n        if (!box.fullSize) {\n            refitBoxes.push(layout);\n        }\n    }\n    return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n    box.top = top;\n    box.left = left;\n    box.right = left + width;\n    box.bottom = top + height;\n    box.width = width;\n    box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n    const userPadding = params.padding;\n    let { x , y  } = chartArea;\n    for (const layout of boxes){\n        const box = layout.box;\n        const stack = stacks[layout.stack] || {\n            count: 1,\n            placed: 0,\n            weight: 1\n        };\n        const weight = layout.stackWeight / stack.weight || 1;\n        if (layout.horizontal) {\n            const width = chartArea.w * weight;\n            const height = stack.size || box.height;\n            if (defined(stack.start)) {\n                y = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n            } else {\n                setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n            }\n            stack.start = y;\n            stack.placed += width;\n            y = box.bottom;\n        } else {\n            const height = chartArea.h * weight;\n            const width = stack.size || box.width;\n            if (defined(stack.start)) {\n                x = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n            } else {\n                setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n            }\n            stack.start = x;\n            stack.placed += height;\n            x = box.right;\n        }\n    }\n    chartArea.x = x;\n    chartArea.y = y;\n}\nvar layouts = {\n addBox (chart, item) {\n        if (!chart.boxes) {\n            chart.boxes = [];\n        }\n        item.fullSize = item.fullSize || false;\n        item.position = item.position || 'top';\n        item.weight = item.weight || 0;\n        item._layers = item._layers || function() {\n            return [\n                {\n                    z: 0,\n                    draw (chartArea) {\n                        item.draw(chartArea);\n                    }\n                }\n            ];\n        };\n        chart.boxes.push(item);\n    },\n removeBox (chart, layoutItem) {\n        const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n        if (index !== -1) {\n            chart.boxes.splice(index, 1);\n        }\n    },\n configure (chart, item, options) {\n        item.fullSize = options.fullSize;\n        item.position = options.position;\n        item.weight = options.weight;\n    },\n update (chart, width, height, minPadding) {\n        if (!chart) {\n            return;\n        }\n        const padding = toPadding(chart.options.layout.padding);\n        const availableWidth = Math.max(width - padding.width, 0);\n        const availableHeight = Math.max(height - padding.height, 0);\n        const boxes = buildLayoutBoxes(chart.boxes);\n        const verticalBoxes = boxes.vertical;\n        const horizontalBoxes = boxes.horizontal;\n        each(chart.boxes, (box)=>{\n            if (typeof box.beforeLayout === 'function') {\n                box.beforeLayout();\n            }\n        });\n        const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap)=>wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n        const params = Object.freeze({\n            outerWidth: width,\n            outerHeight: height,\n            padding,\n            availableWidth,\n            availableHeight,\n            vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n            hBoxMaxHeight: availableHeight / 2\n        });\n        const maxPadding = Object.assign({}, padding);\n        updateMaxPadding(maxPadding, toPadding(minPadding));\n        const chartArea = Object.assign({\n            maxPadding,\n            w: availableWidth,\n            h: availableHeight,\n            x: padding.left,\n            y: padding.top\n        }, padding);\n        const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n        fitBoxes(boxes.fullSize, chartArea, params, stacks);\n        fitBoxes(verticalBoxes, chartArea, params, stacks);\n        if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n            fitBoxes(verticalBoxes, chartArea, params, stacks);\n        }\n        handleMaxPadding(chartArea);\n        placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n        chartArea.x += chartArea.w;\n        chartArea.y += chartArea.h;\n        placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n        chart.chartArea = {\n            left: chartArea.left,\n            top: chartArea.top,\n            right: chartArea.left + chartArea.w,\n            bottom: chartArea.top + chartArea.h,\n            height: chartArea.h,\n            width: chartArea.w\n        };\n        each(boxes.chartArea, (layout)=>{\n            const box = layout.box;\n            Object.assign(box, chart.chartArea);\n            box.update(chartArea.w, chartArea.h, {\n                left: 0,\n                top: 0,\n                right: 0,\n                bottom: 0\n            });\n        });\n    }\n};\n\nclass BasePlatform {\n acquireContext(canvas, aspectRatio) {}\n releaseContext(context) {\n        return false;\n    }\n addEventListener(chart, type, listener) {}\n removeEventListener(chart, type, listener) {}\n getDevicePixelRatio() {\n        return 1;\n    }\n getMaximumSize(element, width, height, aspectRatio) {\n        width = Math.max(0, width || element.width);\n        height = height || element.height;\n        return {\n            width,\n            height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n        };\n    }\n isAttached(canvas) {\n        return true;\n    }\n updateConfig(config) {\n    }\n}\n\nclass BasicPlatform extends BasePlatform {\n    acquireContext(item) {\n        return item && item.getContext && item.getContext('2d') || null;\n    }\n    updateConfig(config) {\n        config.options.animation = false;\n    }\n}\n\nconst EXPANDO_KEY = '$chartjs';\n const EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n};\nconst isNullOrEmpty = (value)=>value === null || value === '';\n function initCanvas(canvas, aspectRatio) {\n    const style = canvas.style;\n    const renderHeight = canvas.getAttribute('height');\n    const renderWidth = canvas.getAttribute('width');\n    canvas[EXPANDO_KEY] = {\n        initial: {\n            height: renderHeight,\n            width: renderWidth,\n            style: {\n                display: style.display,\n                height: style.height,\n                width: style.width\n            }\n        }\n    };\n    style.display = style.display || 'block';\n    style.boxSizing = style.boxSizing || 'border-box';\n    if (isNullOrEmpty(renderWidth)) {\n        const displayWidth = readUsedSize(canvas, 'width');\n        if (displayWidth !== undefined) {\n            canvas.width = displayWidth;\n        }\n    }\n    if (isNullOrEmpty(renderHeight)) {\n        if (canvas.style.height === '') {\n            canvas.height = canvas.width / (aspectRatio || 2);\n        } else {\n            const displayHeight = readUsedSize(canvas, 'height');\n            if (displayHeight !== undefined) {\n                canvas.height = displayHeight;\n            }\n        }\n    }\n    return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n} : false;\nfunction addListener(node, type, listener) {\n    if (node) {\n        node.addEventListener(type, listener, eventListenerOptions);\n    }\n}\nfunction removeListener(chart, type, listener) {\n    if (chart && chart.canvas) {\n        chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n    }\n}\nfunction fromNativeEvent(event, chart) {\n    const type = EVENT_TYPES[event.type] || event.type;\n    const { x , y  } = getRelativePosition(event, chart);\n    return {\n        type,\n        chart,\n        native: event,\n        x: x !== undefined ? x : null,\n        y: y !== undefined ? y : null\n    };\n}\nfunction nodeListContains(nodeList, canvas) {\n    for (const node of nodeList){\n        if (node === canvas || node.contains(canvas)) {\n            return true;\n        }\n    }\n}\nfunction createAttachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n    const dpr = window.devicePixelRatio;\n    if (dpr === oldDevicePixelRatio) {\n        return;\n    }\n    oldDevicePixelRatio = dpr;\n    drpListeningCharts.forEach((resize, chart)=>{\n        if (chart.currentDevicePixelRatio !== dpr) {\n            resize();\n        }\n    });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n    if (!drpListeningCharts.size) {\n        window.addEventListener('resize', onWindowResize);\n    }\n    drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n    drpListeningCharts.delete(chart);\n    if (!drpListeningCharts.size) {\n        window.removeEventListener('resize', onWindowResize);\n    }\n}\nfunction createResizeObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const container = canvas && _getParentNode(canvas);\n    if (!container) {\n        return;\n    }\n    const resize = throttled((width, height)=>{\n        const w = container.clientWidth;\n        listener(width, height);\n        if (w < container.clientWidth) {\n            listener();\n        }\n    }, window);\n    const observer = new ResizeObserver((entries)=>{\n        const entry = entries[0];\n        const width = entry.contentRect.width;\n        const height = entry.contentRect.height;\n        if (width === 0 && height === 0) {\n            return;\n        }\n        resize(width, height);\n    });\n    observer.observe(container);\n    listenDevicePixelRatioChanges(chart, resize);\n    return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n    if (observer) {\n        observer.disconnect();\n    }\n    if (type === 'resize') {\n        unlistenDevicePixelRatioChanges(chart);\n    }\n}\nfunction createProxyAndListen(chart, type, listener) {\n    const canvas = chart.canvas;\n    const proxy = throttled((event)=>{\n        if (chart.ctx !== null) {\n            listener(fromNativeEvent(event, chart));\n        }\n    }, chart);\n    addListener(canvas, type, proxy);\n    return proxy;\n}\n class DomPlatform extends BasePlatform {\n acquireContext(canvas, aspectRatio) {\n        const context = canvas && canvas.getContext && canvas.getContext('2d');\n        if (context && context.canvas === canvas) {\n            initCanvas(canvas, aspectRatio);\n            return context;\n        }\n        return null;\n    }\n releaseContext(context) {\n        const canvas = context.canvas;\n        if (!canvas[EXPANDO_KEY]) {\n            return false;\n        }\n        const initial = canvas[EXPANDO_KEY].initial;\n        [\n            'height',\n            'width'\n        ].forEach((prop)=>{\n            const value = initial[prop];\n            if (isNullOrUndef(value)) {\n                canvas.removeAttribute(prop);\n            } else {\n                canvas.setAttribute(prop, value);\n            }\n        });\n        const style = initial.style || {};\n        Object.keys(style).forEach((key)=>{\n            canvas.style[key] = style[key];\n        });\n        canvas.width = canvas.width;\n        delete canvas[EXPANDO_KEY];\n        return true;\n    }\n addEventListener(chart, type, listener) {\n        this.removeEventListener(chart, type);\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const handlers = {\n            attach: createAttachObserver,\n            detach: createDetachObserver,\n            resize: createResizeObserver\n        };\n        const handler = handlers[type] || createProxyAndListen;\n        proxies[type] = handler(chart, type, listener);\n    }\n removeEventListener(chart, type) {\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const proxy = proxies[type];\n        if (!proxy) {\n            return;\n        }\n        const handlers = {\n            attach: releaseObserver,\n            detach: releaseObserver,\n            resize: releaseObserver\n        };\n        const handler = handlers[type] || removeListener;\n        handler(chart, type, proxy);\n        proxies[type] = undefined;\n    }\n    getDevicePixelRatio() {\n        return window.devicePixelRatio;\n    }\n getMaximumSize(canvas, width, height, aspectRatio) {\n        return getMaximumSize(canvas, width, height, aspectRatio);\n    }\n isAttached(canvas) {\n        const container = canvas && _getParentNode(canvas);\n        return !!(container && container.isConnected);\n    }\n}\n\nfunction _detectPlatform(canvas) {\n    if (!_isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n        return BasicPlatform;\n    }\n    return DomPlatform;\n}\n\nclass Element {\n    static defaults = {};\n    static defaultRoutes = undefined;\n    x;\n    y;\n    active = false;\n    options;\n    $animations;\n    tooltipPosition(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    hasValue() {\n        return isNumber(this.x) && isNumber(this.y);\n    }\n    getProps(props, final) {\n        const anims = this.$animations;\n        if (!final || !anims) {\n            // let's not create an object, if not needed\n            return this;\n        }\n        const ret = {};\n        props.forEach((prop)=>{\n            ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n        });\n        return ret;\n    }\n}\n\nfunction autoSkip(scale, ticks) {\n    const tickOpts = scale.options.ticks;\n    const determinedMaxTicks = determineMaxTicks(scale);\n    const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n    const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n    const numMajorIndices = majorIndices.length;\n    const first = majorIndices[0];\n    const last = majorIndices[numMajorIndices - 1];\n    const newTicks = [];\n    if (numMajorIndices > ticksLimit) {\n        skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n        return newTicks;\n    }\n    const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n    if (numMajorIndices > 0) {\n        let i, ilen;\n        const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n        skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n        for(i = 0, ilen = numMajorIndices - 1; i < ilen; i++){\n            skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n        }\n        skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n        return newTicks;\n    }\n    skip(ticks, newTicks, spacing);\n    return newTicks;\n}\nfunction determineMaxTicks(scale) {\n    const offset = scale.options.offset;\n    const tickLength = scale._tickSize();\n    const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n    const maxChart = scale._maxLength / tickLength;\n    return Math.floor(Math.min(maxScale, maxChart));\n}\n function calculateSpacing(majorIndices, ticks, ticksLimit) {\n    const evenMajorSpacing = getEvenSpacing(majorIndices);\n    const spacing = ticks.length / ticksLimit;\n    if (!evenMajorSpacing) {\n        return Math.max(spacing, 1);\n    }\n    const factors = _factorize(evenMajorSpacing);\n    for(let i = 0, ilen = factors.length - 1; i < ilen; i++){\n        const factor = factors[i];\n        if (factor > spacing) {\n            return factor;\n        }\n    }\n    return Math.max(spacing, 1);\n}\n function getMajorIndices(ticks) {\n    const result = [];\n    let i, ilen;\n    for(i = 0, ilen = ticks.length; i < ilen; i++){\n        if (ticks[i].major) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n function skipMajors(ticks, newTicks, majorIndices, spacing) {\n    let count = 0;\n    let next = majorIndices[0];\n    let i;\n    spacing = Math.ceil(spacing);\n    for(i = 0; i < ticks.length; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = majorIndices[count * spacing];\n        }\n    }\n}\n function skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n    const start = valueOrDefault(majorStart, 0);\n    const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n    let count = 0;\n    let length, i, next;\n    spacing = Math.ceil(spacing);\n    if (majorEnd) {\n        length = majorEnd - majorStart;\n        spacing = length / Math.floor(length / spacing);\n    }\n    next = start;\n    while(next < 0){\n        count++;\n        next = Math.round(start + count * spacing);\n    }\n    for(i = Math.max(start, 0); i < end; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = Math.round(start + count * spacing);\n        }\n    }\n}\n function getEvenSpacing(arr) {\n    const len = arr.length;\n    let i, diff;\n    if (len < 2) {\n        return false;\n    }\n    for(diff = arr[0], i = 1; i < len; ++i){\n        if (arr[i] - arr[i - 1] !== diff) {\n            return false;\n        }\n    }\n    return diff;\n}\n\nconst reverseAlign = (align)=>align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset)=>edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit)=>Math.min(maxTicksLimit || ticksLength, ticksLength);\n function sample(arr, numItems) {\n    const result = [];\n    const increment = arr.length / numItems;\n    const len = arr.length;\n    let i = 0;\n    for(; i < len; i += increment){\n        result.push(arr[Math.floor(i)]);\n    }\n    return result;\n}\n function getPixelForGridLine(scale, index, offsetGridLines) {\n    const length = scale.ticks.length;\n    const validIndex = Math.min(index, length - 1);\n    const start = scale._startPixel;\n    const end = scale._endPixel;\n    const epsilon = 1e-6;\n    let lineValue = scale.getPixelForTick(validIndex);\n    let offset;\n    if (offsetGridLines) {\n        if (length === 1) {\n            offset = Math.max(lineValue - start, end - lineValue);\n        } else if (index === 0) {\n            offset = (scale.getPixelForTick(1) - lineValue) / 2;\n        } else {\n            offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n        }\n        lineValue += validIndex < index ? offset : -offset;\n        if (lineValue < start - epsilon || lineValue > end + epsilon) {\n            return;\n        }\n    }\n    return lineValue;\n}\n function garbageCollect(caches, length) {\n    each(caches, (cache)=>{\n        const gc = cache.gc;\n        const gcLen = gc.length / 2;\n        let i;\n        if (gcLen > length) {\n            for(i = 0; i < gcLen; ++i){\n                delete cache.data[gc[i]];\n            }\n            gc.splice(0, gcLen);\n        }\n    });\n}\n function getTickMarkLength(options) {\n    return options.drawTicks ? options.tickLength : 0;\n}\n function getTitleHeight(options, fallback) {\n    if (!options.display) {\n        return 0;\n    }\n    const font = toFont(options.font, fallback);\n    const padding = toPadding(options.padding);\n    const lines = isArray(options.text) ? options.text.length : 1;\n    return lines * font.lineHeight + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n    return createContext(parent, {\n        scale,\n        type: 'scale'\n    });\n}\nfunction createTickContext(parent, index, tick) {\n    return createContext(parent, {\n        tick,\n        index,\n        type: 'tick'\n    });\n}\nfunction titleAlign(align, position, reverse) {\n     let ret = _toLeftRightCenter(align);\n    if (reverse && position !== 'right' || !reverse && position === 'right') {\n        ret = reverseAlign(ret);\n    }\n    return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n    const { top , left , bottom , right , chart  } = scale;\n    const { chartArea , scales  } = chart;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    const height = bottom - top;\n    const width = right - left;\n    if (scale.isHorizontal()) {\n        titleX = _alignStartEnd(align, left, right);\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n        } else if (position === 'center') {\n            titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n        } else {\n            titleY = offsetFromEdge(scale, position, offset);\n        }\n        maxWidth = right - left;\n    } else {\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n        } else if (position === 'center') {\n            titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n        } else {\n            titleX = offsetFromEdge(scale, position, offset);\n        }\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = position === 'left' ? -HALF_PI : HALF_PI;\n    }\n    return {\n        titleX,\n        titleY,\n        maxWidth,\n        rotation\n    };\n}\nclass Scale extends Element {\n    constructor(cfg){\n        super();\n         this.id = cfg.id;\n         this.type = cfg.type;\n         this.options = undefined;\n         this.ctx = cfg.ctx;\n         this.chart = cfg.chart;\n         this.top = undefined;\n         this.bottom = undefined;\n         this.left = undefined;\n         this.right = undefined;\n         this.width = undefined;\n         this.height = undefined;\n        this._margins = {\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        };\n         this.maxWidth = undefined;\n         this.maxHeight = undefined;\n         this.paddingTop = undefined;\n         this.paddingBottom = undefined;\n         this.paddingLeft = undefined;\n         this.paddingRight = undefined;\n         this.axis = undefined;\n         this.labelRotation = undefined;\n        this.min = undefined;\n        this.max = undefined;\n        this._range = undefined;\n         this.ticks = [];\n         this._gridLineItems = null;\n         this._labelItems = null;\n         this._labelSizes = null;\n        this._length = 0;\n        this._maxLength = 0;\n        this._longestTextCache = {};\n         this._startPixel = undefined;\n         this._endPixel = undefined;\n        this._reversePixels = false;\n        this._userMax = undefined;\n        this._userMin = undefined;\n        this._suggestedMax = undefined;\n        this._suggestedMin = undefined;\n        this._ticksLength = 0;\n        this._borderValue = 0;\n        this._cache = {};\n        this._dataLimitsCached = false;\n        this.$context = undefined;\n    }\n init(options) {\n        this.options = options.setContext(this.getContext());\n        this.axis = options.axis;\n        this._userMin = this.parse(options.min);\n        this._userMax = this.parse(options.max);\n        this._suggestedMin = this.parse(options.suggestedMin);\n        this._suggestedMax = this.parse(options.suggestedMax);\n    }\n parse(raw, index) {\n        return raw;\n    }\n getUserBounds() {\n        let { _userMin , _userMax , _suggestedMin , _suggestedMax  } = this;\n        _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n        _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n        _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n        _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n        return {\n            min: finiteOrDefault(_userMin, _suggestedMin),\n            max: finiteOrDefault(_userMax, _suggestedMax),\n            minDefined: isNumberFinite(_userMin),\n            maxDefined: isNumberFinite(_userMax)\n        };\n    }\n getMinMax(canStack) {\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n        let range;\n        if (minDefined && maxDefined) {\n            return {\n                min,\n                max\n            };\n        }\n        const metas = this.getMatchingVisibleMetas();\n        for(let i = 0, ilen = metas.length; i < ilen; ++i){\n            range = metas[i].controller.getMinMax(this, canStack);\n            if (!minDefined) {\n                min = Math.min(min, range.min);\n            }\n            if (!maxDefined) {\n                max = Math.max(max, range.max);\n            }\n        }\n        min = maxDefined && min > max ? max : min;\n        max = minDefined && min > max ? min : max;\n        return {\n            min: finiteOrDefault(min, finiteOrDefault(max, min)),\n            max: finiteOrDefault(max, finiteOrDefault(min, max))\n        };\n    }\n getPadding() {\n        return {\n            left: this.paddingLeft || 0,\n            top: this.paddingTop || 0,\n            right: this.paddingRight || 0,\n            bottom: this.paddingBottom || 0\n        };\n    }\n getTicks() {\n        return this.ticks;\n    }\n getLabels() {\n        const data = this.chart.data;\n        return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n    }\n getLabelItems(chartArea = this.chart.chartArea) {\n        const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n        return items;\n    }\n    beforeLayout() {\n        this._cache = {};\n        this._dataLimitsCached = false;\n    }\n    beforeUpdate() {\n        callback(this.options.beforeUpdate, [\n            this\n        ]);\n    }\n update(maxWidth, maxHeight, margins) {\n        const { beginAtZero , grace , ticks: tickOpts  } = this.options;\n        const sampleSize = tickOpts.sampleSize;\n        this.beforeUpdate();\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins = Object.assign({\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        }, margins);\n        this.ticks = null;\n        this._labelSizes = null;\n        this._gridLineItems = null;\n        this._labelItems = null;\n        this.beforeSetDimensions();\n        this.setDimensions();\n        this.afterSetDimensions();\n        this._maxLength = this.isHorizontal() ? this.width + margins.left + margins.right : this.height + margins.top + margins.bottom;\n        if (!this._dataLimitsCached) {\n            this.beforeDataLimits();\n            this.determineDataLimits();\n            this.afterDataLimits();\n            this._range = _addGrace(this, grace, beginAtZero);\n            this._dataLimitsCached = true;\n        }\n        this.beforeBuildTicks();\n        this.ticks = this.buildTicks() || [];\n        this.afterBuildTicks();\n        const samplingEnabled = sampleSize < this.ticks.length;\n        this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n        this.configure();\n        this.beforeCalculateLabelRotation();\n        this.calculateLabelRotation();\n        this.afterCalculateLabelRotation();\n        if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n            this.ticks = autoSkip(this, this.ticks);\n            this._labelSizes = null;\n            this.afterAutoSkip();\n        }\n        if (samplingEnabled) {\n            this._convertTicksToLabels(this.ticks);\n        }\n        this.beforeFit();\n        this.fit();\n        this.afterFit();\n        this.afterUpdate();\n    }\n configure() {\n        let reversePixels = this.options.reverse;\n        let startPixel, endPixel;\n        if (this.isHorizontal()) {\n            startPixel = this.left;\n            endPixel = this.right;\n        } else {\n            startPixel = this.top;\n            endPixel = this.bottom;\n            reversePixels = !reversePixels;\n        }\n        this._startPixel = startPixel;\n        this._endPixel = endPixel;\n        this._reversePixels = reversePixels;\n        this._length = endPixel - startPixel;\n        this._alignToPixels = this.options.alignToPixels;\n    }\n    afterUpdate() {\n        callback(this.options.afterUpdate, [\n            this\n        ]);\n    }\n    beforeSetDimensions() {\n        callback(this.options.beforeSetDimensions, [\n            this\n        ]);\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = 0;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = 0;\n            this.bottom = this.height;\n        }\n        this.paddingLeft = 0;\n        this.paddingTop = 0;\n        this.paddingRight = 0;\n        this.paddingBottom = 0;\n    }\n    afterSetDimensions() {\n        callback(this.options.afterSetDimensions, [\n            this\n        ]);\n    }\n    _callHooks(name) {\n        this.chart.notifyPlugins(name, this.getContext());\n        callback(this.options[name], [\n            this\n        ]);\n    }\n    beforeDataLimits() {\n        this._callHooks('beforeDataLimits');\n    }\n    determineDataLimits() {}\n    afterDataLimits() {\n        this._callHooks('afterDataLimits');\n    }\n    beforeBuildTicks() {\n        this._callHooks('beforeBuildTicks');\n    }\n buildTicks() {\n        return [];\n    }\n    afterBuildTicks() {\n        this._callHooks('afterBuildTicks');\n    }\n    beforeTickToLabelConversion() {\n        callback(this.options.beforeTickToLabelConversion, [\n            this\n        ]);\n    }\n generateTickLabels(ticks) {\n        const tickOpts = this.options.ticks;\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            tick = ticks[i];\n            tick.label = callback(tickOpts.callback, [\n                tick.value,\n                i,\n                ticks\n            ], this);\n        }\n    }\n    afterTickToLabelConversion() {\n        callback(this.options.afterTickToLabelConversion, [\n            this\n        ]);\n    }\n    beforeCalculateLabelRotation() {\n        callback(this.options.beforeCalculateLabelRotation, [\n            this\n        ]);\n    }\n    calculateLabelRotation() {\n        const options = this.options;\n        const tickOpts = options.ticks;\n        const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n        const minRotation = tickOpts.minRotation || 0;\n        const maxRotation = tickOpts.maxRotation;\n        let labelRotation = minRotation;\n        let tickWidth, maxHeight, maxLabelDiagonal;\n        if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n            this.labelRotation = minRotation;\n            return;\n        }\n        const labelSizes = this._getLabelSizes();\n        const maxLabelWidth = labelSizes.widest.width;\n        const maxLabelHeight = labelSizes.highest.height;\n        const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n        tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n        if (maxLabelWidth + 6 > tickWidth) {\n            tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n            maxHeight = this.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n            maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n            labelRotation = toDegrees(Math.min(Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n            labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n        }\n        this.labelRotation = labelRotation;\n    }\n    afterCalculateLabelRotation() {\n        callback(this.options.afterCalculateLabelRotation, [\n            this\n        ]);\n    }\n    afterAutoSkip() {}\n    beforeFit() {\n        callback(this.options.beforeFit, [\n            this\n        ]);\n    }\n    fit() {\n        const minSize = {\n            width: 0,\n            height: 0\n        };\n        const { chart , options: { ticks: tickOpts , title: titleOpts , grid: gridOpts  }  } = this;\n        const display = this._isVisible();\n        const isHorizontal = this.isHorizontal();\n        if (display) {\n            const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n            if (isHorizontal) {\n                minSize.width = this.maxWidth;\n                minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n            } else {\n                minSize.height = this.maxHeight;\n                minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n            }\n            if (tickOpts.display && this.ticks.length) {\n                const { first , last , widest , highest  } = this._getLabelSizes();\n                const tickPadding = tickOpts.padding * 2;\n                const angleRadians = toRadians(this.labelRotation);\n                const cos = Math.cos(angleRadians);\n                const sin = Math.sin(angleRadians);\n                if (isHorizontal) {\n                    const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n                    minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n                } else {\n                    const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n                    minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n                }\n                this._calculatePadding(first, last, sin, cos);\n            }\n        }\n        this._handleMargins();\n        if (isHorizontal) {\n            this.width = this._length = chart.width - this._margins.left - this._margins.right;\n            this.height = minSize.height;\n        } else {\n            this.width = minSize.width;\n            this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n        }\n    }\n    _calculatePadding(first, last, sin, cos) {\n        const { ticks: { align , padding  } , position  } = this.options;\n        const isRotated = this.labelRotation !== 0;\n        const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n        if (this.isHorizontal()) {\n            const offsetLeft = this.getPixelForTick(0) - this.left;\n            const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n            let paddingLeft = 0;\n            let paddingRight = 0;\n            if (isRotated) {\n                if (labelsBelowTicks) {\n                    paddingLeft = cos * first.width;\n                    paddingRight = sin * last.height;\n                } else {\n                    paddingLeft = sin * first.height;\n                    paddingRight = cos * last.width;\n                }\n            } else if (align === 'start') {\n                paddingRight = last.width;\n            } else if (align === 'end') {\n                paddingLeft = first.width;\n            } else if (align !== 'inner') {\n                paddingLeft = first.width / 2;\n                paddingRight = last.width / 2;\n            }\n            this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n            this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n        } else {\n            let paddingTop = last.height / 2;\n            let paddingBottom = first.height / 2;\n            if (align === 'start') {\n                paddingTop = 0;\n                paddingBottom = first.height;\n            } else if (align === 'end') {\n                paddingTop = last.height;\n                paddingBottom = 0;\n            }\n            this.paddingTop = paddingTop + padding;\n            this.paddingBottom = paddingBottom + padding;\n        }\n    }\n _handleMargins() {\n        if (this._margins) {\n            this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n            this._margins.top = Math.max(this.paddingTop, this._margins.top);\n            this._margins.right = Math.max(this.paddingRight, this._margins.right);\n            this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n        }\n    }\n    afterFit() {\n        callback(this.options.afterFit, [\n            this\n        ]);\n    }\n isHorizontal() {\n        const { axis , position  } = this.options;\n        return position === 'top' || position === 'bottom' || axis === 'x';\n    }\n isFullSize() {\n        return this.options.fullSize;\n    }\n _convertTicksToLabels(ticks) {\n        this.beforeTickToLabelConversion();\n        this.generateTickLabels(ticks);\n        let i, ilen;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            if (isNullOrUndef(ticks[i].label)) {\n                ticks.splice(i, 1);\n                ilen--;\n                i--;\n            }\n        }\n        this.afterTickToLabelConversion();\n    }\n _getLabelSizes() {\n        let labelSizes = this._labelSizes;\n        if (!labelSizes) {\n            const sampleSize = this.options.ticks.sampleSize;\n            let ticks = this.ticks;\n            if (sampleSize < ticks.length) {\n                ticks = sample(ticks, sampleSize);\n            }\n            this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n        }\n        return labelSizes;\n    }\n _computeLabelSizes(ticks, length, maxTicksLimit) {\n        const { ctx , _longestTextCache: caches  } = this;\n        const widths = [];\n        const heights = [];\n        const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n        let widestLabelSize = 0;\n        let highestLabelSize = 0;\n        let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n        for(i = 0; i < length; i += increment){\n            label = ticks[i].label;\n            tickFont = this._resolveTickFontOptions(i);\n            ctx.font = fontString = tickFont.string;\n            cache = caches[fontString] = caches[fontString] || {\n                data: {},\n                gc: []\n            };\n            lineHeight = tickFont.lineHeight;\n            width = height = 0;\n            if (!isNullOrUndef(label) && !isArray(label)) {\n                width = _measureText(ctx, cache.data, cache.gc, width, label);\n                height = lineHeight;\n            } else if (isArray(label)) {\n                for(j = 0, jlen = label.length; j < jlen; ++j){\n                    nestedLabel =  label[j];\n                    if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n                        width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n                        height += lineHeight;\n                    }\n                }\n            }\n            widths.push(width);\n            heights.push(height);\n            widestLabelSize = Math.max(width, widestLabelSize);\n            highestLabelSize = Math.max(height, highestLabelSize);\n        }\n        garbageCollect(caches, length);\n        const widest = widths.indexOf(widestLabelSize);\n        const highest = heights.indexOf(highestLabelSize);\n        const valueAt = (idx)=>({\n                width: widths[idx] || 0,\n                height: heights[idx] || 0\n            });\n        return {\n            first: valueAt(0),\n            last: valueAt(length - 1),\n            widest: valueAt(widest),\n            highest: valueAt(highest),\n            widths,\n            heights\n        };\n    }\n getLabelForValue(value) {\n        return value;\n    }\n getPixelForValue(value, index) {\n        return NaN;\n    }\n getValueForPixel(pixel) {}\n getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n getPixelForDecimal(decimal) {\n        if (this._reversePixels) {\n            decimal = 1 - decimal;\n        }\n        const pixel = this._startPixel + decimal * this._length;\n        return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n    }\n getDecimalForPixel(pixel) {\n        const decimal = (pixel - this._startPixel) / this._length;\n        return this._reversePixels ? 1 - decimal : decimal;\n    }\n getBasePixel() {\n        return this.getPixelForValue(this.getBaseValue());\n    }\n getBaseValue() {\n        const { min , max  } = this;\n        return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    }\n getContext(index) {\n        const ticks = this.ticks || [];\n        if (index >= 0 && index < ticks.length) {\n            const tick = ticks[index];\n            return tick.$context || (tick.$context = createTickContext(this.getContext(), index, tick));\n        }\n        return this.$context || (this.$context = createScaleContext(this.chart.getContext(), this));\n    }\n _tickSize() {\n        const optionTicks = this.options.ticks;\n        const rot = toRadians(this.labelRotation);\n        const cos = Math.abs(Math.cos(rot));\n        const sin = Math.abs(Math.sin(rot));\n        const labelSizes = this._getLabelSizes();\n        const padding = optionTicks.autoSkipPadding || 0;\n        const w = labelSizes ? labelSizes.widest.width + padding : 0;\n        const h = labelSizes ? labelSizes.highest.height + padding : 0;\n        return this.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    }\n _isVisible() {\n        const display = this.options.display;\n        if (display !== 'auto') {\n            return !!display;\n        }\n        return this.getMatchingVisibleMetas().length > 0;\n    }\n _computeGridLineItems(chartArea) {\n        const axis = this.axis;\n        const chart = this.chart;\n        const options = this.options;\n        const { grid , position , border  } = options;\n        const offset = grid.offset;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const ticksLength = ticks.length + (offset ? 1 : 0);\n        const tl = getTickMarkLength(grid);\n        const items = [];\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = borderOpts.display ? borderOpts.width : 0;\n        const axisHalfWidth = axisWidth / 2;\n        const alignBorderValue = function(pixel) {\n            return _alignPixel(chart, pixel, axisWidth);\n        };\n        let borderValue, i, lineValue, alignedLineValue;\n        let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n        if (position === 'top') {\n            borderValue = alignBorderValue(this.bottom);\n            ty1 = this.bottom - tl;\n            ty2 = borderValue - axisHalfWidth;\n            y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n            y2 = chartArea.bottom;\n        } else if (position === 'bottom') {\n            borderValue = alignBorderValue(this.top);\n            y1 = chartArea.top;\n            y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = this.top + tl;\n        } else if (position === 'left') {\n            borderValue = alignBorderValue(this.right);\n            tx1 = this.right - tl;\n            tx2 = borderValue - axisHalfWidth;\n            x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n            x2 = chartArea.right;\n        } else if (position === 'right') {\n            borderValue = alignBorderValue(this.left);\n            x1 = chartArea.left;\n            x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n            tx1 = borderValue + axisHalfWidth;\n            tx2 = this.left + tl;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            y1 = chartArea.top;\n            y2 = chartArea.bottom;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = ty1 + tl;\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            tx1 = borderValue - axisHalfWidth;\n            tx2 = tx1 - tl;\n            x1 = chartArea.left;\n            x2 = chartArea.right;\n        }\n        const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n        const step = Math.max(1, Math.ceil(ticksLength / limit));\n        for(i = 0; i < ticksLength; i += step){\n            const context = this.getContext(i);\n            const optsAtIndex = grid.setContext(context);\n            const optsAtIndexBorder = border.setContext(context);\n            const lineWidth = optsAtIndex.lineWidth;\n            const lineColor = optsAtIndex.color;\n            const borderDash = optsAtIndexBorder.dash || [];\n            const borderDashOffset = optsAtIndexBorder.dashOffset;\n            const tickWidth = optsAtIndex.tickWidth;\n            const tickColor = optsAtIndex.tickColor;\n            const tickBorderDash = optsAtIndex.tickBorderDash || [];\n            const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n            lineValue = getPixelForGridLine(this, i, offset);\n            if (lineValue === undefined) {\n                continue;\n            }\n            alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n            if (isHorizontal) {\n                tx1 = tx2 = x1 = x2 = alignedLineValue;\n            } else {\n                ty1 = ty2 = y1 = y2 = alignedLineValue;\n            }\n            items.push({\n                tx1,\n                ty1,\n                tx2,\n                ty2,\n                x1,\n                y1,\n                x2,\n                y2,\n                width: lineWidth,\n                color: lineColor,\n                borderDash,\n                borderDashOffset,\n                tickWidth,\n                tickColor,\n                tickBorderDash,\n                tickBorderDashOffset\n            });\n        }\n        this._ticksLength = ticksLength;\n        this._borderValue = borderValue;\n        return items;\n    }\n _computeLabelItems(chartArea) {\n        const axis = this.axis;\n        const options = this.options;\n        const { position , ticks: optionTicks  } = options;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const { align , crossAlign , padding , mirror  } = optionTicks;\n        const tl = getTickMarkLength(options.grid);\n        const tickAndPadding = tl + padding;\n        const hTickAndPadding = mirror ? -padding : tickAndPadding;\n        const rotation = -toRadians(this.labelRotation);\n        const items = [];\n        let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n        let textBaseline = 'middle';\n        if (position === 'top') {\n            y = this.bottom - hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'bottom') {\n            y = this.top + hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'left') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (position === 'right') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n            }\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                x = this.chart.scales[positionAxisID].getPixelForValue(value);\n            }\n            textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n        }\n        if (axis === 'y') {\n            if (align === 'start') {\n                textBaseline = 'top';\n            } else if (align === 'end') {\n                textBaseline = 'bottom';\n            }\n        }\n        const labelSizes = this._getLabelSizes();\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            label = tick.label;\n            const optsAtIndex = optionTicks.setContext(this.getContext(i));\n            pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n            font = this._resolveTickFontOptions(i);\n            lineHeight = font.lineHeight;\n            lineCount = isArray(label) ? label.length : 1;\n            const halfCount = lineCount / 2;\n            const color = optsAtIndex.color;\n            const strokeColor = optsAtIndex.textStrokeColor;\n            const strokeWidth = optsAtIndex.textStrokeWidth;\n            let tickTextAlign = textAlign;\n            if (isHorizontal) {\n                x = pixel;\n                if (textAlign === 'inner') {\n                    if (i === ilen - 1) {\n                        tickTextAlign = !this.options.reverse ? 'right' : 'left';\n                    } else if (i === 0) {\n                        tickTextAlign = !this.options.reverse ? 'left' : 'right';\n                    } else {\n                        tickTextAlign = 'center';\n                    }\n                }\n                if (position === 'top') {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = -lineCount * lineHeight + lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n                    } else {\n                        textOffset = -labelSizes.highest.height + lineHeight / 2;\n                    }\n                } else {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n                    } else {\n                        textOffset = labelSizes.highest.height - lineCount * lineHeight;\n                    }\n                }\n                if (mirror) {\n                    textOffset *= -1;\n                }\n                if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n                    x += lineHeight / 2 * Math.sin(rotation);\n                }\n            } else {\n                y = pixel;\n                textOffset = (1 - lineCount) * lineHeight / 2;\n            }\n            let backdrop;\n            if (optsAtIndex.showLabelBackdrop) {\n                const labelPadding = toPadding(optsAtIndex.backdropPadding);\n                const height = labelSizes.heights[i];\n                const width = labelSizes.widths[i];\n                let top = textOffset - labelPadding.top;\n                let left = 0 - labelPadding.left;\n                switch(textBaseline){\n                    case 'middle':\n                        top -= height / 2;\n                        break;\n                    case 'bottom':\n                        top -= height;\n                        break;\n                }\n                switch(textAlign){\n                    case 'center':\n                        left -= width / 2;\n                        break;\n                    case 'right':\n                        left -= width;\n                        break;\n                    case 'inner':\n                        if (i === ilen - 1) {\n                            left -= width;\n                        } else if (i > 0) {\n                            left -= width / 2;\n                        }\n                        break;\n                }\n                backdrop = {\n                    left,\n                    top,\n                    width: width + labelPadding.width,\n                    height: height + labelPadding.height,\n                    color: optsAtIndex.backdropColor\n                };\n            }\n            items.push({\n                label,\n                font,\n                textOffset,\n                options: {\n                    rotation,\n                    color,\n                    strokeColor,\n                    strokeWidth,\n                    textAlign: tickTextAlign,\n                    textBaseline,\n                    translation: [\n                        x,\n                        y\n                    ],\n                    backdrop\n                }\n            });\n        }\n        return items;\n    }\n    _getXAxisLabelAlignment() {\n        const { position , ticks  } = this.options;\n        const rotation = -toRadians(this.labelRotation);\n        if (rotation) {\n            return position === 'top' ? 'left' : 'right';\n        }\n        let align = 'center';\n        if (ticks.align === 'start') {\n            align = 'left';\n        } else if (ticks.align === 'end') {\n            align = 'right';\n        } else if (ticks.align === 'inner') {\n            align = 'inner';\n        }\n        return align;\n    }\n    _getYAxisLabelAlignment(tl) {\n        const { position , ticks: { crossAlign , mirror , padding  }  } = this.options;\n        const labelSizes = this._getLabelSizes();\n        const tickAndPadding = tl + padding;\n        const widest = labelSizes.widest.width;\n        let textAlign;\n        let x;\n        if (position === 'left') {\n            if (mirror) {\n                x = this.right + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x += widest;\n                }\n            } else {\n                x = this.right - tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x = this.left;\n                }\n            }\n        } else if (position === 'right') {\n            if (mirror) {\n                x = this.left + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x -= widest;\n                }\n            } else {\n                x = this.left + tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x = this.right;\n                }\n            }\n        } else {\n            textAlign = 'right';\n        }\n        return {\n            textAlign,\n            x\n        };\n    }\n _computeLabelArea() {\n        if (this.options.ticks.mirror) {\n            return;\n        }\n        const chart = this.chart;\n        const position = this.options.position;\n        if (position === 'left' || position === 'right') {\n            return {\n                top: 0,\n                left: this.left,\n                bottom: chart.height,\n                right: this.right\n            };\n        }\n        if (position === 'top' || position === 'bottom') {\n            return {\n                top: this.top,\n                left: 0,\n                bottom: this.bottom,\n                right: chart.width\n            };\n        }\n    }\n drawBackground() {\n        const { ctx , options: { backgroundColor  } , left , top , width , height  } = this;\n        if (backgroundColor) {\n            ctx.save();\n            ctx.fillStyle = backgroundColor;\n            ctx.fillRect(left, top, width, height);\n            ctx.restore();\n        }\n    }\n    getLineWidthForValue(value) {\n        const grid = this.options.grid;\n        if (!this._isVisible() || !grid.display) {\n            return 0;\n        }\n        const ticks = this.ticks;\n        const index = ticks.findIndex((t)=>t.value === value);\n        if (index >= 0) {\n            const opts = grid.setContext(this.getContext(index));\n            return opts.lineWidth;\n        }\n        return 0;\n    }\n drawGrid(chartArea) {\n        const grid = this.options.grid;\n        const ctx = this.ctx;\n        const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n        let i, ilen;\n        const drawLine = (p1, p2, style)=>{\n            if (!style.width || !style.color) {\n                return;\n            }\n            ctx.save();\n            ctx.lineWidth = style.width;\n            ctx.strokeStyle = style.color;\n            ctx.setLineDash(style.borderDash || []);\n            ctx.lineDashOffset = style.borderDashOffset;\n            ctx.beginPath();\n            ctx.moveTo(p1.x, p1.y);\n            ctx.lineTo(p2.x, p2.y);\n            ctx.stroke();\n            ctx.restore();\n        };\n        if (grid.display) {\n            for(i = 0, ilen = items.length; i < ilen; ++i){\n                const item = items[i];\n                if (grid.drawOnChartArea) {\n                    drawLine({\n                        x: item.x1,\n                        y: item.y1\n                    }, {\n                        x: item.x2,\n                        y: item.y2\n                    }, item);\n                }\n                if (grid.drawTicks) {\n                    drawLine({\n                        x: item.tx1,\n                        y: item.ty1\n                    }, {\n                        x: item.tx2,\n                        y: item.ty2\n                    }, {\n                        color: item.tickColor,\n                        width: item.tickWidth,\n                        borderDash: item.tickBorderDash,\n                        borderDashOffset: item.tickBorderDashOffset\n                    });\n                }\n            }\n        }\n    }\n drawBorder() {\n        const { chart , ctx , options: { border , grid  }  } = this;\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = border.display ? borderOpts.width : 0;\n        if (!axisWidth) {\n            return;\n        }\n        const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n        const borderValue = this._borderValue;\n        let x1, x2, y1, y2;\n        if (this.isHorizontal()) {\n            x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n            x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n            y1 = y2 = borderValue;\n        } else {\n            y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n            y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n            x1 = x2 = borderValue;\n        }\n        ctx.save();\n        ctx.lineWidth = borderOpts.width;\n        ctx.strokeStyle = borderOpts.color;\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x2, y2);\n        ctx.stroke();\n        ctx.restore();\n    }\n drawLabels(chartArea) {\n        const optionTicks = this.options.ticks;\n        if (!optionTicks.display) {\n            return;\n        }\n        const ctx = this.ctx;\n        const area = this._computeLabelArea();\n        if (area) {\n            clipArea(ctx, area);\n        }\n        const items = this.getLabelItems(chartArea);\n        for (const item of items){\n            const renderTextOptions = item.options;\n            const tickFont = item.font;\n            const label = item.label;\n            const y = item.textOffset;\n            renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n        }\n        if (area) {\n            unclipArea(ctx);\n        }\n    }\n drawTitle() {\n        const { ctx , options: { position , title , reverse  }  } = this;\n        if (!title.display) {\n            return;\n        }\n        const font = toFont(title.font);\n        const padding = toPadding(title.padding);\n        const align = title.align;\n        let offset = font.lineHeight / 2;\n        if (position === 'bottom' || position === 'center' || isObject(position)) {\n            offset += padding.bottom;\n            if (isArray(title.text)) {\n                offset += font.lineHeight * (title.text.length - 1);\n            }\n        } else {\n            offset += padding.top;\n        }\n        const { titleX , titleY , maxWidth , rotation  } = titleArgs(this, offset, position, align);\n        renderText(ctx, title.text, 0, 0, font, {\n            color: title.color,\n            maxWidth,\n            rotation,\n            textAlign: titleAlign(align, position, reverse),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n    draw(chartArea) {\n        if (!this._isVisible()) {\n            return;\n        }\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawBorder();\n        this.drawTitle();\n        this.drawLabels(chartArea);\n    }\n _layers() {\n        const opts = this.options;\n        const tz = opts.ticks && opts.ticks.z || 0;\n        const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n        const bz = valueOrDefault(opts.border && opts.border.z, 0);\n        if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n            return [\n                {\n                    z: tz,\n                    draw: (chartArea)=>{\n                        this.draw(chartArea);\n                    }\n                }\n            ];\n        }\n        return [\n            {\n                z: gz,\n                draw: (chartArea)=>{\n                    this.drawBackground();\n                    this.drawGrid(chartArea);\n                    this.drawTitle();\n                }\n            },\n            {\n                z: bz,\n                draw: ()=>{\n                    this.drawBorder();\n                }\n            },\n            {\n                z: tz,\n                draw: (chartArea)=>{\n                    this.drawLabels(chartArea);\n                }\n            }\n        ];\n    }\n getMatchingVisibleMetas(type) {\n        const metas = this.chart.getSortedVisibleDatasetMetas();\n        const axisID = this.axis + 'AxisID';\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            const meta = metas[i];\n            if (meta[axisID] === this.id && (!type || meta.type === type)) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n _resolveTickFontOptions(index) {\n        const opts = this.options.ticks.setContext(this.getContext(index));\n        return toFont(opts.font);\n    }\n _maxDigits() {\n        const fontSize = this._resolveTickFontOptions(0).lineHeight;\n        return (this.isHorizontal() ? this.width : this.height) / fontSize;\n    }\n}\n\nclass TypedRegistry {\n    constructor(type, scope, override){\n        this.type = type;\n        this.scope = scope;\n        this.override = override;\n        this.items = Object.create(null);\n    }\n    isForType(type) {\n        return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n    }\n register(item) {\n        const proto = Object.getPrototypeOf(item);\n        let parentScope;\n        if (isIChartComponent(proto)) {\n            parentScope = this.register(proto);\n        }\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope + '.' + id;\n        if (!id) {\n            throw new Error('class does not have id: ' + item);\n        }\n        if (id in items) {\n            return scope;\n        }\n        items[id] = item;\n        registerDefaults(item, scope, parentScope);\n        if (this.override) {\n            defaults.override(item.id, item.overrides);\n        }\n        return scope;\n    }\n get(id) {\n        return this.items[id];\n    }\n unregister(item) {\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope;\n        if (id in items) {\n            delete items[id];\n        }\n        if (scope && id in defaults[scope]) {\n            delete defaults[scope][id];\n            if (this.override) {\n                delete overrides[id];\n            }\n        }\n    }\n}\nfunction registerDefaults(item, scope, parentScope) {\n    const itemDefaults = merge(Object.create(null), [\n        parentScope ? defaults.get(parentScope) : {},\n        defaults.get(scope),\n        item.defaults\n    ]);\n    defaults.set(scope, itemDefaults);\n    if (item.defaultRoutes) {\n        routeDefaults(scope, item.defaultRoutes);\n    }\n    if (item.descriptors) {\n        defaults.describe(scope, item.descriptors);\n    }\n}\nfunction routeDefaults(scope, routes) {\n    Object.keys(routes).forEach((property)=>{\n        const propertyParts = property.split('.');\n        const sourceName = propertyParts.pop();\n        const sourceScope = [\n            scope\n        ].concat(propertyParts).join('.');\n        const parts = routes[property].split('.');\n        const targetName = parts.pop();\n        const targetScope = parts.join('.');\n        defaults.route(sourceScope, sourceName, targetScope, targetName);\n    });\n}\nfunction isIChartComponent(proto) {\n    return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n    constructor(){\n        this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n        this.elements = new TypedRegistry(Element, 'elements');\n        this.plugins = new TypedRegistry(Object, 'plugins');\n        this.scales = new TypedRegistry(Scale, 'scales');\n        this._typedRegistries = [\n            this.controllers,\n            this.scales,\n            this.elements\n        ];\n    }\n add(...args) {\n        this._each('register', args);\n    }\n    remove(...args) {\n        this._each('unregister', args);\n    }\n addControllers(...args) {\n        this._each('register', args, this.controllers);\n    }\n addElements(...args) {\n        this._each('register', args, this.elements);\n    }\n addPlugins(...args) {\n        this._each('register', args, this.plugins);\n    }\n addScales(...args) {\n        this._each('register', args, this.scales);\n    }\n getController(id) {\n        return this._get(id, this.controllers, 'controller');\n    }\n getElement(id) {\n        return this._get(id, this.elements, 'element');\n    }\n getPlugin(id) {\n        return this._get(id, this.plugins, 'plugin');\n    }\n getScale(id) {\n        return this._get(id, this.scales, 'scale');\n    }\n removeControllers(...args) {\n        this._each('unregister', args, this.controllers);\n    }\n removeElements(...args) {\n        this._each('unregister', args, this.elements);\n    }\n removePlugins(...args) {\n        this._each('unregister', args, this.plugins);\n    }\n removeScales(...args) {\n        this._each('unregister', args, this.scales);\n    }\n _each(method, args, typedRegistry) {\n        [\n            ...args\n        ].forEach((arg)=>{\n            const reg = typedRegistry || this._getRegistryForType(arg);\n            if (typedRegistry || reg.isForType(arg) || reg === this.plugins && arg.id) {\n                this._exec(method, reg, arg);\n            } else {\n                each(arg, (item)=>{\n                    const itemReg = typedRegistry || this._getRegistryForType(item);\n                    this._exec(method, itemReg, item);\n                });\n            }\n        });\n    }\n _exec(method, registry, component) {\n        const camelMethod = _capitalize(method);\n        callback(component['before' + camelMethod], [], component);\n        registry[method](component);\n        callback(component['after' + camelMethod], [], component);\n    }\n _getRegistryForType(type) {\n        for(let i = 0; i < this._typedRegistries.length; i++){\n            const reg = this._typedRegistries[i];\n            if (reg.isForType(type)) {\n                return reg;\n            }\n        }\n        return this.plugins;\n    }\n _get(id, typedRegistry, type) {\n        const item = typedRegistry.get(id);\n        if (item === undefined) {\n            throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n        }\n        return item;\n    }\n}\nvar registry = /* #__PURE__ */ new Registry();\n\nclass PluginService {\n    constructor(){\n        this._init = [];\n    }\n notify(chart, hook, args, filter) {\n        if (hook === 'beforeInit') {\n            this._init = this._createDescriptors(chart, true);\n            this._notify(this._init, chart, 'install');\n        }\n        const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n        const result = this._notify(descriptors, chart, hook, args);\n        if (hook === 'afterDestroy') {\n            this._notify(descriptors, chart, 'stop');\n            this._notify(this._init, chart, 'uninstall');\n        }\n        return result;\n    }\n _notify(descriptors, chart, hook, args) {\n        args = args || {};\n        for (const descriptor of descriptors){\n            const plugin = descriptor.plugin;\n            const method = plugin[hook];\n            const params = [\n                chart,\n                args,\n                descriptor.options\n            ];\n            if (callback(method, params, plugin) === false && args.cancelable) {\n                return false;\n            }\n        }\n        return true;\n    }\n    invalidate() {\n        if (!isNullOrUndef(this._cache)) {\n            this._oldCache = this._cache;\n            this._cache = undefined;\n        }\n    }\n _descriptors(chart) {\n        if (this._cache) {\n            return this._cache;\n        }\n        const descriptors = this._cache = this._createDescriptors(chart);\n        this._notifyStateChanges(chart);\n        return descriptors;\n    }\n    _createDescriptors(chart, all) {\n        const config = chart && chart.config;\n        const options = valueOrDefault(config.options && config.options.plugins, {});\n        const plugins = allPlugins(config);\n        return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n    }\n _notifyStateChanges(chart) {\n        const previousDescriptors = this._oldCache || [];\n        const descriptors = this._cache;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.plugin.id === y.plugin.id));\n        this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n        this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n    }\n}\n function allPlugins(config) {\n    const localIds = {};\n    const plugins = [];\n    const keys = Object.keys(registry.plugins.items);\n    for(let i = 0; i < keys.length; i++){\n        plugins.push(registry.getPlugin(keys[i]));\n    }\n    const local = config.plugins || [];\n    for(let i = 0; i < local.length; i++){\n        const plugin = local[i];\n        if (plugins.indexOf(plugin) === -1) {\n            plugins.push(plugin);\n            localIds[plugin.id] = true;\n        }\n    }\n    return {\n        plugins,\n        localIds\n    };\n}\nfunction getOpts(options, all) {\n    if (!all && options === false) {\n        return null;\n    }\n    if (options === true) {\n        return {};\n    }\n    return options;\n}\nfunction createDescriptors(chart, { plugins , localIds  }, options, all) {\n    const result = [];\n    const context = chart.getContext();\n    for (const plugin of plugins){\n        const id = plugin.id;\n        const opts = getOpts(options[id], all);\n        if (opts === null) {\n            continue;\n        }\n        result.push({\n            plugin,\n            options: pluginOpts(chart.config, {\n                plugin,\n                local: localIds[id]\n            }, opts, context)\n        });\n    }\n    return result;\n}\nfunction pluginOpts(config, { plugin , local  }, opts, context) {\n    const keys = config.pluginScopeKeys(plugin);\n    const scopes = config.getOptionScopes(opts, keys);\n    if (local && plugin.defaults) {\n        scopes.push(plugin.defaults);\n    }\n    return config.createResolver(scopes, context, [\n        ''\n    ], {\n        scriptable: false,\n        indexable: false,\n        allKeys: true\n    });\n}\n\nfunction getIndexAxis(type, options) {\n    const datasetDefaults = defaults.datasets[type] || {};\n    const datasetOptions = (options.datasets || {})[type] || {};\n    return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n    let axis = id;\n    if (id === '_index_') {\n        axis = indexAxis;\n    } else if (id === '_value_') {\n        axis = indexAxis === 'x' ? 'y' : 'x';\n    }\n    return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n    return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction idMatchesAxis(id) {\n    if (id === 'x' || id === 'y' || id === 'r') {\n        return id;\n    }\n}\nfunction axisFromPosition(position) {\n    if (position === 'top' || position === 'bottom') {\n        return 'x';\n    }\n    if (position === 'left' || position === 'right') {\n        return 'y';\n    }\n}\nfunction determineAxis(id, ...scaleOptions) {\n    if (idMatchesAxis(id)) {\n        return id;\n    }\n    for (const opts of scaleOptions){\n        const axis = opts.axis || axisFromPosition(opts.position) || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n        if (axis) {\n            return axis;\n        }\n    }\n    throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\nfunction getAxisFromDataset(id, axis, dataset) {\n    if (dataset[axis + 'AxisID'] === id) {\n        return {\n            axis\n        };\n    }\n}\nfunction retrieveAxisFromDatasets(id, config) {\n    if (config.data && config.data.datasets) {\n        const boundDs = config.data.datasets.filter((d)=>d.xAxisID === id || d.yAxisID === id);\n        if (boundDs.length) {\n            return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n        }\n    }\n    return {};\n}\nfunction mergeScaleConfig(config, options) {\n    const chartDefaults = overrides[config.type] || {\n        scales: {}\n    };\n    const configScales = options.scales || {};\n    const chartIndexAxis = getIndexAxis(config.type, options);\n    const scales = Object.create(null);\n    Object.keys(configScales).forEach((id)=>{\n        const scaleConf = configScales[id];\n        if (!isObject(scaleConf)) {\n            return console.error(`Invalid scale configuration for scale: ${id}`);\n        }\n        if (scaleConf._proxy) {\n            return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n        }\n        const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n        const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n        const defaultScaleOptions = chartDefaults.scales || {};\n        scales[id] = mergeIf(Object.create(null), [\n            {\n                axis\n            },\n            scaleConf,\n            defaultScaleOptions[axis],\n            defaultScaleOptions[defaultId]\n        ]);\n    });\n    config.data.datasets.forEach((dataset)=>{\n        const type = dataset.type || config.type;\n        const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n        const datasetDefaults = overrides[type] || {};\n        const defaultScaleOptions = datasetDefaults.scales || {};\n        Object.keys(defaultScaleOptions).forEach((defaultID)=>{\n            const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n            const id = dataset[axis + 'AxisID'] || axis;\n            scales[id] = scales[id] || Object.create(null);\n            mergeIf(scales[id], [\n                {\n                    axis\n                },\n                configScales[id],\n                defaultScaleOptions[defaultID]\n            ]);\n        });\n    });\n    Object.keys(scales).forEach((key)=>{\n        const scale = scales[key];\n        mergeIf(scale, [\n            defaults.scales[scale.type],\n            defaults.scale\n        ]);\n    });\n    return scales;\n}\nfunction initOptions(config) {\n    const options = config.options || (config.options = {});\n    options.plugins = valueOrDefault(options.plugins, {});\n    options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n    data = data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    return data;\n}\nfunction initConfig(config) {\n    config = config || {};\n    config.data = initData(config.data);\n    initOptions(config);\n    return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n    let keys = keyCache.get(cacheKey);\n    if (!keys) {\n        keys = generate();\n        keyCache.set(cacheKey, keys);\n        keysCached.add(keys);\n    }\n    return keys;\n}\nconst addIfFound = (set, obj, key)=>{\n    const opts = resolveObjectKey(obj, key);\n    if (opts !== undefined) {\n        set.add(opts);\n    }\n};\nclass Config {\n    constructor(config){\n        this._config = initConfig(config);\n        this._scopeCache = new Map();\n        this._resolverCache = new Map();\n    }\n    get platform() {\n        return this._config.platform;\n    }\n    get type() {\n        return this._config.type;\n    }\n    set type(type) {\n        this._config.type = type;\n    }\n    get data() {\n        return this._config.data;\n    }\n    set data(data) {\n        this._config.data = initData(data);\n    }\n    get options() {\n        return this._config.options;\n    }\n    set options(options) {\n        this._config.options = options;\n    }\n    get plugins() {\n        return this._config.plugins;\n    }\n    update() {\n        const config = this._config;\n        this.clearCache();\n        initOptions(config);\n    }\n    clearCache() {\n        this._scopeCache.clear();\n        this._resolverCache.clear();\n    }\n datasetScopeKeys(datasetType) {\n        return cachedKeys(datasetType, ()=>[\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetAnimationScopeKeys(datasetType, transition) {\n        return cachedKeys(`${datasetType}.transition.${transition}`, ()=>[\n                [\n                    `datasets.${datasetType}.transitions.${transition}`,\n                    `transitions.${transition}`\n                ],\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetElementScopeKeys(datasetType, elementType) {\n        return cachedKeys(`${datasetType}-${elementType}`, ()=>[\n                [\n                    `datasets.${datasetType}.elements.${elementType}`,\n                    `datasets.${datasetType}`,\n                    `elements.${elementType}`,\n                    ''\n                ]\n            ]);\n    }\n pluginScopeKeys(plugin) {\n        const id = plugin.id;\n        const type = this.type;\n        return cachedKeys(`${type}-plugin-${id}`, ()=>[\n                [\n                    `plugins.${id}`,\n                    ...plugin.additionalOptionScopes || []\n                ]\n            ]);\n    }\n _cachedScopes(mainScope, resetCache) {\n        const _scopeCache = this._scopeCache;\n        let cache = _scopeCache.get(mainScope);\n        if (!cache || resetCache) {\n            cache = new Map();\n            _scopeCache.set(mainScope, cache);\n        }\n        return cache;\n    }\n getOptionScopes(mainScope, keyLists, resetCache) {\n        const { options , type  } = this;\n        const cache = this._cachedScopes(mainScope, resetCache);\n        const cached = cache.get(keyLists);\n        if (cached) {\n            return cached;\n        }\n        const scopes = new Set();\n        keyLists.forEach((keys)=>{\n            if (mainScope) {\n                scopes.add(mainScope);\n                keys.forEach((key)=>addIfFound(scopes, mainScope, key));\n            }\n            keys.forEach((key)=>addIfFound(scopes, options, key));\n            keys.forEach((key)=>addIfFound(scopes, overrides[type] || {}, key));\n            keys.forEach((key)=>addIfFound(scopes, defaults, key));\n            keys.forEach((key)=>addIfFound(scopes, descriptors, key));\n        });\n        const array = Array.from(scopes);\n        if (array.length === 0) {\n            array.push(Object.create(null));\n        }\n        if (keysCached.has(keyLists)) {\n            cache.set(keyLists, array);\n        }\n        return array;\n    }\n chartOptionScopes() {\n        const { options , type  } = this;\n        return [\n            options,\n            overrides[type] || {},\n            defaults.datasets[type] || {},\n            {\n                type\n            },\n            defaults,\n            descriptors\n        ];\n    }\n resolveNamedOptions(scopes, names, context, prefixes = [\n        ''\n    ]) {\n        const result = {\n            $shared: true\n        };\n        const { resolver , subPrefixes  } = getResolver(this._resolverCache, scopes, prefixes);\n        let options = resolver;\n        if (needContext(resolver, names)) {\n            result.$shared = false;\n            context = isFunction(context) ? context() : context;\n            const subResolver = this.createResolver(scopes, context, subPrefixes);\n            options = _attachContext(resolver, context, subResolver);\n        }\n        for (const prop of names){\n            result[prop] = options[prop];\n        }\n        return result;\n    }\n createResolver(scopes, context, prefixes = [\n        ''\n    ], descriptorDefaults) {\n        const { resolver  } = getResolver(this._resolverCache, scopes, prefixes);\n        return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n    }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n    let cache = resolverCache.get(scopes);\n    if (!cache) {\n        cache = new Map();\n        resolverCache.set(scopes, cache);\n    }\n    const cacheKey = prefixes.join();\n    let cached = cache.get(cacheKey);\n    if (!cached) {\n        const resolver = _createResolver(scopes, prefixes);\n        cached = {\n            resolver,\n            subPrefixes: prefixes.filter((p)=>!p.toLowerCase().includes('hover'))\n        };\n        cache.set(cacheKey, cached);\n    }\n    return cached;\n}\nconst hasFunction = (value)=>isObject(value) && Object.getOwnPropertyNames(value).some((key)=>isFunction(value[key]));\nfunction needContext(proxy, names) {\n    const { isScriptable , isIndexable  } = _descriptors(proxy);\n    for (const prop of names){\n        const scriptable = isScriptable(prop);\n        const indexable = isIndexable(prop);\n        const value = (indexable || scriptable) && proxy[prop];\n        if (scriptable && (isFunction(value) || hasFunction(value)) || indexable && isArray(value)) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar version = \"4.4.4\";\n\nconst KNOWN_POSITIONS = [\n    'top',\n    'bottom',\n    'left',\n    'right',\n    'chartArea'\n];\nfunction positionIsHorizontal(position, axis) {\n    return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\nfunction compare2Level(l1, l2) {\n    return function(a, b) {\n        return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n    };\n}\nfunction onAnimationsComplete(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    chart.notifyPlugins('afterRender');\n    callback(animationOptions && animationOptions.onComplete, [\n        context\n    ], chart);\n}\nfunction onAnimationProgress(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    callback(animationOptions && animationOptions.onProgress, [\n        context\n    ], chart);\n}\n function getCanvas(item) {\n    if (_isDomSupported() && typeof item === 'string') {\n        item = document.getElementById(item);\n    } else if (item && item.length) {\n        item = item[0];\n    }\n    if (item && item.canvas) {\n        item = item.canvas;\n    }\n    return item;\n}\nconst instances = {};\nconst getChart = (key)=>{\n    const canvas = getCanvas(key);\n    return Object.values(instances).filter((c)=>c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n    const keys = Object.keys(obj);\n    for (const key of keys){\n        const intKey = +key;\n        if (intKey >= start) {\n            const value = obj[key];\n            delete obj[key];\n            if (move > 0 || intKey > start) {\n                obj[intKey + move] = value;\n            }\n        }\n    }\n}\n function determineLastEvent(e, lastEvent, inChartArea, isClick) {\n    if (!inChartArea || e.type === 'mouseout') {\n        return null;\n    }\n    if (isClick) {\n        return lastEvent;\n    }\n    return e;\n}\nfunction getSizeForArea(scale, chartArea, field) {\n    return scale.options.clip ? scale[field] : chartArea[field];\n}\nfunction getDatasetArea(meta, chartArea) {\n    const { xScale , yScale  } = meta;\n    if (xScale && yScale) {\n        return {\n            left: getSizeForArea(xScale, chartArea, 'left'),\n            right: getSizeForArea(xScale, chartArea, 'right'),\n            top: getSizeForArea(yScale, chartArea, 'top'),\n            bottom: getSizeForArea(yScale, chartArea, 'bottom')\n        };\n    }\n    return chartArea;\n}\nclass Chart {\n    static defaults = defaults;\n    static instances = instances;\n    static overrides = overrides;\n    static registry = registry;\n    static version = version;\n    static getChart = getChart;\n    static register(...items) {\n        registry.add(...items);\n        invalidatePlugins();\n    }\n    static unregister(...items) {\n        registry.remove(...items);\n        invalidatePlugins();\n    }\n    constructor(item, userConfig){\n        const config = this.config = new Config(userConfig);\n        const initialCanvas = getCanvas(item);\n        const existingChart = getChart(initialCanvas);\n        if (existingChart) {\n            throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.');\n        }\n        const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n        this.platform.updateConfig(config);\n        const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n        const canvas = context && context.canvas;\n        const height = canvas && canvas.height;\n        const width = canvas && canvas.width;\n        this.id = uid();\n        this.ctx = context;\n        this.canvas = canvas;\n        this.width = width;\n        this.height = height;\n        this._options = options;\n        this._aspectRatio = this.aspectRatio;\n        this._layers = [];\n        this._metasets = [];\n        this._stacks = undefined;\n        this.boxes = [];\n        this.currentDevicePixelRatio = undefined;\n        this.chartArea = undefined;\n        this._active = [];\n        this._lastEvent = undefined;\n        this._listeners = {};\n         this._responsiveListeners = undefined;\n        this._sortedMetasets = [];\n        this.scales = {};\n        this._plugins = new PluginService();\n        this.$proxies = {};\n        this._hiddenIndices = {};\n        this.attached = false;\n        this._animationsDisabled = undefined;\n        this.$context = undefined;\n        this._doResize = debounce((mode)=>this.update(mode), options.resizeDelay || 0);\n        this._dataChanges = [];\n        instances[this.id] = this;\n        if (!context || !canvas) {\n            console.error(\"Failed to create chart: can't acquire context from the given item\");\n            return;\n        }\n        animator.listen(this, 'complete', onAnimationsComplete);\n        animator.listen(this, 'progress', onAnimationProgress);\n        this._initialize();\n        if (this.attached) {\n            this.update();\n        }\n    }\n    get aspectRatio() {\n        const { options: { aspectRatio , maintainAspectRatio  } , width , height , _aspectRatio  } = this;\n        if (!isNullOrUndef(aspectRatio)) {\n            return aspectRatio;\n        }\n        if (maintainAspectRatio && _aspectRatio) {\n            return _aspectRatio;\n        }\n        return height ? width / height : null;\n    }\n    get data() {\n        return this.config.data;\n    }\n    set data(data) {\n        this.config.data = data;\n    }\n    get options() {\n        return this._options;\n    }\n    set options(options) {\n        this.config.options = options;\n    }\n    get registry() {\n        return registry;\n    }\n _initialize() {\n        this.notifyPlugins('beforeInit');\n        if (this.options.responsive) {\n            this.resize();\n        } else {\n            retinaScale(this, this.options.devicePixelRatio);\n        }\n        this.bindEvents();\n        this.notifyPlugins('afterInit');\n        return this;\n    }\n    clear() {\n        clearCanvas(this.canvas, this.ctx);\n        return this;\n    }\n    stop() {\n        animator.stop(this);\n        return this;\n    }\n resize(width, height) {\n        if (!animator.running(this)) {\n            this._resize(width, height);\n        } else {\n            this._resizeBeforeDraw = {\n                width,\n                height\n            };\n        }\n    }\n    _resize(width, height) {\n        const options = this.options;\n        const canvas = this.canvas;\n        const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n        const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n        const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n        const mode = this.width ? 'resize' : 'attach';\n        this.width = newSize.width;\n        this.height = newSize.height;\n        this._aspectRatio = this.aspectRatio;\n        if (!retinaScale(this, newRatio, true)) {\n            return;\n        }\n        this.notifyPlugins('resize', {\n            size: newSize\n        });\n        callback(options.onResize, [\n            this,\n            newSize\n        ], this);\n        if (this.attached) {\n            if (this._doResize(mode)) {\n                this.render();\n            }\n        }\n    }\n    ensureScalesHaveIDs() {\n        const options = this.options;\n        const scalesOptions = options.scales || {};\n        each(scalesOptions, (axisOptions, axisID)=>{\n            axisOptions.id = axisID;\n        });\n    }\n buildOrUpdateScales() {\n        const options = this.options;\n        const scaleOpts = options.scales;\n        const scales = this.scales;\n        const updated = Object.keys(scales).reduce((obj, id)=>{\n            obj[id] = false;\n            return obj;\n        }, {});\n        let items = [];\n        if (scaleOpts) {\n            items = items.concat(Object.keys(scaleOpts).map((id)=>{\n                const scaleOptions = scaleOpts[id];\n                const axis = determineAxis(id, scaleOptions);\n                const isRadial = axis === 'r';\n                const isHorizontal = axis === 'x';\n                return {\n                    options: scaleOptions,\n                    dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n                    dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n                };\n            }));\n        }\n        each(items, (item)=>{\n            const scaleOptions = item.options;\n            const id = scaleOptions.id;\n            const axis = determineAxis(id, scaleOptions);\n            const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n            if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n                scaleOptions.position = item.dposition;\n            }\n            updated[id] = true;\n            let scale = null;\n            if (id in scales && scales[id].type === scaleType) {\n                scale = scales[id];\n            } else {\n                const scaleClass = registry.getScale(scaleType);\n                scale = new scaleClass({\n                    id,\n                    type: scaleType,\n                    ctx: this.ctx,\n                    chart: this\n                });\n                scales[scale.id] = scale;\n            }\n            scale.init(scaleOptions, options);\n        });\n        each(updated, (hasUpdated, id)=>{\n            if (!hasUpdated) {\n                delete scales[id];\n            }\n        });\n        each(scales, (scale)=>{\n            layouts.configure(this, scale, scale.options);\n            layouts.addBox(this, scale);\n        });\n    }\n _updateMetasets() {\n        const metasets = this._metasets;\n        const numData = this.data.datasets.length;\n        const numMeta = metasets.length;\n        metasets.sort((a, b)=>a.index - b.index);\n        if (numMeta > numData) {\n            for(let i = numData; i < numMeta; ++i){\n                this._destroyDatasetMeta(i);\n            }\n            metasets.splice(numData, numMeta - numData);\n        }\n        this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n    }\n _removeUnreferencedMetasets() {\n        const { _metasets: metasets , data: { datasets  }  } = this;\n        if (metasets.length > datasets.length) {\n            delete this._stacks;\n        }\n        metasets.forEach((meta, index)=>{\n            if (datasets.filter((x)=>x === meta._dataset).length === 0) {\n                this._destroyDatasetMeta(index);\n            }\n        });\n    }\n    buildOrUpdateControllers() {\n        const newControllers = [];\n        const datasets = this.data.datasets;\n        let i, ilen;\n        this._removeUnreferencedMetasets();\n        for(i = 0, ilen = datasets.length; i < ilen; i++){\n            const dataset = datasets[i];\n            let meta = this.getDatasetMeta(i);\n            const type = dataset.type || this.config.type;\n            if (meta.type && meta.type !== type) {\n                this._destroyDatasetMeta(i);\n                meta = this.getDatasetMeta(i);\n            }\n            meta.type = type;\n            meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n            meta.order = dataset.order || 0;\n            meta.index = i;\n            meta.label = '' + dataset.label;\n            meta.visible = this.isDatasetVisible(i);\n            if (meta.controller) {\n                meta.controller.updateIndex(i);\n                meta.controller.linkScales();\n            } else {\n                const ControllerClass = registry.getController(type);\n                const { datasetElementType , dataElementType  } = defaults.datasets[type];\n                Object.assign(ControllerClass, {\n                    dataElementType: registry.getElement(dataElementType),\n                    datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n                });\n                meta.controller = new ControllerClass(this, i);\n                newControllers.push(meta.controller);\n            }\n        }\n        this._updateMetasets();\n        return newControllers;\n    }\n _resetElements() {\n        each(this.data.datasets, (dataset, datasetIndex)=>{\n            this.getDatasetMeta(datasetIndex).controller.reset();\n        }, this);\n    }\n reset() {\n        this._resetElements();\n        this.notifyPlugins('reset');\n    }\n    update(mode) {\n        const config = this.config;\n        config.update();\n        const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        const animsDisabled = this._animationsDisabled = !options.animation;\n        this._updateScales();\n        this._checkEventBindings();\n        this._updateHiddenIndices();\n        this._plugins.invalidate();\n        if (this.notifyPlugins('beforeUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const newControllers = this.buildOrUpdateControllers();\n        this.notifyPlugins('beforeElementsUpdate');\n        let minPadding = 0;\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; i++){\n            const { controller  } = this.getDatasetMeta(i);\n            const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n            controller.buildOrUpdateElements(reset);\n            minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n        }\n        minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n        this._updateLayout(minPadding);\n        if (!animsDisabled) {\n            each(newControllers, (controller)=>{\n                controller.reset();\n            });\n        }\n        this._updateDatasets(mode);\n        this.notifyPlugins('afterUpdate', {\n            mode\n        });\n        this._layers.sort(compare2Level('z', '_idx'));\n        const { _active , _lastEvent  } = this;\n        if (_lastEvent) {\n            this._eventHandler(_lastEvent, true);\n        } else if (_active.length) {\n            this._updateHoverStyles(_active, _active, true);\n        }\n        this.render();\n    }\n _updateScales() {\n        each(this.scales, (scale)=>{\n            layouts.removeBox(this, scale);\n        });\n        this.ensureScalesHaveIDs();\n        this.buildOrUpdateScales();\n    }\n _checkEventBindings() {\n        const options = this.options;\n        const existingEvents = new Set(Object.keys(this._listeners));\n        const newEvents = new Set(options.events);\n        if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n            this.unbindEvents();\n            this.bindEvents();\n        }\n    }\n _updateHiddenIndices() {\n        const { _hiddenIndices  } = this;\n        const changes = this._getUniformDataChanges() || [];\n        for (const { method , start , count  } of changes){\n            const move = method === '_removeElements' ? -count : count;\n            moveNumericKeys(_hiddenIndices, start, move);\n        }\n    }\n _getUniformDataChanges() {\n        const _dataChanges = this._dataChanges;\n        if (!_dataChanges || !_dataChanges.length) {\n            return;\n        }\n        this._dataChanges = [];\n        const datasetCount = this.data.datasets.length;\n        const makeSet = (idx)=>new Set(_dataChanges.filter((c)=>c[0] === idx).map((c, i)=>i + ',' + c.splice(1).join(',')));\n        const changeSet = makeSet(0);\n        for(let i = 1; i < datasetCount; i++){\n            if (!setsEqual(changeSet, makeSet(i))) {\n                return;\n            }\n        }\n        return Array.from(changeSet).map((c)=>c.split(',')).map((a)=>({\n                method: a[1],\n                start: +a[2],\n                count: +a[3]\n            }));\n    }\n _updateLayout(minPadding) {\n        if (this.notifyPlugins('beforeLayout', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        layouts.update(this, this.width, this.height, minPadding);\n        const area = this.chartArea;\n        const noArea = area.width <= 0 || area.height <= 0;\n        this._layers = [];\n        each(this.boxes, (box)=>{\n            if (noArea && box.position === 'chartArea') {\n                return;\n            }\n            if (box.configure) {\n                box.configure();\n            }\n            this._layers.push(...box._layers());\n        }, this);\n        this._layers.forEach((item, index)=>{\n            item._idx = index;\n        });\n        this.notifyPlugins('afterLayout');\n    }\n _updateDatasets(mode) {\n        if (this.notifyPlugins('beforeDatasetsUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this.getDatasetMeta(i).controller.configure();\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._updateDataset(i, isFunction(mode) ? mode({\n                datasetIndex: i\n            }) : mode);\n        }\n        this.notifyPlugins('afterDatasetsUpdate', {\n            mode\n        });\n    }\n _updateDataset(index, mode) {\n        const meta = this.getDatasetMeta(index);\n        const args = {\n            meta,\n            index,\n            mode,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n            return;\n        }\n        meta.controller._update(mode);\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetUpdate', args);\n    }\n    render() {\n        if (this.notifyPlugins('beforeRender', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        if (animator.has(this)) {\n            if (this.attached && !animator.running(this)) {\n                animator.start(this);\n            }\n        } else {\n            this.draw();\n            onAnimationsComplete({\n                chart: this\n            });\n        }\n    }\n    draw() {\n        let i;\n        if (this._resizeBeforeDraw) {\n            const { width , height  } = this._resizeBeforeDraw;\n            this._resizeBeforeDraw = null;\n            this._resize(width, height);\n        }\n        this.clear();\n        if (this.width <= 0 || this.height <= 0) {\n            return;\n        }\n        if (this.notifyPlugins('beforeDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const layers = this._layers;\n        for(i = 0; i < layers.length && layers[i].z <= 0; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this._drawDatasets();\n        for(; i < layers.length; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this.notifyPlugins('afterDraw');\n    }\n _getSortedDatasetMetas(filterVisible) {\n        const metasets = this._sortedMetasets;\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metasets.length; i < ilen; ++i){\n            const meta = metasets[i];\n            if (!filterVisible || meta.visible) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n getSortedVisibleDatasetMetas() {\n        return this._getSortedDatasetMetas(true);\n    }\n _drawDatasets() {\n        if (this.notifyPlugins('beforeDatasetsDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const metasets = this.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            this._drawDataset(metasets[i]);\n        }\n        this.notifyPlugins('afterDatasetsDraw');\n    }\n _drawDataset(meta) {\n        const ctx = this.ctx;\n        const clip = meta._clip;\n        const useClip = !clip.disabled;\n        const area = getDatasetArea(meta, this.chartArea);\n        const args = {\n            meta,\n            index: meta.index,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n            return;\n        }\n        if (useClip) {\n            clipArea(ctx, {\n                left: clip.left === false ? 0 : area.left - clip.left,\n                right: clip.right === false ? this.width : area.right + clip.right,\n                top: clip.top === false ? 0 : area.top - clip.top,\n                bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n            });\n        }\n        meta.controller.draw();\n        if (useClip) {\n            unclipArea(ctx);\n        }\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetDraw', args);\n    }\n isPointInArea(point) {\n        return _isPointInArea(point, this.chartArea, this._minPadding);\n    }\n    getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n        const method = Interaction.modes[mode];\n        if (typeof method === 'function') {\n            return method(this, e, options, useFinalPosition);\n        }\n        return [];\n    }\n    getDatasetMeta(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        const metasets = this._metasets;\n        let meta = metasets.filter((x)=>x && x._dataset === dataset).pop();\n        if (!meta) {\n            meta = {\n                type: null,\n                data: [],\n                dataset: null,\n                controller: null,\n                hidden: null,\n                xAxisID: null,\n                yAxisID: null,\n                order: dataset && dataset.order || 0,\n                index: datasetIndex,\n                _dataset: dataset,\n                _parsed: [],\n                _sorted: false\n            };\n            metasets.push(meta);\n        }\n        return meta;\n    }\n    getContext() {\n        return this.$context || (this.$context = createContext(null, {\n            chart: this,\n            type: 'chart'\n        }));\n    }\n    getVisibleDatasetCount() {\n        return this.getSortedVisibleDatasetMetas().length;\n    }\n    isDatasetVisible(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        if (!dataset) {\n            return false;\n        }\n        const meta = this.getDatasetMeta(datasetIndex);\n        return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n    }\n    setDatasetVisibility(datasetIndex, visible) {\n        const meta = this.getDatasetMeta(datasetIndex);\n        meta.hidden = !visible;\n    }\n    toggleDataVisibility(index) {\n        this._hiddenIndices[index] = !this._hiddenIndices[index];\n    }\n    getDataVisibility(index) {\n        return !this._hiddenIndices[index];\n    }\n _updateVisibility(datasetIndex, dataIndex, visible) {\n        const mode = visible ? 'show' : 'hide';\n        const meta = this.getDatasetMeta(datasetIndex);\n        const anims = meta.controller._resolveAnimations(undefined, mode);\n        if (defined(dataIndex)) {\n            meta.data[dataIndex].hidden = !visible;\n            this.update();\n        } else {\n            this.setDatasetVisibility(datasetIndex, visible);\n            anims.update(meta, {\n                visible\n            });\n            this.update((ctx)=>ctx.datasetIndex === datasetIndex ? mode : undefined);\n        }\n    }\n    hide(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, false);\n    }\n    show(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, true);\n    }\n _destroyDatasetMeta(datasetIndex) {\n        const meta = this._metasets[datasetIndex];\n        if (meta && meta.controller) {\n            meta.controller._destroy();\n        }\n        delete this._metasets[datasetIndex];\n    }\n    _stop() {\n        let i, ilen;\n        this.stop();\n        animator.remove(this);\n        for(i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._destroyDatasetMeta(i);\n        }\n    }\n    destroy() {\n        this.notifyPlugins('beforeDestroy');\n        const { canvas , ctx  } = this;\n        this._stop();\n        this.config.clearCache();\n        if (canvas) {\n            this.unbindEvents();\n            clearCanvas(canvas, ctx);\n            this.platform.releaseContext(ctx);\n            this.canvas = null;\n            this.ctx = null;\n        }\n        delete instances[this.id];\n        this.notifyPlugins('afterDestroy');\n    }\n    toBase64Image(...args) {\n        return this.canvas.toDataURL(...args);\n    }\n bindEvents() {\n        this.bindUserEvents();\n        if (this.options.responsive) {\n            this.bindResponsiveEvents();\n        } else {\n            this.attached = true;\n        }\n    }\n bindUserEvents() {\n        const listeners = this._listeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const listener = (e, x, y)=>{\n            e.offsetX = x;\n            e.offsetY = y;\n            this._eventHandler(e);\n        };\n        each(this.options.events, (type)=>_add(type, listener));\n    }\n bindResponsiveEvents() {\n        if (!this._responsiveListeners) {\n            this._responsiveListeners = {};\n        }\n        const listeners = this._responsiveListeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const _remove = (type, listener)=>{\n            if (listeners[type]) {\n                platform.removeEventListener(this, type, listener);\n                delete listeners[type];\n            }\n        };\n        const listener = (width, height)=>{\n            if (this.canvas) {\n                this.resize(width, height);\n            }\n        };\n        let detached;\n        const attached = ()=>{\n            _remove('attach', attached);\n            this.attached = true;\n            this.resize();\n            _add('resize', listener);\n            _add('detach', detached);\n        };\n        detached = ()=>{\n            this.attached = false;\n            _remove('resize', listener);\n            this._stop();\n            this._resize(0, 0);\n            _add('attach', attached);\n        };\n        if (platform.isAttached(this.canvas)) {\n            attached();\n        } else {\n            detached();\n        }\n    }\n unbindEvents() {\n        each(this._listeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._listeners = {};\n        each(this._responsiveListeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._responsiveListeners = undefined;\n    }\n    updateHoverStyle(items, mode, enabled) {\n        const prefix = enabled ? 'set' : 'remove';\n        let meta, item, i, ilen;\n        if (mode === 'dataset') {\n            meta = this.getDatasetMeta(items[0].datasetIndex);\n            meta.controller['_' + prefix + 'DatasetHoverStyle']();\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            item = items[i];\n            const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n            if (controller) {\n                controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n            }\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements) {\n        const lastActive = this._active || [];\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('No dataset found at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed) {\n            this._active = active;\n            this._lastEvent = null;\n            this._updateHoverStyles(active, lastActive);\n        }\n    }\n notifyPlugins(hook, args, filter) {\n        return this._plugins.notify(this, hook, args, filter);\n    }\n isPluginEnabled(pluginId) {\n        return this._plugins._cache.filter((p)=>p.plugin.id === pluginId).length === 1;\n    }\n _updateHoverStyles(active, lastActive, replay) {\n        const hoverOptions = this.options.hover;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.datasetIndex === y.datasetIndex && x.index === y.index));\n        const deactivated = diff(lastActive, active);\n        const activated = replay ? active : diff(active, lastActive);\n        if (deactivated.length) {\n            this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n        }\n        if (activated.length && hoverOptions.mode) {\n            this.updateHoverStyle(activated, hoverOptions.mode, true);\n        }\n    }\n _eventHandler(e, replay) {\n        const args = {\n            event: e,\n            replay,\n            cancelable: true,\n            inChartArea: this.isPointInArea(e)\n        };\n        const eventFilter = (plugin)=>(plugin.options.events || this.options.events).includes(e.native.type);\n        if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n            return;\n        }\n        const changed = this._handleEvent(e, replay, args.inChartArea);\n        args.cancelable = false;\n        this.notifyPlugins('afterEvent', args, eventFilter);\n        if (changed || args.changed) {\n            this.render();\n        }\n        return this;\n    }\n _handleEvent(e, replay, inChartArea) {\n        const { _active: lastActive = [] , options  } = this;\n        const useFinalPosition = replay;\n        const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n        const isClick = _isClickEvent(e);\n        const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n        if (inChartArea) {\n            this._lastEvent = null;\n            callback(options.onHover, [\n                e,\n                active,\n                this\n            ], this);\n            if (isClick) {\n                callback(options.onClick, [\n                    e,\n                    active,\n                    this\n                ], this);\n            }\n        }\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed || replay) {\n            this._active = active;\n            this._updateHoverStyles(active, lastActive, replay);\n        }\n        this._lastEvent = lastEvent;\n        return changed;\n    }\n _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const hoverOptions = this.options.hover;\n        return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n    }\n}\nfunction invalidatePlugins() {\n    return each(Chart.instances, (chart)=>chart._plugins.invalidate());\n}\n\nfunction clipArc(ctx, element, endAngle) {\n    const { startAngle , pixelMargin , x , y , outerRadius , innerRadius  } = element;\n    let angleMargin = pixelMargin / outerRadius;\n    // Draw an inner border by clipping the arc and drawing a double-width border\n    // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n    ctx.beginPath();\n    ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n    if (innerRadius > pixelMargin) {\n        angleMargin = pixelMargin / innerRadius;\n        ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n    } else {\n        ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n    }\n    ctx.closePath();\n    ctx.clip();\n}\nfunction toRadiusCorners(value) {\n    return _readValueToProps(value, [\n        'outerStart',\n        'outerEnd',\n        'innerStart',\n        'innerEnd'\n    ]);\n}\n/**\n * Parse border radius from the provided options\n */ function parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n    const o = toRadiusCorners(arc.options.borderRadius);\n    const halfThickness = (outerRadius - innerRadius) / 2;\n    const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n    // Outer limits are complicated. We want to compute the available angular distance at\n    // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n    // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n    //\n    // If the borderRadius is large, that value can become negative.\n    // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n    // we know that the thickness term will dominate and compute the limits at that point\n    const computeOuterLimit = (val)=>{\n        const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n        return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n    };\n    return {\n        outerStart: computeOuterLimit(o.outerStart),\n        outerEnd: computeOuterLimit(o.outerEnd),\n        innerStart: _limitValue(o.innerStart, 0, innerLimit),\n        innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n    };\n}\n/**\n * Convert (r, 𝜃) to (x, y)\n */ function rThetaToXY(r, theta, x, y) {\n    return {\n        x: x + r * Math.cos(theta),\n        y: y + r * Math.sin(theta)\n    };\n}\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */ function pathArc(ctx, element, offset, spacing, end, circular) {\n    const { x , y , startAngle: start , pixelMargin , innerRadius: innerR  } = element;\n    const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n    const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n    let spacingOffset = 0;\n    const alpha = end - start;\n    if (spacing) {\n        // When spacing is present, it is the same for all items\n        // So we adjust the start and end angle of the arc such that\n        // the distance is the same as it would be without the spacing\n        const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n        const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n        const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n        const adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n        spacingOffset = (alpha - adjustedAngle) / 2;\n    }\n    const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n    const angleOffset = (alpha - beta) / 2;\n    const startAngle = start + angleOffset + spacingOffset;\n    const endAngle = end - angleOffset - spacingOffset;\n    const { outerStart , outerEnd , innerStart , innerEnd  } = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n    const outerStartAdjustedRadius = outerRadius - outerStart;\n    const outerEndAdjustedRadius = outerRadius - outerEnd;\n    const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n    const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n    const innerStartAdjustedRadius = innerRadius + innerStart;\n    const innerEndAdjustedRadius = innerRadius + innerEnd;\n    const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n    const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n    ctx.beginPath();\n    if (circular) {\n        // The first arc segments from point 1 to point a to point 2\n        const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n        ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n        ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n        // The corner segment from point 2 to point 3\n        if (outerEnd > 0) {\n            const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n        }\n        // The line from point 3 to point 4\n        const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n        ctx.lineTo(p4.x, p4.y);\n        // The corner segment from point 4 to point 5\n        if (innerEnd > 0) {\n            const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n        }\n        // The inner arc from point 5 to point b to point 6\n        const innerMidAdjustedAngle = (endAngle - innerEnd / innerRadius + (startAngle + innerStart / innerRadius)) / 2;\n        ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, innerMidAdjustedAngle, true);\n        ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + innerStart / innerRadius, true);\n        // The corner segment from point 6 to point 7\n        if (innerStart > 0) {\n            const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n        }\n        // The line from point 7 to point 8\n        const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n        ctx.lineTo(p8.x, p8.y);\n        // The corner segment from point 8 to point 1\n        if (outerStart > 0) {\n            const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n        }\n    } else {\n        ctx.moveTo(x, y);\n        const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n        const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerStartX, outerStartY);\n        const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n        const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerEndX, outerEndY);\n    }\n    ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference  } = element;\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.fill();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.fill();\n    return endAngle;\n}\nfunction drawBorder(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference , options  } = element;\n    const { borderWidth , borderJoinStyle , borderDash , borderDashOffset  } = options;\n    const inner = options.borderAlign === 'inner';\n    if (!borderWidth) {\n        return;\n    }\n    ctx.setLineDash(borderDash || []);\n    ctx.lineDashOffset = borderDashOffset;\n    if (inner) {\n        ctx.lineWidth = borderWidth * 2;\n        ctx.lineJoin = borderJoinStyle || 'round';\n    } else {\n        ctx.lineWidth = borderWidth;\n        ctx.lineJoin = borderJoinStyle || 'bevel';\n    }\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.stroke();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    if (inner) {\n        clipArc(ctx, element, endAngle);\n    }\n    if (!fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        ctx.stroke();\n    }\n}\nclass ArcElement extends Element {\n    static id = 'arc';\n    static defaults = {\n        borderAlign: 'center',\n        borderColor: '#fff',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: undefined,\n        borderRadius: 0,\n        borderWidth: 2,\n        offset: 0,\n        spacing: 0,\n        angle: undefined,\n        circular: true\n    };\n    static defaultRoutes = {\n        backgroundColor: 'backgroundColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash'\n    };\n    circumference;\n    endAngle;\n    fullCircles;\n    innerRadius;\n    outerRadius;\n    pixelMargin;\n    startAngle;\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.circumference = undefined;\n        this.startAngle = undefined;\n        this.endAngle = undefined;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.pixelMargin = 0;\n        this.fullCircles = 0;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(chartX, chartY, useFinalPosition) {\n        const point = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        const { angle , distance  } = getAngleFromPoint(point, {\n            x: chartX,\n            y: chartY\n        });\n        const { startAngle , endAngle , innerRadius , outerRadius , circumference  } = this.getProps([\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius',\n            'circumference'\n        ], useFinalPosition);\n        const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n        const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n        const nonZeroBetween = _angleBetween(angle, startAngle, endAngle) && startAngle !== endAngle;\n        const betweenAngles = _circumference >= TAU || nonZeroBetween;\n        const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n        return betweenAngles && withinRadius;\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , startAngle , endAngle , innerRadius , outerRadius  } = this.getProps([\n            'x',\n            'y',\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius'\n        ], useFinalPosition);\n        const { offset , spacing  } = this.options;\n        const halfAngle = (startAngle + endAngle) / 2;\n        const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n        return {\n            x: x + Math.cos(halfAngle) * halfRadius,\n            y: y + Math.sin(halfAngle) * halfRadius\n        };\n    }\n    tooltipPosition(useFinalPosition) {\n        return this.getCenterPoint(useFinalPosition);\n    }\n    draw(ctx) {\n        const { options , circumference  } = this;\n        const offset = (options.offset || 0) / 4;\n        const spacing = (options.spacing || 0) / 2;\n        const circular = options.circular;\n        this.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n        this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n        if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n            return;\n        }\n        ctx.save();\n        const halfAngle = (this.startAngle + this.endAngle) / 2;\n        ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n        const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n        const radiusOffset = offset * fix;\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        drawArc(ctx, this, radiusOffset, spacing, circular);\n        drawBorder(ctx, this, radiusOffset, spacing, circular);\n        ctx.restore();\n    }\n}\n\nfunction setStyle(ctx, options, style = options) {\n    ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n    ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n    ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n    ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n    ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n    ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n    ctx.lineTo(target.x, target.y);\n}\n function getLineMethod(options) {\n    if (options.stepped) {\n        return _steppedLineTo;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierCurveTo;\n    }\n    return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n    const count = points.length;\n    const { start: paramsStart = 0 , end: paramsEnd = count - 1  } = params;\n    const { start: segmentStart , end: segmentEnd  } = segment;\n    const start = Math.max(paramsStart, segmentStart);\n    const end = Math.min(paramsEnd, segmentEnd);\n    const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n    return {\n        count,\n        start,\n        loop: segment.loop,\n        ilen: end < start && !outside ? count + end - start : end - start\n    };\n}\n function pathSegment(ctx, line, segment, params) {\n    const { points , options  } = line;\n    const { count , start , loop , ilen  } = pathVars(points, segment, params);\n    const lineMethod = getLineMethod(options);\n    let { move =true , reverse  } = params || {};\n    let i, point, prev;\n    for(i = 0; i <= ilen; ++i){\n        point = points[(start + (reverse ? ilen - i : i)) % count];\n        if (point.skip) {\n            continue;\n        } else if (move) {\n            ctx.moveTo(point.x, point.y);\n            move = false;\n        } else {\n            lineMethod(ctx, prev, point, reverse, options.stepped);\n        }\n        prev = point;\n    }\n    if (loop) {\n        point = points[(start + (reverse ? ilen : 0)) % count];\n        lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    return !!loop;\n}\n function fastPathSegment(ctx, line, segment, params) {\n    const points = line.points;\n    const { count , start , ilen  } = pathVars(points, segment, params);\n    const { move =true , reverse  } = params || {};\n    let avgX = 0;\n    let countX = 0;\n    let i, point, prevX, minY, maxY, lastY;\n    const pointIndex = (index)=>(start + (reverse ? ilen - index : index)) % count;\n    const drawX = ()=>{\n        if (minY !== maxY) {\n            ctx.lineTo(avgX, maxY);\n            ctx.lineTo(avgX, minY);\n            ctx.lineTo(avgX, lastY);\n        }\n    };\n    if (move) {\n        point = points[pointIndex(0)];\n        ctx.moveTo(point.x, point.y);\n    }\n    for(i = 0; i <= ilen; ++i){\n        point = points[pointIndex(i)];\n        if (point.skip) {\n            continue;\n        }\n        const x = point.x;\n        const y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n            } else if (y > maxY) {\n                maxY = y;\n            }\n            avgX = (countX * avgX + x) / ++countX;\n        } else {\n            drawX();\n            ctx.lineTo(x, y);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n        }\n        lastY = y;\n    }\n    drawX();\n}\n function _getSegmentMethod(line) {\n    const opts = line.options;\n    const borderDash = opts.borderDash && opts.borderDash.length;\n    const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n    return useFastPath ? fastPathSegment : pathSegment;\n}\n function _getInterpolationMethod(options) {\n    if (options.stepped) {\n        return _steppedInterpolation;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierInterpolation;\n    }\n    return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n    let path = line._path;\n    if (!path) {\n        path = line._path = new Path2D();\n        if (line.path(path, start, count)) {\n            path.closePath();\n        }\n    }\n    setStyle(ctx, line.options);\n    ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n    const { segments , options  } = line;\n    const segmentMethod = _getSegmentMethod(line);\n    for (const segment of segments){\n        setStyle(ctx, options, segment.style);\n        ctx.beginPath();\n        if (segmentMethod(ctx, line, segment, {\n            start,\n            end: start + count - 1\n        })) {\n            ctx.closePath();\n        }\n        ctx.stroke();\n    }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n    if (usePath2D && !line.options.segment) {\n        strokePathWithCache(ctx, line, start, count);\n    } else {\n        strokePathDirect(ctx, line, start, count);\n    }\n}\nclass LineElement extends Element {\n    static id = 'line';\n static defaults = {\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: 'miter',\n        borderWidth: 3,\n        capBezierPoints: true,\n        cubicInterpolationMode: 'default',\n        fill: false,\n        spanGaps: false,\n        stepped: false,\n        tension: 0\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash' && name !== 'fill'\n    };\n    constructor(cfg){\n        super();\n        this.animated = true;\n        this.options = undefined;\n        this._chart = undefined;\n        this._loop = undefined;\n        this._fullLoop = undefined;\n        this._path = undefined;\n        this._points = undefined;\n        this._segments = undefined;\n        this._decimated = false;\n        this._pointsUpdated = false;\n        this._datasetIndex = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    updateControlPoints(chartArea, indexAxis) {\n        const options = this.options;\n        if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n            const loop = options.spanGaps ? this._loop : this._fullLoop;\n            _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n            this._pointsUpdated = true;\n        }\n    }\n    set points(points) {\n        this._points = points;\n        delete this._segments;\n        delete this._path;\n        this._pointsUpdated = false;\n    }\n    get points() {\n        return this._points;\n    }\n    get segments() {\n        return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n    }\n first() {\n        const segments = this.segments;\n        const points = this.points;\n        return segments.length && points[segments[0].start];\n    }\n last() {\n        const segments = this.segments;\n        const points = this.points;\n        const count = segments.length;\n        return count && points[segments[count - 1].end];\n    }\n interpolate(point, property) {\n        const options = this.options;\n        const value = point[property];\n        const points = this.points;\n        const segments = _boundSegments(this, {\n            property,\n            start: value,\n            end: value\n        });\n        if (!segments.length) {\n            return;\n        }\n        const result = [];\n        const _interpolate = _getInterpolationMethod(options);\n        let i, ilen;\n        for(i = 0, ilen = segments.length; i < ilen; ++i){\n            const { start , end  } = segments[i];\n            const p1 = points[start];\n            const p2 = points[end];\n            if (p1 === p2) {\n                result.push(p1);\n                continue;\n            }\n            const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n            const interpolated = _interpolate(p1, p2, t, options.stepped);\n            interpolated[property] = point[property];\n            result.push(interpolated);\n        }\n        return result.length === 1 ? result[0] : result;\n    }\n pathSegment(ctx, segment, params) {\n        const segmentMethod = _getSegmentMethod(this);\n        return segmentMethod(ctx, this, segment, params);\n    }\n path(ctx, start, count) {\n        const segments = this.segments;\n        const segmentMethod = _getSegmentMethod(this);\n        let loop = this._loop;\n        start = start || 0;\n        count = count || this.points.length - start;\n        for (const segment of segments){\n            loop &= segmentMethod(ctx, this, segment, {\n                start,\n                end: start + count - 1\n            });\n        }\n        return !!loop;\n    }\n draw(ctx, chartArea, start, count) {\n        const options = this.options || {};\n        const points = this.points || [];\n        if (points.length && options.borderWidth) {\n            ctx.save();\n            draw(ctx, this, start, count);\n            ctx.restore();\n        }\n        if (this.animated) {\n            this._pointsUpdated = false;\n            this._path = undefined;\n        }\n    }\n}\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n    const options = el.options;\n    const { [axis]: value  } = el.getProps([\n        axis\n    ], useFinalPosition);\n    return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\nclass PointElement extends Element {\n    static id = 'point';\n    parsed;\n    skip;\n    stop;\n    /**\n   * @type {any}\n   */ static defaults = {\n        borderWidth: 1,\n        hitRadius: 1,\n        hoverBorderWidth: 1,\n        hoverRadius: 4,\n        pointStyle: 'circle',\n        radius: 3,\n        rotation: 0\n    };\n    /**\n   * @type {any}\n   */ static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.parsed = undefined;\n        this.skip = undefined;\n        this.stop = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        const options = this.options;\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange$1(this, mouseX, 'x', useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange$1(this, mouseY, 'y', useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    size(options) {\n        options = options || this.options || {};\n        let radius = options.radius || 0;\n        radius = Math.max(radius, radius && options.hoverRadius || 0);\n        const borderWidth = radius && options.borderWidth || 0;\n        return (radius + borderWidth) * 2;\n    }\n    draw(ctx, area) {\n        const options = this.options;\n        if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n            return;\n        }\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.fillStyle = options.backgroundColor;\n        drawPoint(ctx, options, this.x, this.y);\n    }\n    getRange() {\n        const options = this.options || {};\n        // @ts-expect-error Fallbacks should never be hit in practice\n        return options.radius + options.hitRadius;\n    }\n}\n\nfunction getBarBounds(bar, useFinalPosition) {\n    const { x , y , base , width , height  } =  bar.getProps([\n        'x',\n        'y',\n        'base',\n        'width',\n        'height'\n    ], useFinalPosition);\n    let left, right, top, bottom, half;\n    if (bar.horizontal) {\n        half = height / 2;\n        left = Math.min(x, base);\n        right = Math.max(x, base);\n        top = y - half;\n        bottom = y + half;\n    } else {\n        half = width / 2;\n        left = x - half;\n        right = x + half;\n        top = Math.min(y, base);\n        bottom = Math.max(y, base);\n    }\n    return {\n        left,\n        top,\n        right,\n        bottom\n    };\n}\nfunction skipOrLimit(skip, value, min, max) {\n    return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n    const value = bar.options.borderWidth;\n    const skip = bar.borderSkipped;\n    const o = toTRBL(value);\n    return {\n        t: skipOrLimit(skip.top, o.top, 0, maxH),\n        r: skipOrLimit(skip.right, o.right, 0, maxW),\n        b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n        l: skipOrLimit(skip.left, o.left, 0, maxW)\n    };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n    const { enableBorderRadius  } = bar.getProps([\n        'enableBorderRadius'\n    ]);\n    const value = bar.options.borderRadius;\n    const o = toTRBLCorners(value);\n    const maxR = Math.min(maxW, maxH);\n    const skip = bar.borderSkipped;\n    const enableBorder = enableBorderRadius || isObject(value);\n    return {\n        topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n        topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n        bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n        bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n    };\n}\nfunction boundingRects(bar) {\n    const bounds = getBarBounds(bar);\n    const width = bounds.right - bounds.left;\n    const height = bounds.bottom - bounds.top;\n    const border = parseBorderWidth(bar, width / 2, height / 2);\n    const radius = parseBorderRadius(bar, width / 2, height / 2);\n    return {\n        outer: {\n            x: bounds.left,\n            y: bounds.top,\n            w: width,\n            h: height,\n            radius\n        },\n        inner: {\n            x: bounds.left + border.l,\n            y: bounds.top + border.t,\n            w: width - border.l - border.r,\n            h: height - border.t - border.b,\n            radius: {\n                topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n                topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n                bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n                bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n            }\n        }\n    };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n    const skipX = x === null;\n    const skipY = y === null;\n    const skipBoth = skipX && skipY;\n    const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n    return bounds && (skipX || _isBetween(x, bounds.left, bounds.right)) && (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n    return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n function addNormalRectPath(ctx, rect) {\n    ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n    const x = rect.x !== refRect.x ? -amount : 0;\n    const y = rect.y !== refRect.y ? -amount : 0;\n    const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n    const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n    return {\n        x: rect.x + x,\n        y: rect.y + y,\n        w: rect.w + w,\n        h: rect.h + h,\n        radius: rect.radius\n    };\n}\nclass BarElement extends Element {\n    static id = 'bar';\n static defaults = {\n        borderSkipped: 'start',\n        borderWidth: 0,\n        borderRadius: 0,\n        inflateAmount: 'auto',\n        pointStyle: undefined\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.horizontal = undefined;\n        this.base = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.inflateAmount = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    draw(ctx) {\n        const { inflateAmount , options: { borderColor , backgroundColor  }  } = this;\n        const { inner , outer  } = boundingRects(this);\n        const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n        ctx.save();\n        if (outer.w !== inner.w || outer.h !== inner.h) {\n            ctx.beginPath();\n            addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n            ctx.clip();\n            addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n            ctx.fillStyle = borderColor;\n            ctx.fill('evenodd');\n        }\n        ctx.beginPath();\n        addRectPath(ctx, inflateRect(inner, inflateAmount));\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n        ctx.restore();\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        return inRange(this, mouseX, mouseY, useFinalPosition);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange(this, mouseX, null, useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange(this, null, mouseY, useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , base , horizontal  } =  this.getProps([\n            'x',\n            'y',\n            'base',\n            'horizontal'\n        ], useFinalPosition);\n        return {\n            x: horizontal ? (x + base) / 2 : x,\n            y: horizontal ? y : (y + base) / 2\n        };\n    }\n    getRange(axis) {\n        return axis === 'x' ? this.width / 2 : this.height / 2;\n    }\n}\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nBarElement: BarElement,\nLineElement: LineElement,\nPointElement: PointElement\n});\n\nconst BORDER_COLORS = [\n    'rgb(54, 162, 235)',\n    'rgb(255, 99, 132)',\n    'rgb(255, 159, 64)',\n    'rgb(255, 205, 86)',\n    'rgb(75, 192, 192)',\n    'rgb(153, 102, 255)',\n    'rgb(201, 203, 207)' // grey\n];\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map((color)=>color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\nfunction getBorderColor(i) {\n    return BORDER_COLORS[i % BORDER_COLORS.length];\n}\nfunction getBackgroundColor(i) {\n    return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\nfunction colorizeDefaultDataset(dataset, i) {\n    dataset.borderColor = getBorderColor(i);\n    dataset.backgroundColor = getBackgroundColor(i);\n    return ++i;\n}\nfunction colorizeDoughnutDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBorderColor(i++));\n    return i;\n}\nfunction colorizePolarAreaDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBackgroundColor(i++));\n    return i;\n}\nfunction getColorizer(chart) {\n    let i = 0;\n    return (dataset, datasetIndex)=>{\n        const controller = chart.getDatasetMeta(datasetIndex).controller;\n        if (controller instanceof DoughnutController) {\n            i = colorizeDoughnutDataset(dataset, i);\n        } else if (controller instanceof PolarAreaController) {\n            i = colorizePolarAreaDataset(dataset, i);\n        } else if (controller) {\n            i = colorizeDefaultDataset(dataset, i);\n        }\n    };\n}\nfunction containsColorsDefinitions(descriptors) {\n    let k;\n    for(k in descriptors){\n        if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction containsColorsDefinition(descriptor) {\n    return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\nvar plugin_colors = {\n    id: 'colors',\n    defaults: {\n        enabled: true,\n        forceOverride: false\n    },\n    beforeLayout (chart, _args, options) {\n        if (!options.enabled) {\n            return;\n        }\n        const { data: { datasets  } , options: chartOptions  } = chart.config;\n        const { elements  } = chartOptions;\n        if (!options.forceOverride && (containsColorsDefinitions(datasets) || containsColorsDefinition(chartOptions) || elements && containsColorsDefinitions(elements))) {\n            return;\n        }\n        const colorizer = getColorizer(chart);\n        datasets.forEach(colorizer);\n    }\n};\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n const samples = options.samples || availableWidth;\n    if (samples >= count) {\n        return data.slice(start, start + count);\n    }\n    const decimated = [];\n    const bucketWidth = (count - 2) / (samples - 2);\n    let sampledIndex = 0;\n    const endIndex = start + count - 1;\n    let a = start;\n    let i, maxAreaPoint, maxArea, area, nextA;\n    decimated[sampledIndex++] = data[a];\n    for(i = 0; i < samples - 2; i++){\n        let avgX = 0;\n        let avgY = 0;\n        let j;\n        const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n        const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n        const avgRangeLength = avgRangeEnd - avgRangeStart;\n        for(j = avgRangeStart; j < avgRangeEnd; j++){\n            avgX += data[j].x;\n            avgY += data[j].y;\n        }\n        avgX /= avgRangeLength;\n        avgY /= avgRangeLength;\n        const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n        const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n        const { x: pointAx , y: pointAy  } = data[a];\n        maxArea = area = -1;\n        for(j = rangeOffs; j < rangeTo; j++){\n            area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n            if (area > maxArea) {\n                maxArea = area;\n                maxAreaPoint = data[j];\n                nextA = j;\n            }\n        }\n        decimated[sampledIndex++] = maxAreaPoint;\n        a = nextA;\n    }\n    decimated[sampledIndex++] = data[endIndex];\n    return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n    let avgX = 0;\n    let countX = 0;\n    let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n    const decimated = [];\n    const endIndex = start + count - 1;\n    const xMin = data[start].x;\n    const xMax = data[endIndex].x;\n    const dx = xMax - xMin;\n    for(i = start; i < start + count; ++i){\n        point = data[i];\n        x = (point.x - xMin) / dx * availableWidth;\n        y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n                minIndex = i;\n            } else if (y > maxY) {\n                maxY = y;\n                maxIndex = i;\n            }\n            avgX = (countX * avgX + point.x) / ++countX;\n        } else {\n            const lastIndex = i - 1;\n            if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n                const intermediateIndex1 = Math.min(minIndex, maxIndex);\n                const intermediateIndex2 = Math.max(minIndex, maxIndex);\n                if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex1],\n                        x: avgX\n                    });\n                }\n                if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex2],\n                        x: avgX\n                    });\n                }\n            }\n            if (i > 0 && lastIndex !== startIndex) {\n                decimated.push(data[lastIndex]);\n            }\n            decimated.push(point);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n            minIndex = maxIndex = startIndex = i;\n        }\n    }\n    return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n    if (dataset._decimated) {\n        const data = dataset._data;\n        delete dataset._decimated;\n        delete dataset._data;\n        Object.defineProperty(dataset, 'data', {\n            configurable: true,\n            enumerable: true,\n            writable: true,\n            value: data\n        });\n    }\n}\nfunction cleanDecimatedData(chart) {\n    chart.data.datasets.forEach((dataset)=>{\n        cleanDecimatedDataset(dataset);\n    });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n    const pointCount = points.length;\n    let start = 0;\n    let count;\n    const { iScale  } = meta;\n    const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n    if (minDefined) {\n        start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n    }\n    if (maxDefined) {\n        count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n    } else {\n        count = pointCount - start;\n    }\n    return {\n        start,\n        count\n    };\n}\nvar plugin_decimation = {\n    id: 'decimation',\n    defaults: {\n        algorithm: 'min-max',\n        enabled: false\n    },\n    beforeElementsUpdate: (chart, args, options)=>{\n        if (!options.enabled) {\n            cleanDecimatedData(chart);\n            return;\n        }\n        const availableWidth = chart.width;\n        chart.data.datasets.forEach((dataset, datasetIndex)=>{\n            const { _data , indexAxis  } = dataset;\n            const meta = chart.getDatasetMeta(datasetIndex);\n            const data = _data || dataset.data;\n            if (resolve([\n                indexAxis,\n                chart.options.indexAxis\n            ]) === 'y') {\n                return;\n            }\n            if (!meta.controller.supportsDecimation) {\n                return;\n            }\n            const xAxis = chart.scales[meta.xAxisID];\n            if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n                return;\n            }\n            if (chart.options.parsing) {\n                return;\n            }\n            let { start , count  } = getStartAndCountOfVisiblePointsSimplified(meta, data);\n            const threshold = options.threshold || 4 * availableWidth;\n            if (count <= threshold) {\n                cleanDecimatedDataset(dataset);\n                return;\n            }\n            if (isNullOrUndef(_data)) {\n                dataset._data = data;\n                delete dataset.data;\n                Object.defineProperty(dataset, 'data', {\n                    configurable: true,\n                    enumerable: true,\n                    get: function() {\n                        return this._decimated;\n                    },\n                    set: function(d) {\n                        this._data = d;\n                    }\n                });\n            }\n            let decimated;\n            switch(options.algorithm){\n                case 'lttb':\n                    decimated = lttbDecimation(data, start, count, availableWidth, options);\n                    break;\n                case 'min-max':\n                    decimated = minMaxDecimation(data, start, count, availableWidth);\n                    break;\n                default:\n                    throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n            }\n            dataset._decimated = decimated;\n        });\n    },\n    destroy (chart) {\n        cleanDecimatedData(chart);\n    }\n};\n\nfunction _segments(line, target, property) {\n    const segments = line.segments;\n    const points = line.points;\n    const tpoints = target.points;\n    const parts = [];\n    for (const segment of segments){\n        let { start , end  } = segment;\n        end = _findSegmentEnd(start, end, points);\n        const bounds = _getBounds(property, points[start], points[end], segment.loop);\n        if (!target.segments) {\n            parts.push({\n                source: segment,\n                target: bounds,\n                start: points[start],\n                end: points[end]\n            });\n            continue;\n        }\n        const targetSegments = _boundSegments(target, bounds);\n        for (const tgt of targetSegments){\n            const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n            const fillSources = _boundSegment(segment, points, subBounds);\n            for (const fillSource of fillSources){\n                parts.push({\n                    source: fillSource,\n                    target: tgt,\n                    start: {\n                        [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n                    },\n                    end: {\n                        [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n                    }\n                });\n            }\n        }\n    }\n    return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n    if (loop) {\n        return;\n    }\n    let start = first[property];\n    let end = last[property];\n    if (property === 'angle') {\n        start = _normalizeAngle(start);\n        end = _normalizeAngle(end);\n    }\n    return {\n        property,\n        start,\n        end\n    };\n}\nfunction _pointsFromSegments(boundary, line) {\n    const { x =null , y =null  } = boundary || {};\n    const linePoints = line.points;\n    const points = [];\n    line.segments.forEach(({ start , end  })=>{\n        end = _findSegmentEnd(start, end, linePoints);\n        const first = linePoints[start];\n        const last = linePoints[end];\n        if (y !== null) {\n            points.push({\n                x: first.x,\n                y\n            });\n            points.push({\n                x: last.x,\n                y\n            });\n        } else if (x !== null) {\n            points.push({\n                x,\n                y: first.y\n            });\n            points.push({\n                x,\n                y: last.y\n            });\n        }\n    });\n    return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n    for(; end > start; end--){\n        const point = points[end];\n        if (!isNaN(point.x) && !isNaN(point.y)) {\n            break;\n        }\n    }\n    return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n    if (a && b) {\n        return fn(a[prop], b[prop]);\n    }\n    return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n    let points = [];\n    let _loop = false;\n    if (isArray(boundary)) {\n        _loop = true;\n        points = boundary;\n    } else {\n        points = _pointsFromSegments(boundary, line);\n    }\n    return points.length ? new LineElement({\n        points,\n        options: {\n            tension: 0\n        },\n        _loop,\n        _fullLoop: _loop\n    }) : null;\n}\nfunction _shouldApplyFill(source) {\n    return source && source.fill !== false;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n    const source = sources[index];\n    let fill = source.fill;\n    const visited = [\n        index\n    ];\n    let target;\n    if (!propagate) {\n        return fill;\n    }\n    while(fill !== false && visited.indexOf(fill) === -1){\n        if (!isNumberFinite(fill)) {\n            return fill;\n        }\n        target = sources[fill];\n        if (!target) {\n            return false;\n        }\n        if (target.visible) {\n            return fill;\n        }\n        visited.push(fill);\n        fill = target.fill;\n    }\n    return false;\n}\n function _decodeFill(line, index, count) {\n     const fill = parseFillOption(line);\n    if (isObject(fill)) {\n        return isNaN(fill.value) ? false : fill;\n    }\n    let target = parseFloat(fill);\n    if (isNumberFinite(target) && Math.floor(target) === target) {\n        return decodeTargetIndex(fill[0], index, target, count);\n    }\n    return [\n        'origin',\n        'start',\n        'end',\n        'stack',\n        'shape'\n    ].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n    if (firstCh === '-' || firstCh === '+') {\n        target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n        return false;\n    }\n    return target;\n}\n function _getTargetPixel(fill, scale) {\n    let pixel = null;\n    if (fill === 'start') {\n        pixel = scale.bottom;\n    } else if (fill === 'end') {\n        pixel = scale.top;\n    } else if (isObject(fill)) {\n        pixel = scale.getPixelForValue(fill.value);\n    } else if (scale.getBasePixel) {\n        pixel = scale.getBasePixel();\n    }\n    return pixel;\n}\n function _getTargetValue(fill, scale, startValue) {\n    let value;\n    if (fill === 'start') {\n        value = startValue;\n    } else if (fill === 'end') {\n        value = scale.options.reverse ? scale.min : scale.max;\n    } else if (isObject(fill)) {\n        value = fill.value;\n    } else {\n        value = scale.getBaseValue();\n    }\n    return value;\n}\n function parseFillOption(line) {\n    const options = line.options;\n    const fillOption = options.fill;\n    let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n    if (fill === undefined) {\n        fill = !!options.backgroundColor;\n    }\n    if (fill === false || fill === null) {\n        return false;\n    }\n    if (fill === true) {\n        return 'origin';\n    }\n    return fill;\n}\n\nfunction _buildStackLine(source) {\n    const { scale , index , line  } = source;\n    const points = [];\n    const segments = line.segments;\n    const sourcePoints = line.points;\n    const linesBelow = getLinesBelow(scale, index);\n    linesBelow.push(_createBoundaryLine({\n        x: null,\n        y: scale.bottom\n    }, line));\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        for(let j = segment.start; j <= segment.end; j++){\n            addPointsBelow(points, sourcePoints[j], linesBelow);\n        }\n    }\n    return new LineElement({\n        points,\n        options: {}\n    });\n}\n function getLinesBelow(scale, index) {\n    const below = [];\n    const metas = scale.getMatchingVisibleMetas('line');\n    for(let i = 0; i < metas.length; i++){\n        const meta = metas[i];\n        if (meta.index === index) {\n            break;\n        }\n        if (!meta.hidden) {\n            below.unshift(meta.dataset);\n        }\n    }\n    return below;\n}\n function addPointsBelow(points, sourcePoint, linesBelow) {\n    const postponed = [];\n    for(let j = 0; j < linesBelow.length; j++){\n        const line = linesBelow[j];\n        const { first , last , point  } = findPoint(line, sourcePoint, 'x');\n        if (!point || first && last) {\n            continue;\n        }\n        if (first) {\n            postponed.unshift(point);\n        } else {\n            points.push(point);\n            if (!last) {\n                break;\n            }\n        }\n    }\n    points.push(...postponed);\n}\n function findPoint(line, sourcePoint, property) {\n    const point = line.interpolate(sourcePoint, property);\n    if (!point) {\n        return {};\n    }\n    const pointValue = point[property];\n    const segments = line.segments;\n    const linePoints = line.points;\n    let first = false;\n    let last = false;\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        const firstValue = linePoints[segment.start][property];\n        const lastValue = linePoints[segment.end][property];\n        if (_isBetween(pointValue, firstValue, lastValue)) {\n            first = pointValue === firstValue;\n            last = pointValue === lastValue;\n            break;\n        }\n    }\n    return {\n        first,\n        last,\n        point\n    };\n}\n\nclass simpleArc {\n    constructor(opts){\n        this.x = opts.x;\n        this.y = opts.y;\n        this.radius = opts.radius;\n    }\n    pathSegment(ctx, bounds, opts) {\n        const { x , y , radius  } = this;\n        bounds = bounds || {\n            start: 0,\n            end: TAU\n        };\n        ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n        return !opts.bounds;\n    }\n    interpolate(point) {\n        const { x , y , radius  } = this;\n        const angle = point.angle;\n        return {\n            x: x + Math.cos(angle) * radius,\n            y: y + Math.sin(angle) * radius,\n            angle\n        };\n    }\n}\n\nfunction _getTarget(source) {\n    const { chart , fill , line  } = source;\n    if (isNumberFinite(fill)) {\n        return getLineByIndex(chart, fill);\n    }\n    if (fill === 'stack') {\n        return _buildStackLine(source);\n    }\n    if (fill === 'shape') {\n        return true;\n    }\n    const boundary = computeBoundary(source);\n    if (boundary instanceof simpleArc) {\n        return boundary;\n    }\n    return _createBoundaryLine(boundary, line);\n}\n function getLineByIndex(chart, index) {\n    const meta = chart.getDatasetMeta(index);\n    const visible = meta && chart.isDatasetVisible(index);\n    return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n    const scale = source.scale || {};\n    if (scale.getPointPositionForValue) {\n        return computeCircularBoundary(source);\n    }\n    return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n    const { scale ={} , fill  } = source;\n    const pixel = _getTargetPixel(fill, scale);\n    if (isNumberFinite(pixel)) {\n        const horizontal = scale.isHorizontal();\n        return {\n            x: horizontal ? pixel : null,\n            y: horizontal ? null : pixel\n        };\n    }\n    return null;\n}\nfunction computeCircularBoundary(source) {\n    const { scale , fill  } = source;\n    const options = scale.options;\n    const length = scale.getLabels().length;\n    const start = options.reverse ? scale.max : scale.min;\n    const value = _getTargetValue(fill, scale, start);\n    const target = [];\n    if (options.grid.circular) {\n        const center = scale.getPointPositionForValue(0, start);\n        return new simpleArc({\n            x: center.x,\n            y: center.y,\n            radius: scale.getDistanceFromCenterForValue(value)\n        });\n    }\n    for(let i = 0; i < length; ++i){\n        target.push(scale.getPointPositionForValue(i, value));\n    }\n    return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n    const target = _getTarget(source);\n    const { line , scale , axis  } = source;\n    const lineOpts = line.options;\n    const fillOption = lineOpts.fill;\n    const color = lineOpts.backgroundColor;\n    const { above =color , below =color  } = fillOption || {};\n    if (target && line.points.length) {\n        clipArea(ctx, area);\n        doFill(ctx, {\n            line,\n            target,\n            above,\n            below,\n            area,\n            scale,\n            axis\n        });\n        unclipArea(ctx);\n    }\n}\nfunction doFill(ctx, cfg) {\n    const { line , target , above , below , area , scale  } = cfg;\n    const property = line._loop ? 'angle' : cfg.axis;\n    ctx.save();\n    if (property === 'x' && below !== above) {\n        clipVertical(ctx, target, area.top);\n        fill(ctx, {\n            line,\n            target,\n            color: above,\n            scale,\n            property\n        });\n        ctx.restore();\n        ctx.save();\n        clipVertical(ctx, target, area.bottom);\n    }\n    fill(ctx, {\n        line,\n        target,\n        color: below,\n        scale,\n        property\n    });\n    ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n    const { segments , points  } = target;\n    let first = true;\n    let lineLoop = false;\n    ctx.beginPath();\n    for (const segment of segments){\n        const { start , end  } = segment;\n        const firstPoint = points[start];\n        const lastPoint = points[_findSegmentEnd(start, end, points)];\n        if (first) {\n            ctx.moveTo(firstPoint.x, firstPoint.y);\n            first = false;\n        } else {\n            ctx.lineTo(firstPoint.x, clipY);\n            ctx.lineTo(firstPoint.x, firstPoint.y);\n        }\n        lineLoop = !!target.pathSegment(ctx, segment, {\n            move: lineLoop\n        });\n        if (lineLoop) {\n            ctx.closePath();\n        } else {\n            ctx.lineTo(lastPoint.x, clipY);\n        }\n    }\n    ctx.lineTo(target.first().x, clipY);\n    ctx.closePath();\n    ctx.clip();\n}\nfunction fill(ctx, cfg) {\n    const { line , target , property , color , scale  } = cfg;\n    const segments = _segments(line, target, property);\n    for (const { source: src , target: tgt , start , end  } of segments){\n        const { style: { backgroundColor =color  } = {}  } = src;\n        const notShape = target !== true;\n        ctx.save();\n        ctx.fillStyle = backgroundColor;\n        clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n        ctx.beginPath();\n        const lineLoop = !!line.pathSegment(ctx, src);\n        let loop;\n        if (notShape) {\n            if (lineLoop) {\n                ctx.closePath();\n            } else {\n                interpolatedLineTo(ctx, target, end, property);\n            }\n            const targetLoop = !!target.pathSegment(ctx, tgt, {\n                move: lineLoop,\n                reverse: true\n            });\n            loop = lineLoop && targetLoop;\n            if (!loop) {\n                interpolatedLineTo(ctx, target, start, property);\n            }\n        }\n        ctx.closePath();\n        ctx.fill(loop ? 'evenodd' : 'nonzero');\n        ctx.restore();\n    }\n}\nfunction clipBounds(ctx, scale, bounds) {\n    const { top , bottom  } = scale.chart.chartArea;\n    const { property , start , end  } = bounds || {};\n    if (property === 'x') {\n        ctx.beginPath();\n        ctx.rect(start, top, end - start, bottom - top);\n        ctx.clip();\n    }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n    const interpolatedPoint = target.interpolate(point, property);\n    if (interpolatedPoint) {\n        ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n    }\n}\n\nvar index = {\n    id: 'filler',\n    afterDatasetsUpdate (chart, _args, options) {\n        const count = (chart.data.datasets || []).length;\n        const sources = [];\n        let meta, i, line, source;\n        for(i = 0; i < count; ++i){\n            meta = chart.getDatasetMeta(i);\n            line = meta.dataset;\n            source = null;\n            if (line && line.options && line instanceof LineElement) {\n                source = {\n                    visible: chart.isDatasetVisible(i),\n                    index: i,\n                    fill: _decodeFill(line, i, count),\n                    chart,\n                    axis: meta.controller.options.indexAxis,\n                    scale: meta.vScale,\n                    line\n                };\n            }\n            meta.$filler = source;\n            sources.push(source);\n        }\n        for(i = 0; i < count; ++i){\n            source = sources[i];\n            if (!source || source.fill === false) {\n                continue;\n            }\n            source.fill = _resolveTarget(sources, i, options.propagate);\n        }\n    },\n    beforeDraw (chart, _args, options) {\n        const draw = options.drawTime === 'beforeDraw';\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        const area = chart.chartArea;\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (!source) {\n                continue;\n            }\n            source.line.updateControlPoints(area, source.axis);\n            if (draw && source.fill) {\n                _drawfill(chart.ctx, source, area);\n            }\n        }\n    },\n    beforeDatasetsDraw (chart, _args, options) {\n        if (options.drawTime !== 'beforeDatasetsDraw') {\n            return;\n        }\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (_shouldApplyFill(source)) {\n                _drawfill(chart.ctx, source, chart.chartArea);\n            }\n        }\n    },\n    beforeDatasetDraw (chart, args, options) {\n        const source = args.meta.$filler;\n        if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n            return;\n        }\n        _drawfill(chart.ctx, source, chart.chartArea);\n    },\n    defaults: {\n        propagate: true,\n        drawTime: 'beforeDatasetDraw'\n    }\n};\n\nconst getBoxSize = (labelOpts, fontSize)=>{\n    let { boxHeight =fontSize , boxWidth =fontSize  } = labelOpts;\n    if (labelOpts.usePointStyle) {\n        boxHeight = Math.min(boxHeight, fontSize);\n        boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n    }\n    return {\n        boxWidth,\n        boxHeight,\n        itemHeight: Math.max(fontSize, boxHeight)\n    };\n};\nconst itemsEqual = (a, b)=>a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n constructor(config){\n        super();\n        this._added = false;\n        this.legendHitBoxes = [];\n this._hoveredItem = null;\n        this.doughnutMode = false;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this.legendItems = undefined;\n        this.columnSizes = undefined;\n        this.lineWidths = undefined;\n        this.maxHeight = undefined;\n        this.maxWidth = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this._margins = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight, margins) {\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins;\n        this.setDimensions();\n        this.buildLabels();\n        this.fit();\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = this._margins.left;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = this._margins.top;\n            this.bottom = this.height;\n        }\n    }\n    buildLabels() {\n        const labelOpts = this.options.labels || {};\n        let legendItems = callback(labelOpts.generateLabels, [\n            this.chart\n        ], this) || [];\n        if (labelOpts.filter) {\n            legendItems = legendItems.filter((item)=>labelOpts.filter(item, this.chart.data));\n        }\n        if (labelOpts.sort) {\n            legendItems = legendItems.sort((a, b)=>labelOpts.sort(a, b, this.chart.data));\n        }\n        if (this.options.reverse) {\n            legendItems.reverse();\n        }\n        this.legendItems = legendItems;\n    }\n    fit() {\n        const { options , ctx  } = this;\n        if (!options.display) {\n            this.width = this.height = 0;\n            return;\n        }\n        const labelOpts = options.labels;\n        const labelFont = toFont(labelOpts.font);\n        const fontSize = labelFont.size;\n        const titleHeight = this._computeTitleHeight();\n        const { boxWidth , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        let width, height;\n        ctx.font = labelFont.string;\n        if (this.isHorizontal()) {\n            width = this.maxWidth;\n            height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n        } else {\n            height = this.maxHeight;\n            width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n        }\n        this.width = Math.min(width, options.maxWidth || this.maxWidth);\n        this.height = Math.min(height, options.maxHeight || this.maxHeight);\n    }\n _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n        const { ctx , maxWidth , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const lineWidths = this.lineWidths = [\n            0\n        ];\n        const lineHeight = itemHeight + padding;\n        let totalHeight = titleHeight;\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        let row = -1;\n        let top = -lineHeight;\n        this.legendItems.forEach((legendItem, i)=>{\n            const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n            if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n                totalHeight += lineHeight;\n                lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n                top += lineHeight;\n                row++;\n            }\n            hitboxes[i] = {\n                left: 0,\n                top,\n                row,\n                width: itemWidth,\n                height: itemHeight\n            };\n            lineWidths[lineWidths.length - 1] += itemWidth + padding;\n        });\n        return totalHeight;\n    }\n    _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n        const { ctx , maxHeight , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const columnSizes = this.columnSizes = [];\n        const heightLimit = maxHeight - titleHeight;\n        let totalWidth = padding;\n        let currentColWidth = 0;\n        let currentColHeight = 0;\n        let left = 0;\n        let col = 0;\n        this.legendItems.forEach((legendItem, i)=>{\n            const { itemWidth , itemHeight  } = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n            if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n                totalWidth += currentColWidth + padding;\n                columnSizes.push({\n                    width: currentColWidth,\n                    height: currentColHeight\n                });\n                left += currentColWidth + padding;\n                col++;\n                currentColWidth = currentColHeight = 0;\n            }\n            hitboxes[i] = {\n                left,\n                top: currentColHeight,\n                col,\n                width: itemWidth,\n                height: itemHeight\n            };\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight + padding;\n        });\n        totalWidth += currentColWidth;\n        columnSizes.push({\n            width: currentColWidth,\n            height: currentColHeight\n        });\n        return totalWidth;\n    }\n    adjustHitBoxes() {\n        if (!this.options.display) {\n            return;\n        }\n        const titleHeight = this._computeTitleHeight();\n        const { legendHitBoxes: hitboxes , options: { align , labels: { padding  } , rtl  }  } = this;\n        const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n        if (this.isHorizontal()) {\n            let row = 0;\n            let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n            for (const hitbox of hitboxes){\n                if (row !== hitbox.row) {\n                    row = hitbox.row;\n                    left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n                }\n                hitbox.top += this.top + titleHeight + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n                left += hitbox.width + padding;\n            }\n        } else {\n            let col = 0;\n            let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n            for (const hitbox of hitboxes){\n                if (hitbox.col !== col) {\n                    col = hitbox.col;\n                    top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n                }\n                hitbox.top = top;\n                hitbox.left += this.left + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n                top += hitbox.height + padding;\n            }\n        }\n    }\n    isHorizontal() {\n        return this.options.position === 'top' || this.options.position === 'bottom';\n    }\n    draw() {\n        if (this.options.display) {\n            const ctx = this.ctx;\n            clipArea(ctx, this);\n            this._draw();\n            unclipArea(ctx);\n        }\n    }\n _draw() {\n        const { options: opts , columnSizes , lineWidths , ctx  } = this;\n        const { align , labels: labelOpts  } = opts;\n        const defaultColor = defaults.color;\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const labelFont = toFont(labelOpts.font);\n        const { padding  } = labelOpts;\n        const fontSize = labelFont.size;\n        const halfFontSize = fontSize / 2;\n        let cursor;\n        this.drawTitle();\n        ctx.textAlign = rtlHelper.textAlign('left');\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.font = labelFont.string;\n        const { boxWidth , boxHeight , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        const drawLegendBox = function(x, y, legendItem) {\n            if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n                return;\n            }\n            ctx.save();\n            const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n            ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n            ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n            ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n            ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n            ctx.lineWidth = lineWidth;\n            ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n            ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n            if (labelOpts.usePointStyle) {\n                const drawOptions = {\n                    radius: boxHeight * Math.SQRT2 / 2,\n                    pointStyle: legendItem.pointStyle,\n                    rotation: legendItem.rotation,\n                    borderWidth: lineWidth\n                };\n                const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n                const centerY = y + halfFontSize;\n                drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n            } else {\n                const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n                const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n                const borderRadius = toTRBLCorners(legendItem.borderRadius);\n                ctx.beginPath();\n                if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                    addRoundedRectPath(ctx, {\n                        x: xBoxLeft,\n                        y: yBoxTop,\n                        w: boxWidth,\n                        h: boxHeight,\n                        radius: borderRadius\n                    });\n                } else {\n                    ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n                }\n                ctx.fill();\n                if (lineWidth !== 0) {\n                    ctx.stroke();\n                }\n            }\n            ctx.restore();\n        };\n        const fillText = function(x, y, legendItem) {\n            renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n                strikethrough: legendItem.hidden,\n                textAlign: rtlHelper.textAlign(legendItem.textAlign)\n            });\n        };\n        const isHorizontal = this.isHorizontal();\n        const titleHeight = this._computeTitleHeight();\n        if (isHorizontal) {\n            cursor = {\n                x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n                y: this.top + padding + titleHeight,\n                line: 0\n            };\n        } else {\n            cursor = {\n                x: this.left + padding,\n                y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n                line: 0\n            };\n        }\n        overrideTextDirection(this.ctx, opts.textDirection);\n        const lineHeight = itemHeight + padding;\n        this.legendItems.forEach((legendItem, i)=>{\n            ctx.strokeStyle = legendItem.fontColor;\n            ctx.fillStyle = legendItem.fontColor;\n            const textWidth = ctx.measureText(legendItem.text).width;\n            const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n            const width = boxWidth + halfFontSize + textWidth;\n            let x = cursor.x;\n            let y = cursor.y;\n            rtlHelper.setWidth(this.width);\n            if (isHorizontal) {\n                if (i > 0 && x + width + padding > this.right) {\n                    y = cursor.y += lineHeight;\n                    cursor.line++;\n                    x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n                }\n            } else if (i > 0 && y + lineHeight > this.bottom) {\n                x = cursor.x = x + columnSizes[cursor.line].width + padding;\n                cursor.line++;\n                y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n            }\n            const realX = rtlHelper.x(x);\n            drawLegendBox(realX, y, legendItem);\n            x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n            fillText(rtlHelper.x(x), y, legendItem);\n            if (isHorizontal) {\n                cursor.x += width + padding;\n            } else if (typeof legendItem.text !== 'string') {\n                const fontLineHeight = labelFont.lineHeight;\n                cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight) + padding;\n            } else {\n                cursor.y += lineHeight;\n            }\n        });\n        restoreTextDirection(this.ctx, opts.textDirection);\n    }\n drawTitle() {\n        const opts = this.options;\n        const titleOpts = opts.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        if (!titleOpts.display) {\n            return;\n        }\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const ctx = this.ctx;\n        const position = titleOpts.position;\n        const halfFontSize = titleFont.size / 2;\n        const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n        let y;\n        let left = this.left;\n        let maxWidth = this.width;\n        if (this.isHorizontal()) {\n            maxWidth = Math.max(...this.lineWidths);\n            y = this.top + topPaddingPlusHalfFontSize;\n            left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n        } else {\n            const maxHeight = this.columnSizes.reduce((acc, size)=>Math.max(acc, size.height), 0);\n            y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n        }\n        const x = _alignStartEnd(position, left, left + maxWidth);\n        ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n        ctx.textBaseline = 'middle';\n        ctx.strokeStyle = titleOpts.color;\n        ctx.fillStyle = titleOpts.color;\n        ctx.font = titleFont.string;\n        renderText(ctx, titleOpts.text, x, y, titleFont);\n    }\n _computeTitleHeight() {\n        const titleOpts = this.options.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n    }\n _getLegendItemAt(x, y) {\n        let i, hitBox, lh;\n        if (_isBetween(x, this.left, this.right) && _isBetween(y, this.top, this.bottom)) {\n            lh = this.legendHitBoxes;\n            for(i = 0; i < lh.length; ++i){\n                hitBox = lh[i];\n                if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width) && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n                    return this.legendItems[i];\n                }\n            }\n        }\n        return null;\n    }\n handleEvent(e) {\n        const opts = this.options;\n        if (!isListened(e.type, opts)) {\n            return;\n        }\n        const hoveredItem = this._getLegendItemAt(e.x, e.y);\n        if (e.type === 'mousemove' || e.type === 'mouseout') {\n            const previous = this._hoveredItem;\n            const sameItem = itemsEqual(previous, hoveredItem);\n            if (previous && !sameItem) {\n                callback(opts.onLeave, [\n                    e,\n                    previous,\n                    this\n                ], this);\n            }\n            this._hoveredItem = hoveredItem;\n            if (hoveredItem && !sameItem) {\n                callback(opts.onHover, [\n                    e,\n                    hoveredItem,\n                    this\n                ], this);\n            }\n        } else if (hoveredItem) {\n            callback(opts.onClick, [\n                e,\n                hoveredItem,\n                this\n            ], this);\n        }\n    }\n}\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n    const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n    const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n    return {\n        itemWidth,\n        itemHeight\n    };\n}\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n    let legendItemText = legendItem.text;\n    if (legendItemText && typeof legendItemText !== 'string') {\n        legendItemText = legendItemText.reduce((a, b)=>a.length > b.length ? a : b);\n    }\n    return boxWidth + labelFont.size / 2 + ctx.measureText(legendItemText).width;\n}\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n    let itemHeight = _itemHeight;\n    if (typeof legendItem.text !== 'string') {\n        itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n    }\n    return itemHeight;\n}\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n    const labelHeight = legendItem.text ? legendItem.text.length : 0;\n    return fontLineHeight * labelHeight;\n}\nfunction isListened(type, opts) {\n    if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n        return true;\n    }\n    if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n        return true;\n    }\n    return false;\n}\nvar plugin_legend = {\n    id: 'legend',\n _element: Legend,\n    start (chart, _args, options) {\n        const legend = chart.legend = new Legend({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, legend, options);\n        layouts.addBox(chart, legend);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, chart.legend);\n        delete chart.legend;\n    },\n    beforeUpdate (chart, _args, options) {\n        const legend = chart.legend;\n        layouts.configure(chart, legend, options);\n        legend.options = options;\n    },\n    afterUpdate (chart) {\n        const legend = chart.legend;\n        legend.buildLabels();\n        legend.adjustHitBoxes();\n    },\n    afterEvent (chart, args) {\n        if (!args.replay) {\n            chart.legend.handleEvent(args.event);\n        }\n    },\n    defaults: {\n        display: true,\n        position: 'top',\n        align: 'center',\n        fullSize: true,\n        reverse: false,\n        weight: 1000,\n        onClick (e, legendItem, legend) {\n            const index = legendItem.datasetIndex;\n            const ci = legend.chart;\n            if (ci.isDatasetVisible(index)) {\n                ci.hide(index);\n                legendItem.hidden = true;\n            } else {\n                ci.show(index);\n                legendItem.hidden = false;\n            }\n        },\n        onHover: null,\n        onLeave: null,\n        labels: {\n            color: (ctx)=>ctx.chart.options.color,\n            boxWidth: 40,\n            padding: 10,\n            generateLabels (chart) {\n                const datasets = chart.data.datasets;\n                const { labels: { usePointStyle , pointStyle , textAlign , color , useBorderRadius , borderRadius  }  } = chart.legend.options;\n                return chart._getSortedDatasetMetas().map((meta)=>{\n                    const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n                    const borderWidth = toPadding(style.borderWidth);\n                    return {\n                        text: datasets[meta.index].label,\n                        fillStyle: style.backgroundColor,\n                        fontColor: color,\n                        hidden: !meta.visible,\n                        lineCap: style.borderCapStyle,\n                        lineDash: style.borderDash,\n                        lineDashOffset: style.borderDashOffset,\n                        lineJoin: style.borderJoinStyle,\n                        lineWidth: (borderWidth.width + borderWidth.height) / 4,\n                        strokeStyle: style.borderColor,\n                        pointStyle: pointStyle || style.pointStyle,\n                        rotation: style.rotation,\n                        textAlign: textAlign || style.textAlign,\n                        borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n                        datasetIndex: meta.index\n                    };\n                }, this);\n            }\n        },\n        title: {\n            color: (ctx)=>ctx.chart.options.color,\n            display: false,\n            position: 'center',\n            text: ''\n        }\n    },\n    descriptors: {\n        _scriptable: (name)=>!name.startsWith('on'),\n        labels: {\n            _scriptable: (name)=>![\n                    'generateLabels',\n                    'filter',\n                    'sort'\n                ].includes(name)\n        }\n    }\n};\n\nclass Title extends Element {\n constructor(config){\n        super();\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this._padding = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight) {\n        const opts = this.options;\n        this.left = 0;\n        this.top = 0;\n        if (!opts.display) {\n            this.width = this.height = this.right = this.bottom = 0;\n            return;\n        }\n        this.width = this.right = maxWidth;\n        this.height = this.bottom = maxHeight;\n        const lineCount = isArray(opts.text) ? opts.text.length : 1;\n        this._padding = toPadding(opts.padding);\n        const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n        if (this.isHorizontal()) {\n            this.height = textSize;\n        } else {\n            this.width = textSize;\n        }\n    }\n    isHorizontal() {\n        const pos = this.options.position;\n        return pos === 'top' || pos === 'bottom';\n    }\n    _drawArgs(offset) {\n        const { top , left , bottom , right , options  } = this;\n        const align = options.align;\n        let rotation = 0;\n        let maxWidth, titleX, titleY;\n        if (this.isHorizontal()) {\n            titleX = _alignStartEnd(align, left, right);\n            titleY = top + offset;\n            maxWidth = right - left;\n        } else {\n            if (options.position === 'left') {\n                titleX = left + offset;\n                titleY = _alignStartEnd(align, bottom, top);\n                rotation = PI * -0.5;\n            } else {\n                titleX = right - offset;\n                titleY = _alignStartEnd(align, top, bottom);\n                rotation = PI * 0.5;\n            }\n            maxWidth = bottom - top;\n        }\n        return {\n            titleX,\n            titleY,\n            maxWidth,\n            rotation\n        };\n    }\n    draw() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        if (!opts.display) {\n            return;\n        }\n        const fontOpts = toFont(opts.font);\n        const lineHeight = fontOpts.lineHeight;\n        const offset = lineHeight / 2 + this._padding.top;\n        const { titleX , titleY , maxWidth , rotation  } = this._drawArgs(offset);\n        renderText(ctx, opts.text, 0, 0, fontOpts, {\n            color: opts.color,\n            maxWidth,\n            rotation,\n            textAlign: _toLeftRightCenter(opts.align),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n}\nfunction createTitle(chart, titleOpts) {\n    const title = new Title({\n        ctx: chart.ctx,\n        options: titleOpts,\n        chart\n    });\n    layouts.configure(chart, title, titleOpts);\n    layouts.addBox(chart, title);\n    chart.titleBlock = title;\n}\nvar plugin_title = {\n    id: 'title',\n _element: Title,\n    start (chart, _args, options) {\n        createTitle(chart, options);\n    },\n    stop (chart) {\n        const titleBlock = chart.titleBlock;\n        layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = chart.titleBlock;\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'bold'\n        },\n        fullSize: true,\n        padding: 10,\n        position: 'top',\n        text: '',\n        weight: 2000\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n    id: 'subtitle',\n    start (chart, _args, options) {\n        const title = new Title({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, title, options);\n        layouts.addBox(chart, title);\n        map.set(chart, title);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, map.get(chart));\n        map.delete(chart);\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = map.get(chart);\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'normal'\n        },\n        fullSize: true,\n        padding: 0,\n        position: 'top',\n        text: '',\n        weight: 1500\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst positioners = {\n average (items) {\n        if (!items.length) {\n            return false;\n        }\n        let i, len;\n        let xSet = new Set();\n        let y = 0;\n        let count = 0;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const pos = el.tooltipPosition();\n                xSet.add(pos.x);\n                y += pos.y;\n                ++count;\n            }\n        }\n        if (count === 0 || xSet.size === 0) {\n            return false;\n        }\n        const xAverage = [\n            ...xSet\n        ].reduce((a, b)=>a + b) / xSet.size;\n        return {\n            x: xAverage,\n            y: y / count\n        };\n    },\n nearest (items, eventPosition) {\n        if (!items.length) {\n            return false;\n        }\n        let x = eventPosition.x;\n        let y = eventPosition.y;\n        let minDistance = Number.POSITIVE_INFINITY;\n        let i, len, nearestElement;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const center = el.getCenterPoint();\n                const d = distanceBetweenPoints(eventPosition, center);\n                if (d < minDistance) {\n                    minDistance = d;\n                    nearestElement = el;\n                }\n            }\n        }\n        if (nearestElement) {\n            const tp = nearestElement.tooltipPosition();\n            x = tp.x;\n            y = tp.y;\n        }\n        return {\n            x,\n            y\n        };\n    }\n};\nfunction pushOrConcat(base, toPush) {\n    if (toPush) {\n        if (isArray(toPush)) {\n            Array.prototype.push.apply(base, toPush);\n        } else {\n            base.push(toPush);\n        }\n    }\n    return base;\n}\n function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n        return str.split('\\n');\n    }\n    return str;\n}\n function createTooltipItem(chart, item) {\n    const { element , datasetIndex , index  } = item;\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n    const { label , value  } = controller.getLabelAndValue(index);\n    return {\n        chart,\n        label,\n        parsed: controller.getParsed(index),\n        raw: chart.data.datasets[datasetIndex].data[index],\n        formattedValue: value,\n        dataset: controller.getDataset(),\n        dataIndex: index,\n        datasetIndex,\n        element\n    };\n}\n function getTooltipSize(tooltip, options) {\n    const ctx = tooltip.chart.ctx;\n    const { body , footer , title  } = tooltip;\n    const { boxWidth , boxHeight  } = options;\n    const bodyFont = toFont(options.bodyFont);\n    const titleFont = toFont(options.titleFont);\n    const footerFont = toFont(options.footerFont);\n    const titleLineCount = title.length;\n    const footerLineCount = footer.length;\n    const bodyLineItemCount = body.length;\n    const padding = toPadding(options.padding);\n    let height = padding.height;\n    let width = 0;\n    let combinedBodyLength = body.reduce((count, bodyItem)=>count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n    combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n    if (titleLineCount) {\n        height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n    }\n    if (combinedBodyLength) {\n        const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n        height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n    }\n    if (footerLineCount) {\n        height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n    }\n    let widthPadding = 0;\n    const maxLineWidth = function(line) {\n        width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n    ctx.save();\n    ctx.font = titleFont.string;\n    each(tooltip.title, maxLineWidth);\n    ctx.font = bodyFont.string;\n    each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n    widthPadding = options.displayColors ? boxWidth + 2 + options.boxPadding : 0;\n    each(body, (bodyItem)=>{\n        each(bodyItem.before, maxLineWidth);\n        each(bodyItem.lines, maxLineWidth);\n        each(bodyItem.after, maxLineWidth);\n    });\n    widthPadding = 0;\n    ctx.font = footerFont.string;\n    each(tooltip.footer, maxLineWidth);\n    ctx.restore();\n    width += padding.width;\n    return {\n        width,\n        height\n    };\n}\nfunction determineYAlign(chart, size) {\n    const { y , height  } = size;\n    if (y < height / 2) {\n        return 'top';\n    } else if (y > chart.height - height / 2) {\n        return 'bottom';\n    }\n    return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n    const { x , width  } = size;\n    const caret = options.caretSize + options.caretPadding;\n    if (xAlign === 'left' && x + width + caret > chart.width) {\n        return true;\n    }\n    if (xAlign === 'right' && x - width - caret < 0) {\n        return true;\n    }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n    const { x , width  } = size;\n    const { width: chartWidth , chartArea: { left , right  }  } = chart;\n    let xAlign = 'center';\n    if (yAlign === 'center') {\n        xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n    } else if (x <= width / 2) {\n        xAlign = 'left';\n    } else if (x >= chartWidth - width / 2) {\n        xAlign = 'right';\n    }\n    if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n        xAlign = 'center';\n    }\n    return xAlign;\n}\n function determineAlignment(chart, options, size) {\n    const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n    return {\n        xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n        yAlign\n    };\n}\nfunction alignX(size, xAlign) {\n    let { x , width  } = size;\n    if (xAlign === 'right') {\n        x -= width;\n    } else if (xAlign === 'center') {\n        x -= width / 2;\n    }\n    return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n    let { y , height  } = size;\n    if (yAlign === 'top') {\n        y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n        y -= height + paddingAndSize;\n    } else {\n        y -= height / 2;\n    }\n    return y;\n}\n function getBackgroundPoint(options, size, alignment, chart) {\n    const { caretSize , caretPadding , cornerRadius  } = options;\n    const { xAlign , yAlign  } = alignment;\n    const paddingAndSize = caretSize + caretPadding;\n    const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n    let x = alignX(size, xAlign);\n    const y = alignY(size, yAlign, paddingAndSize);\n    if (yAlign === 'center') {\n        if (xAlign === 'left') {\n            x += paddingAndSize;\n        } else if (xAlign === 'right') {\n            x -= paddingAndSize;\n        }\n    } else if (xAlign === 'left') {\n        x -= Math.max(topLeft, bottomLeft) + caretSize;\n    } else if (xAlign === 'right') {\n        x += Math.max(topRight, bottomRight) + caretSize;\n    }\n    return {\n        x: _limitValue(x, 0, chart.width - size.width),\n        y: _limitValue(y, 0, chart.height - size.height)\n    };\n}\nfunction getAlignedX(tooltip, align, options) {\n    const padding = toPadding(options.padding);\n    return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\n function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n    return createContext(parent, {\n        tooltip,\n        tooltipItems,\n        type: 'tooltip'\n    });\n}\nfunction overrideCallbacks(callbacks, context) {\n    const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n    return override ? callbacks.override(override) : callbacks;\n}\nconst defaultCallbacks = {\n    beforeTitle: noop,\n    title (tooltipItems) {\n        if (tooltipItems.length > 0) {\n            const item = tooltipItems[0];\n            const labels = item.chart.data.labels;\n            const labelCount = labels ? labels.length : 0;\n            if (this && this.options && this.options.mode === 'dataset') {\n                return item.dataset.label || '';\n            } else if (item.label) {\n                return item.label;\n            } else if (labelCount > 0 && item.dataIndex < labelCount) {\n                return labels[item.dataIndex];\n            }\n        }\n        return '';\n    },\n    afterTitle: noop,\n    beforeBody: noop,\n    beforeLabel: noop,\n    label (tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n            return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n            label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n            label += value;\n        }\n        return label;\n    },\n    labelColor (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            borderColor: options.borderColor,\n            backgroundColor: options.backgroundColor,\n            borderWidth: options.borderWidth,\n            borderDash: options.borderDash,\n            borderDashOffset: options.borderDashOffset,\n            borderRadius: 0\n        };\n    },\n    labelTextColor () {\n        return this.options.bodyColor;\n    },\n    labelPointStyle (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            pointStyle: options.pointStyle,\n            rotation: options.rotation\n        };\n    },\n    afterLabel: noop,\n    afterBody: noop,\n    beforeFooter: noop,\n    footer: noop,\n    afterFooter: noop\n};\n function invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n    const result = callbacks[name].call(ctx, arg);\n    if (typeof result === 'undefined') {\n        return defaultCallbacks[name].call(ctx, arg);\n    }\n    return result;\n}\nclass Tooltip extends Element {\n static positioners = positioners;\n    constructor(config){\n        super();\n        this.opacity = 0;\n        this._active = [];\n        this._eventPosition = undefined;\n        this._size = undefined;\n        this._cachedAnimations = undefined;\n        this._tooltipItems = [];\n        this.$animations = undefined;\n        this.$context = undefined;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.dataPoints = undefined;\n        this.title = undefined;\n        this.beforeBody = undefined;\n        this.body = undefined;\n        this.afterBody = undefined;\n        this.footer = undefined;\n        this.xAlign = undefined;\n        this.yAlign = undefined;\n        this.x = undefined;\n        this.y = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this.caretX = undefined;\n        this.caretY = undefined;\n        this.labelColors = undefined;\n        this.labelPointStyles = undefined;\n        this.labelTextColors = undefined;\n    }\n    initialize(options) {\n        this.options = options;\n        this._cachedAnimations = undefined;\n        this.$context = undefined;\n    }\n _resolveAnimations() {\n        const cached = this._cachedAnimations;\n        if (cached) {\n            return cached;\n        }\n        const chart = this.chart;\n        const options = this.options.setContext(this.getContext());\n        const opts = options.enabled && chart.options.animation && options.animations;\n        const animations = new Animations(this.chart, opts);\n        if (opts._cacheable) {\n            this._cachedAnimations = Object.freeze(animations);\n        }\n        return animations;\n    }\n getContext() {\n        return this.$context || (this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n    }\n    getTitle(context, options) {\n        const { callbacks  } = options;\n        const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n        const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n        const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n        lines = pushOrConcat(lines, splitNewlines(title));\n        lines = pushOrConcat(lines, splitNewlines(afterTitle));\n        return lines;\n    }\n    getBeforeBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems));\n    }\n    getBody(tooltipItems, options) {\n        const { callbacks  } = options;\n        const bodyItems = [];\n        each(tooltipItems, (context)=>{\n            const bodyItem = {\n                before: [],\n                lines: [],\n                after: []\n            };\n            const scoped = overrideCallbacks(callbacks, context);\n            pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n            pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n            pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n            bodyItems.push(bodyItem);\n        });\n        return bodyItems;\n    }\n    getAfterBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems));\n    }\n    getFooter(tooltipItems, options) {\n        const { callbacks  } = options;\n        const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n        const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n        const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n        lines = pushOrConcat(lines, splitNewlines(footer));\n        lines = pushOrConcat(lines, splitNewlines(afterFooter));\n        return lines;\n    }\n _createItems(options) {\n        const active = this._active;\n        const data = this.chart.data;\n        const labelColors = [];\n        const labelPointStyles = [];\n        const labelTextColors = [];\n        let tooltipItems = [];\n        let i, len;\n        for(i = 0, len = active.length; i < len; ++i){\n            tooltipItems.push(createTooltipItem(this.chart, active[i]));\n        }\n        if (options.filter) {\n            tooltipItems = tooltipItems.filter((element, index, array)=>options.filter(element, index, array, data));\n        }\n        if (options.itemSort) {\n            tooltipItems = tooltipItems.sort((a, b)=>options.itemSort(a, b, data));\n        }\n        each(tooltipItems, (context)=>{\n            const scoped = overrideCallbacks(options.callbacks, context);\n            labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n            labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n            labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n        });\n        this.labelColors = labelColors;\n        this.labelPointStyles = labelPointStyles;\n        this.labelTextColors = labelTextColors;\n        this.dataPoints = tooltipItems;\n        return tooltipItems;\n    }\n    update(changed, replay) {\n        const options = this.options.setContext(this.getContext());\n        const active = this._active;\n        let properties;\n        let tooltipItems = [];\n        if (!active.length) {\n            if (this.opacity !== 0) {\n                properties = {\n                    opacity: 0\n                };\n            }\n        } else {\n            const position = positioners[options.position].call(this, active, this._eventPosition);\n            tooltipItems = this._createItems(options);\n            this.title = this.getTitle(tooltipItems, options);\n            this.beforeBody = this.getBeforeBody(tooltipItems, options);\n            this.body = this.getBody(tooltipItems, options);\n            this.afterBody = this.getAfterBody(tooltipItems, options);\n            this.footer = this.getFooter(tooltipItems, options);\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, size);\n            const alignment = determineAlignment(this.chart, options, positionAndSize);\n            const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n            this.xAlign = alignment.xAlign;\n            this.yAlign = alignment.yAlign;\n            properties = {\n                opacity: 1,\n                x: backgroundPoint.x,\n                y: backgroundPoint.y,\n                width: size.width,\n                height: size.height,\n                caretX: position.x,\n                caretY: position.y\n            };\n        }\n        this._tooltipItems = tooltipItems;\n        this.$context = undefined;\n        if (properties) {\n            this._resolveAnimations().update(this, properties);\n        }\n        if (changed && options.external) {\n            options.external.call(this, {\n                chart: this.chart,\n                tooltip: this,\n                replay\n            });\n        }\n    }\n    drawCaret(tooltipPoint, ctx, size, options) {\n        const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n        ctx.lineTo(caretPosition.x1, caretPosition.y1);\n        ctx.lineTo(caretPosition.x2, caretPosition.y2);\n        ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    }\n    getCaretPosition(tooltipPoint, size, options) {\n        const { xAlign , yAlign  } = this;\n        const { caretSize , cornerRadius  } = options;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n        const { x: ptX , y: ptY  } = tooltipPoint;\n        const { width , height  } = size;\n        let x1, x2, x3, y1, y2, y3;\n        if (yAlign === 'center') {\n            y2 = ptY + height / 2;\n            if (xAlign === 'left') {\n                x1 = ptX;\n                x2 = x1 - caretSize;\n                y1 = y2 + caretSize;\n                y3 = y2 - caretSize;\n            } else {\n                x1 = ptX + width;\n                x2 = x1 + caretSize;\n                y1 = y2 - caretSize;\n                y3 = y2 + caretSize;\n            }\n            x3 = x1;\n        } else {\n            if (xAlign === 'left') {\n                x2 = ptX + Math.max(topLeft, bottomLeft) + caretSize;\n            } else if (xAlign === 'right') {\n                x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n            } else {\n                x2 = this.caretX;\n            }\n            if (yAlign === 'top') {\n                y1 = ptY;\n                y2 = y1 - caretSize;\n                x1 = x2 - caretSize;\n                x3 = x2 + caretSize;\n            } else {\n                y1 = ptY + height;\n                y2 = y1 + caretSize;\n                x1 = x2 + caretSize;\n                x3 = x2 - caretSize;\n            }\n            y3 = y1;\n        }\n        return {\n            x1,\n            x2,\n            x3,\n            y1,\n            y2,\n            y3\n        };\n    }\n    drawTitle(pt, ctx, options) {\n        const title = this.title;\n        const length = title.length;\n        let titleFont, titleSpacing, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.titleAlign, options);\n            ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n            ctx.textBaseline = 'middle';\n            titleFont = toFont(options.titleFont);\n            titleSpacing = options.titleSpacing;\n            ctx.fillStyle = options.titleColor;\n            ctx.font = titleFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n                pt.y += titleFont.lineHeight + titleSpacing;\n                if (i + 1 === length) {\n                    pt.y += options.titleMarginBottom - titleSpacing;\n                }\n            }\n        }\n    }\n _drawColorBox(ctx, pt, i, rtlHelper, options) {\n        const labelColor = this.labelColors[i];\n        const labelPointStyle = this.labelPointStyles[i];\n        const { boxHeight , boxWidth  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        const colorX = getAlignedX(this, 'left', options);\n        const rtlColorX = rtlHelper.x(colorX);\n        const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n        const colorY = pt.y + yOffSet;\n        if (options.usePointStyle) {\n            const drawOptions = {\n                radius: Math.min(boxWidth, boxHeight) / 2,\n                pointStyle: labelPointStyle.pointStyle,\n                rotation: labelPointStyle.rotation,\n                borderWidth: 1\n            };\n            const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n            const centerY = colorY + boxHeight / 2;\n            ctx.strokeStyle = options.multiKeyBackground;\n            ctx.fillStyle = options.multiKeyBackground;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.fillStyle = labelColor.backgroundColor;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n        } else {\n            ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : labelColor.borderWidth || 1;\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.setLineDash(labelColor.borderDash || []);\n            ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n            const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n            const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n            const borderRadius = toTRBLCorners(labelColor.borderRadius);\n            if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                ctx.beginPath();\n                ctx.fillStyle = options.multiKeyBackground;\n                addRoundedRectPath(ctx, {\n                    x: outerX,\n                    y: colorY,\n                    w: boxWidth,\n                    h: boxHeight,\n                    radius: borderRadius\n                });\n                ctx.fill();\n                ctx.stroke();\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.beginPath();\n                addRoundedRectPath(ctx, {\n                    x: innerX,\n                    y: colorY + 1,\n                    w: boxWidth - 2,\n                    h: boxHeight - 2,\n                    radius: borderRadius\n                });\n                ctx.fill();\n            } else {\n                ctx.fillStyle = options.multiKeyBackground;\n                ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n            }\n        }\n        ctx.fillStyle = this.labelTextColors[i];\n    }\n    drawBody(pt, ctx, options) {\n        const { body  } = this;\n        const { bodySpacing , bodyAlign , displayColors , boxHeight , boxWidth , boxPadding  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        let bodyLineHeight = bodyFont.lineHeight;\n        let xLinePadding = 0;\n        const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n        const fillLineOfText = function(line) {\n            ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n            pt.y += bodyLineHeight + bodySpacing;\n        };\n        const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n        let bodyItem, textColor, lines, i, j, ilen, jlen;\n        ctx.textAlign = bodyAlign;\n        ctx.textBaseline = 'middle';\n        ctx.font = bodyFont.string;\n        pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n        ctx.fillStyle = options.bodyColor;\n        each(this.beforeBody, fillLineOfText);\n        xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + boxPadding : boxWidth + 2 + boxPadding : 0;\n        for(i = 0, ilen = body.length; i < ilen; ++i){\n            bodyItem = body[i];\n            textColor = this.labelTextColors[i];\n            ctx.fillStyle = textColor;\n            each(bodyItem.before, fillLineOfText);\n            lines = bodyItem.lines;\n            if (displayColors && lines.length) {\n                this._drawColorBox(ctx, pt, i, rtlHelper, options);\n                bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n            }\n            for(j = 0, jlen = lines.length; j < jlen; ++j){\n                fillLineOfText(lines[j]);\n                bodyLineHeight = bodyFont.lineHeight;\n            }\n            each(bodyItem.after, fillLineOfText);\n        }\n        xLinePadding = 0;\n        bodyLineHeight = bodyFont.lineHeight;\n        each(this.afterBody, fillLineOfText);\n        pt.y -= bodySpacing;\n    }\n    drawFooter(pt, ctx, options) {\n        const footer = this.footer;\n        const length = footer.length;\n        let footerFont, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.footerAlign, options);\n            pt.y += options.footerMarginTop;\n            ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n            ctx.textBaseline = 'middle';\n            footerFont = toFont(options.footerFont);\n            ctx.fillStyle = options.footerColor;\n            ctx.font = footerFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n                pt.y += footerFont.lineHeight + options.footerSpacing;\n            }\n        }\n    }\n    drawBackground(pt, ctx, tooltipSize, options) {\n        const { xAlign , yAlign  } = this;\n        const { x , y  } = pt;\n        const { width , height  } = tooltipSize;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(options.cornerRadius);\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.beginPath();\n        ctx.moveTo(x + topLeft, y);\n        if (yAlign === 'top') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width - topRight, y);\n        ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n        if (yAlign === 'center' && xAlign === 'right') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width, y + height - bottomRight);\n        ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n        if (yAlign === 'bottom') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + bottomLeft, y + height);\n        ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n        if (yAlign === 'center' && xAlign === 'left') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x, y + topLeft);\n        ctx.quadraticCurveTo(x, y, x + topLeft, y);\n        ctx.closePath();\n        ctx.fill();\n        if (options.borderWidth > 0) {\n            ctx.stroke();\n        }\n    }\n _updateAnimationTarget(options) {\n        const chart = this.chart;\n        const anims = this.$animations;\n        const animX = anims && anims.x;\n        const animY = anims && anims.y;\n        if (animX || animY) {\n            const position = positioners[options.position].call(this, this._active, this._eventPosition);\n            if (!position) {\n                return;\n            }\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, this._size);\n            const alignment = determineAlignment(chart, options, positionAndSize);\n            const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n            if (animX._to !== point.x || animY._to !== point.y) {\n                this.xAlign = alignment.xAlign;\n                this.yAlign = alignment.yAlign;\n                this.width = size.width;\n                this.height = size.height;\n                this.caretX = position.x;\n                this.caretY = position.y;\n                this._resolveAnimations().update(this, point);\n            }\n        }\n    }\n _willRender() {\n        return !!this.opacity;\n    }\n    draw(ctx) {\n        const options = this.options.setContext(this.getContext());\n        let opacity = this.opacity;\n        if (!opacity) {\n            return;\n        }\n        this._updateAnimationTarget(options);\n        const tooltipSize = {\n            width: this.width,\n            height: this.height\n        };\n        const pt = {\n            x: this.x,\n            y: this.y\n        };\n        opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n        const padding = toPadding(options.padding);\n        const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n        if (options.enabled && hasTooltipContent) {\n            ctx.save();\n            ctx.globalAlpha = opacity;\n            this.drawBackground(pt, ctx, tooltipSize, options);\n            overrideTextDirection(ctx, options.textDirection);\n            pt.y += padding.top;\n            this.drawTitle(pt, ctx, options);\n            this.drawBody(pt, ctx, options);\n            this.drawFooter(pt, ctx, options);\n            restoreTextDirection(ctx, options.textDirection);\n            ctx.restore();\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements, eventPosition) {\n        const lastActive = this._active;\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.chart.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('Cannot find a dataset at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(lastActive, active);\n        const positionChanged = this._positionChanged(active, eventPosition);\n        if (changed || positionChanged) {\n            this._active = active;\n            this._eventPosition = eventPosition;\n            this._ignoreReplayEvents = true;\n            this.update(true);\n        }\n    }\n handleEvent(e, replay, inChartArea = true) {\n        if (replay && this._ignoreReplayEvents) {\n            return false;\n        }\n        this._ignoreReplayEvents = false;\n        const options = this.options;\n        const lastActive = this._active || [];\n        const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n        const positionChanged = this._positionChanged(active, e);\n        const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n        if (changed) {\n            this._active = active;\n            if (options.enabled || options.external) {\n                this._eventPosition = {\n                    x: e.x,\n                    y: e.y\n                };\n                this.update(true, replay);\n            }\n        }\n        return changed;\n    }\n _getActiveElements(e, lastActive, replay, inChartArea) {\n        const options = this.options;\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive.filter((i)=>this.chart.data.datasets[i.datasetIndex] && this.chart.getDatasetMeta(i.datasetIndex).controller.getParsed(i.index) !== undefined);\n        }\n        const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n        if (options.reverse) {\n            active.reverse();\n        }\n        return active;\n    }\n _positionChanged(active, e) {\n        const { caretX , caretY , options  } = this;\n        const position = positioners[options.position].call(this, active, e);\n        return position !== false && (caretX !== position.x || caretY !== position.y);\n    }\n}\nvar plugin_tooltip = {\n    id: 'tooltip',\n    _element: Tooltip,\n    positioners,\n    afterInit (chart, _args, options) {\n        if (options) {\n            chart.tooltip = new Tooltip({\n                chart,\n                options\n            });\n        }\n    },\n    beforeUpdate (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    reset (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    afterDraw (chart) {\n        const tooltip = chart.tooltip;\n        if (tooltip && tooltip._willRender()) {\n            const args = {\n                tooltip\n            };\n            if (chart.notifyPlugins('beforeTooltipDraw', {\n                ...args,\n                cancelable: true\n            }) === false) {\n                return;\n            }\n            tooltip.draw(chart.ctx);\n            chart.notifyPlugins('afterTooltipDraw', args);\n        }\n    },\n    afterEvent (chart, args) {\n        if (chart.tooltip) {\n            const useFinalPosition = args.replay;\n            if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n                args.changed = true;\n            }\n        }\n    },\n    defaults: {\n        enabled: true,\n        external: null,\n        position: 'average',\n        backgroundColor: 'rgba(0,0,0,0.8)',\n        titleColor: '#fff',\n        titleFont: {\n            weight: 'bold'\n        },\n        titleSpacing: 2,\n        titleMarginBottom: 6,\n        titleAlign: 'left',\n        bodyColor: '#fff',\n        bodySpacing: 2,\n        bodyFont: {},\n        bodyAlign: 'left',\n        footerColor: '#fff',\n        footerSpacing: 2,\n        footerMarginTop: 6,\n        footerFont: {\n            weight: 'bold'\n        },\n        footerAlign: 'left',\n        padding: 6,\n        caretPadding: 2,\n        caretSize: 5,\n        cornerRadius: 6,\n        boxHeight: (ctx, opts)=>opts.bodyFont.size,\n        boxWidth: (ctx, opts)=>opts.bodyFont.size,\n        multiKeyBackground: '#fff',\n        displayColors: true,\n        boxPadding: 0,\n        borderColor: 'rgba(0,0,0,0)',\n        borderWidth: 0,\n        animation: {\n            duration: 400,\n            easing: 'easeOutQuart'\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'width',\n                    'height',\n                    'caretX',\n                    'caretY'\n                ]\n            },\n            opacity: {\n                easing: 'linear',\n                duration: 200\n            }\n        },\n        callbacks: defaultCallbacks\n    },\n    defaultRoutes: {\n        bodyFont: 'font',\n        footerFont: 'font',\n        titleFont: 'font'\n    },\n    descriptors: {\n        _scriptable: (name)=>name !== 'filter' && name !== 'itemSort' && name !== 'external',\n        _indexable: false,\n        callbacks: {\n            _scriptable: false,\n            _indexable: false\n        },\n        animation: {\n            _fallback: false\n        },\n        animations: {\n            _fallback: 'animation'\n        }\n    },\n    additionalOptionScopes: [\n        'interaction'\n    ]\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nColors: plugin_colors,\nDecimation: plugin_decimation,\nFiller: index,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels)=>{\n    if (typeof raw === 'string') {\n        index = labels.push(raw) - 1;\n        addedLabels.unshift({\n            index,\n            label: raw\n        });\n    } else if (isNaN(raw)) {\n        index = null;\n    }\n    return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n    const first = labels.indexOf(raw);\n    if (first === -1) {\n        return addIfString(labels, raw, index, addedLabels);\n    }\n    const last = labels.lastIndexOf(raw);\n    return first !== last ? index : first;\n}\nconst validIndex = (index, max)=>index === null ? null : _limitValue(Math.round(index), 0, max);\nfunction _getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n        return labels[value];\n    }\n    return value;\n}\nclass CategoryScale extends Scale {\n    static id = 'category';\n static defaults = {\n        ticks: {\n            callback: _getLabelForValue\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this._startValue = undefined;\n        this._valueRange = 0;\n        this._addedLabels = [];\n    }\n    init(scaleOptions) {\n        const added = this._addedLabels;\n        if (added.length) {\n            const labels = this.getLabels();\n            for (const { index , label  } of added){\n                if (labels[index] === label) {\n                    labels.splice(index, 1);\n                }\n            }\n            this._addedLabels = [];\n        }\n        super.init(scaleOptions);\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        const labels = this.getLabels();\n        index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n        return validIndex(index, labels.length - 1);\n    }\n    determineDataLimits() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this.getMinMax(true);\n        if (this.options.bounds === 'ticks') {\n            if (!minDefined) {\n                min = 0;\n            }\n            if (!maxDefined) {\n                max = this.getLabels().length - 1;\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const min = this.min;\n        const max = this.max;\n        const offset = this.options.offset;\n        const ticks = [];\n        let labels = this.getLabels();\n        labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n        this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n        this._startValue = this.min - (offset ? 0.5 : 0);\n        for(let value = min; value <= max; value++){\n            ticks.push({\n                value\n            });\n        }\n        return ticks;\n    }\n    getLabelForValue(value) {\n        return _getLabelForValue.call(this, value);\n    }\n configure() {\n        super.configure();\n        if (!this.isHorizontal()) {\n            this._reversePixels = !this._reversePixels;\n        }\n    }\n    getPixelForValue(value) {\n        if (typeof value !== 'number') {\n            value = this.parse(value);\n        }\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n    getValueForPixel(pixel) {\n        return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n    }\n    getBasePixel() {\n        return this.bottom;\n    }\n}\n\nfunction generateTicks$1(generationOptions, dataRange) {\n    const ticks = [];\n    const MIN_SPACING = 1e-14;\n    const { bounds , step , min , max , precision , count , maxTicks , maxDigits , includeBounds  } = generationOptions;\n    const unit = step || 1;\n    const maxSpaces = maxTicks - 1;\n    const { min: rmin , max: rmax  } = dataRange;\n    const minDefined = !isNullOrUndef(min);\n    const maxDefined = !isNullOrUndef(max);\n    const countDefined = !isNullOrUndef(count);\n    const minSpacing = (rmax - rmin) / (maxDigits + 1);\n    let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n    let factor, niceMin, niceMax, numSpaces;\n    if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n        return [\n            {\n                value: rmin\n            },\n            {\n                value: rmax\n            }\n        ];\n    }\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n    if (numSpaces > maxSpaces) {\n        spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n    }\n    if (!isNullOrUndef(precision)) {\n        factor = Math.pow(10, precision);\n        spacing = Math.ceil(spacing * factor) / factor;\n    }\n    if (bounds === 'ticks') {\n        niceMin = Math.floor(rmin / spacing) * spacing;\n        niceMax = Math.ceil(rmax / spacing) * spacing;\n    } else {\n        niceMin = rmin;\n        niceMax = rmax;\n    }\n    if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n        numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n        spacing = (max - min) / numSpaces;\n        niceMin = min;\n        niceMax = max;\n    } else if (countDefined) {\n        niceMin = minDefined ? min : niceMin;\n        niceMax = maxDefined ? max : niceMax;\n        numSpaces = count - 1;\n        spacing = (niceMax - niceMin) / numSpaces;\n    } else {\n        numSpaces = (niceMax - niceMin) / spacing;\n        if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n            numSpaces = Math.round(numSpaces);\n        } else {\n            numSpaces = Math.ceil(numSpaces);\n        }\n    }\n    const decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n    factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    let j = 0;\n    if (minDefined) {\n        if (includeBounds && niceMin !== min) {\n            ticks.push({\n                value: min\n            });\n            if (niceMin < min) {\n                j++;\n            }\n            if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n                j++;\n            }\n        } else if (niceMin < min) {\n            j++;\n        }\n    }\n    for(; j < numSpaces; ++j){\n        const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n        if (maxDefined && tickValue > max) {\n            break;\n        }\n        ticks.push({\n            value: tickValue\n        });\n    }\n    if (maxDefined && includeBounds && niceMax !== max) {\n        if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n            ticks[ticks.length - 1].value = max;\n        } else {\n            ticks.push({\n                value: max\n            });\n        }\n    } else if (!maxDefined || niceMax === max) {\n        ticks.push({\n            value: niceMax\n        });\n    }\n    return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, { horizontal , minRotation  }) {\n    const rad = toRadians(minRotation);\n    const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n    const length = 0.75 * minSpacing * ('' + value).length;\n    return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n         this._endValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n            return null;\n        }\n        return +raw;\n    }\n    handleTickRangeOptions() {\n        const { beginAtZero  } = this.options;\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (beginAtZero) {\n            const minSign = sign(min);\n            const maxSign = sign(max);\n            if (minSign < 0 && maxSign < 0) {\n                setMax(0);\n            } else if (minSign > 0 && maxSign > 0) {\n                setMin(0);\n            }\n        }\n        if (min === max) {\n            let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n            setMax(max + offset);\n            if (!beginAtZero) {\n                setMin(min - offset);\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    getTickLimit() {\n        const tickOpts = this.options.ticks;\n        let { maxTicksLimit , stepSize  } = tickOpts;\n        let maxTicks;\n        if (stepSize) {\n            maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n            if (maxTicks > 1000) {\n                console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n                maxTicks = 1000;\n            }\n        } else {\n            maxTicks = this.computeTickLimit();\n            maxTicksLimit = maxTicksLimit || 11;\n        }\n        if (maxTicksLimit) {\n            maxTicks = Math.min(maxTicksLimit, maxTicks);\n        }\n        return maxTicks;\n    }\n computeTickLimit() {\n        return Number.POSITIVE_INFINITY;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        let maxTicks = this.getTickLimit();\n        maxTicks = Math.max(2, maxTicks);\n        const numericGeneratorOptions = {\n            maxTicks,\n            bounds: opts.bounds,\n            min: opts.min,\n            max: opts.max,\n            precision: tickOpts.precision,\n            step: tickOpts.stepSize,\n            count: tickOpts.count,\n            maxDigits: this._maxDigits(),\n            horizontal: this.isHorizontal(),\n            minRotation: tickOpts.minRotation || 0,\n            includeBounds: tickOpts.includeBounds !== false\n        };\n        const dataRange = this._range || this;\n        const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n configure() {\n        const ticks = this.ticks;\n        let start = this.min;\n        let end = this.max;\n        super.configure();\n        if (this.options.offset && ticks.length) {\n            const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n            start -= offset;\n            end += offset;\n        }\n        this._startValue = start;\n        this._endValue = end;\n        this._valueRange = end - start;\n    }\n    getLabelForValue(value) {\n        return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n}\n\nclass LinearScale extends LinearScaleBase {\n    static id = 'linear';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.numeric\n        }\n    };\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? min : 0;\n        this.max = isNumberFinite(max) ? max : 1;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        const horizontal = this.isHorizontal();\n        const length = horizontal ? this.width : this.height;\n        const minRotation = toRadians(this.options.ticks.minRotation);\n        const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n        const tickFont = this._resolveTickFontOptions(0);\n        return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n    }\n    getPixelForValue(value) {\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n    }\n}\n\nconst log10Floor = (v)=>Math.floor(log10(v));\nconst changeExponent = (v, m)=>Math.pow(10, log10Floor(v) + m);\nfunction isMajor(tickVal) {\n    const remain = tickVal / Math.pow(10, log10Floor(tickVal));\n    return remain === 1;\n}\nfunction steps(min, max, rangeExp) {\n    const rangeStep = Math.pow(10, rangeExp);\n    const start = Math.floor(min / rangeStep);\n    const end = Math.ceil(max / rangeStep);\n    return end - start;\n}\nfunction startExp(min, max) {\n    const range = max - min;\n    let rangeExp = log10Floor(range);\n    while(steps(min, max, rangeExp) > 10){\n        rangeExp++;\n    }\n    while(steps(min, max, rangeExp) < 10){\n        rangeExp--;\n    }\n    return Math.min(rangeExp, log10Floor(min));\n}\n function generateTicks(generationOptions, { min , max  }) {\n    min = finiteOrDefault(generationOptions.min, min);\n    const ticks = [];\n    const minExp = log10Floor(min);\n    let exp = startExp(min, max);\n    let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n    const stepSize = Math.pow(10, exp);\n    const base = minExp > exp ? Math.pow(10, minExp) : 0;\n    const start = Math.round((min - base) * precision) / precision;\n    const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n    let significand = Math.floor((start - offset) / Math.pow(10, exp));\n    let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n    while(value < max){\n        ticks.push({\n            value,\n            major: isMajor(value),\n            significand\n        });\n        if (significand >= 10) {\n            significand = significand < 15 ? 15 : 20;\n        } else {\n            significand++;\n        }\n        if (significand >= 20) {\n            exp++;\n            significand = 2;\n            precision = exp >= 0 ? 1 : precision;\n        }\n        value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n    }\n    const lastTick = finiteOrDefault(generationOptions.max, value);\n    ticks.push({\n        value: lastTick,\n        major: isMajor(lastTick),\n        significand\n    });\n    return ticks;\n}\nclass LogarithmicScale extends Scale {\n    static id = 'logarithmic';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.logarithmic,\n            major: {\n                enabled: true\n            }\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        const value = LinearScaleBase.prototype.parse.apply(this, [\n            raw,\n            index\n        ]);\n        if (value === 0) {\n            this._zero = true;\n            return undefined;\n        }\n        return isNumberFinite(value) && value > 0 ? value : null;\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n        this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n        if (this.options.beginAtZero) {\n            this._zero = true;\n        }\n        if (this._zero && this.min !== this._suggestedMin && !isNumberFinite(this._userMin)) {\n            this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n        }\n        this.handleTickRangeOptions();\n    }\n    handleTickRangeOptions() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let min = this.min;\n        let max = this.max;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (min === max) {\n            if (min <= 0) {\n                setMin(1);\n                setMax(10);\n            } else {\n                setMin(changeExponent(min, -1));\n                setMax(changeExponent(max, +1));\n            }\n        }\n        if (min <= 0) {\n            setMin(changeExponent(max, -1));\n        }\n        if (max <= 0) {\n            setMax(changeExponent(min, +1));\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const generationOptions = {\n            min: this._userMin,\n            max: this._userMax\n        };\n        const ticks = generateTicks(generationOptions, this);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n getLabelForValue(value) {\n        return value === undefined ? '0' : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n configure() {\n        const start = this.min;\n        super.configure();\n        this._startValue = log10(start);\n        this._valueRange = log10(this.max) - log10(start);\n    }\n    getPixelForValue(value) {\n        if (value === undefined || value === 0) {\n            value = this.min;\n        }\n        if (value === null || isNaN(value)) {\n            return NaN;\n        }\n        return this.getPixelForDecimal(value === this.min ? 0 : (log10(value) - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        const decimal = this.getDecimalForPixel(pixel);\n        return Math.pow(10, this._startValue + decimal * this._valueRange);\n    }\n}\n\nfunction getTickBackdropHeight(opts) {\n    const tickOpts = opts.ticks;\n    if (tickOpts.display && opts.display) {\n        const padding = toPadding(tickOpts.backdropPadding);\n        return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n    }\n    return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n    label = isArray(label) ? label : [\n        label\n    ];\n    return {\n        w: _longestText(ctx, font.string, label),\n        h: label.length * font.lineHeight\n    };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n        return {\n            start: pos - size / 2,\n            end: pos + size / 2\n        };\n    } else if (angle < min || angle > max) {\n        return {\n            start: pos - size,\n            end: pos\n        };\n    }\n    return {\n        start: pos,\n        end: pos + size\n    };\n}\n function fitWithPointLabels(scale) {\n    const orig = {\n        l: scale.left + scale._padding.left,\n        r: scale.right - scale._padding.right,\n        t: scale.top + scale._padding.top,\n        b: scale.bottom - scale._padding.bottom\n    };\n    const limits = Object.assign({}, orig);\n    const labelSizes = [];\n    const padding = [];\n    const valueCount = scale._pointLabels.length;\n    const pointLabelOpts = scale.options.pointLabels;\n    const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n    for(let i = 0; i < valueCount; i++){\n        const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n        padding[i] = opts.padding;\n        const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n        const plFont = toFont(opts.font);\n        const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n        labelSizes[i] = textSize;\n        const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n        const angle = Math.round(toDegrees(angleRadians));\n        const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n        const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n        updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n    }\n    scale.setCenterPoint(orig.l - limits.l, limits.r - orig.r, orig.t - limits.t, limits.b - orig.b);\n    scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n    const sin = Math.abs(Math.sin(angle));\n    const cos = Math.abs(Math.cos(angle));\n    let x = 0;\n    let y = 0;\n    if (hLimits.start < orig.l) {\n        x = (orig.l - hLimits.start) / sin;\n        limits.l = Math.min(limits.l, orig.l - x);\n    } else if (hLimits.end > orig.r) {\n        x = (hLimits.end - orig.r) / sin;\n        limits.r = Math.max(limits.r, orig.r + x);\n    }\n    if (vLimits.start < orig.t) {\n        y = (orig.t - vLimits.start) / cos;\n        limits.t = Math.min(limits.t, orig.t - y);\n    } else if (vLimits.end > orig.b) {\n        y = (vLimits.end - orig.b) / cos;\n        limits.b = Math.max(limits.b, orig.b + y);\n    }\n}\nfunction createPointLabelItem(scale, index, itemOpts) {\n    const outerDistance = scale.drawingArea;\n    const { extra , additionalAngle , padding , size  } = itemOpts;\n    const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    return {\n        visible: true,\n        x: pointLabelPosition.x,\n        y,\n        textAlign,\n        left,\n        top: y,\n        right: left + size.w,\n        bottom: y + size.h\n    };\n}\nfunction isNotOverlapped(item, area) {\n    if (!area) {\n        return true;\n    }\n    const { left , top , right , bottom  } = item;\n    const apexesInArea = _isPointInArea({\n        x: left,\n        y: top\n    }, area) || _isPointInArea({\n        x: left,\n        y: bottom\n    }, area) || _isPointInArea({\n        x: right,\n        y: top\n    }, area) || _isPointInArea({\n        x: right,\n        y: bottom\n    }, area);\n    return !apexesInArea;\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n    const items = [];\n    const valueCount = scale._pointLabels.length;\n    const opts = scale.options;\n    const { centerPointLabels , display  } = opts.pointLabels;\n    const itemOpts = {\n        extra: getTickBackdropHeight(opts) / 2,\n        additionalAngle: centerPointLabels ? PI / valueCount : 0\n    };\n    let area;\n    for(let i = 0; i < valueCount; i++){\n        itemOpts.padding = padding[i];\n        itemOpts.size = labelSizes[i];\n        const item = createPointLabelItem(scale, i, itemOpts);\n        items.push(item);\n        if (display === 'auto') {\n            item.visible = isNotOverlapped(item, area);\n            if (item.visible) {\n                area = item;\n            }\n        }\n    }\n    return items;\n}\nfunction getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n        return 'center';\n    } else if (angle < 180) {\n        return 'left';\n    }\n    return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n    if (align === 'right') {\n        x -= w;\n    } else if (align === 'center') {\n        x -= w / 2;\n    }\n    return x;\n}\nfunction yForAngle(y, h, angle) {\n    if (angle === 90 || angle === 270) {\n        y -= h / 2;\n    } else if (angle > 270 || angle < 90) {\n        y -= h;\n    }\n    return y;\n}\nfunction drawPointLabelBox(ctx, opts, item) {\n    const { left , top , right , bottom  } = item;\n    const { backdropColor  } = opts;\n    if (!isNullOrUndef(backdropColor)) {\n        const borderRadius = toTRBLCorners(opts.borderRadius);\n        const padding = toPadding(opts.backdropPadding);\n        ctx.fillStyle = backdropColor;\n        const backdropLeft = left - padding.left;\n        const backdropTop = top - padding.top;\n        const backdropWidth = right - left + padding.width;\n        const backdropHeight = bottom - top + padding.height;\n        if (Object.values(borderRadius).some((v)=>v !== 0)) {\n            ctx.beginPath();\n            addRoundedRectPath(ctx, {\n                x: backdropLeft,\n                y: backdropTop,\n                w: backdropWidth,\n                h: backdropHeight,\n                radius: borderRadius\n            });\n            ctx.fill();\n        } else {\n            ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n        }\n    }\n}\nfunction drawPointLabels(scale, labelCount) {\n    const { ctx , options: { pointLabels  }  } = scale;\n    for(let i = labelCount - 1; i >= 0; i--){\n        const item = scale._pointLabelItems[i];\n        if (!item.visible) {\n            continue;\n        }\n        const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n        drawPointLabelBox(ctx, optsAtIndex, item);\n        const plFont = toFont(optsAtIndex.font);\n        const { x , y , textAlign  } = item;\n        renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n            color: optsAtIndex.color,\n            textAlign: textAlign,\n            textBaseline: 'middle'\n        });\n    }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n    const { ctx  } = scale;\n    if (circular) {\n        ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n    } else {\n        let pointPosition = scale.getPointPosition(0, radius);\n        ctx.moveTo(pointPosition.x, pointPosition.y);\n        for(let i = 1; i < labelCount; i++){\n            pointPosition = scale.getPointPosition(i, radius);\n            ctx.lineTo(pointPosition.x, pointPosition.y);\n        }\n    }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n    const ctx = scale.ctx;\n    const circular = gridLineOpts.circular;\n    const { color , lineWidth  } = gridLineOpts;\n    if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n        return;\n    }\n    ctx.save();\n    ctx.strokeStyle = color;\n    ctx.lineWidth = lineWidth;\n    ctx.setLineDash(borderOpts.dash);\n    ctx.lineDashOffset = borderOpts.dashOffset;\n    ctx.beginPath();\n    pathRadiusLine(scale, radius, circular, labelCount);\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n    return createContext(parent, {\n        label,\n        index,\n        type: 'pointLabel'\n    });\n}\nclass RadialLinearScale extends LinearScaleBase {\n    static id = 'radialLinear';\n static defaults = {\n        display: true,\n        animate: true,\n        position: 'chartArea',\n        angleLines: {\n            display: true,\n            lineWidth: 1,\n            borderDash: [],\n            borderDashOffset: 0.0\n        },\n        grid: {\n            circular: false\n        },\n        startAngle: 0,\n        ticks: {\n            showLabelBackdrop: true,\n            callback: Ticks.formatters.numeric\n        },\n        pointLabels: {\n            backdropColor: undefined,\n            backdropPadding: 2,\n            display: true,\n            font: {\n                size: 10\n            },\n            callback (label) {\n                return label;\n            },\n            padding: 5,\n            centerPointLabels: false\n        }\n    };\n    static defaultRoutes = {\n        'angleLines.color': 'borderColor',\n        'pointLabels.color': 'color',\n        'ticks.color': 'color'\n    };\n    static descriptors = {\n        angleLines: {\n            _fallback: 'grid'\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.xCenter = undefined;\n         this.yCenter = undefined;\n         this.drawingArea = undefined;\n         this._pointLabels = [];\n        this._pointLabelItems = [];\n    }\n    setDimensions() {\n        const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n        const w = this.width = this.maxWidth - padding.width;\n        const h = this.height = this.maxHeight - padding.height;\n        this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n        this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n        this.drawingArea = Math.floor(Math.min(w, h) / 2);\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(false);\n        this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n        this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    }\n    generateTickLabels(ticks) {\n        LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n        this._pointLabels = this.getLabels().map((value, index)=>{\n            const label = callback(this.options.pointLabels.callback, [\n                value,\n                index\n            ], this);\n            return label || label === 0 ? label : '';\n        }).filter((v, i)=>this.chart.getDataVisibility(i));\n    }\n    fit() {\n        const opts = this.options;\n        if (opts.display && opts.pointLabels.display) {\n            fitWithPointLabels(this);\n        } else {\n            this.setCenterPoint(0, 0, 0, 0);\n        }\n    }\n    setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n        this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n        this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n        this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n    }\n    getIndexAngle(index) {\n        const angleMultiplier = TAU / (this._pointLabels.length || 1);\n        const startAngle = this.options.startAngle || 0;\n        return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n    }\n    getDistanceFromCenterForValue(value) {\n        if (isNullOrUndef(value)) {\n            return NaN;\n        }\n        const scalingFactor = this.drawingArea / (this.max - this.min);\n        if (this.options.reverse) {\n            return (this.max - value) * scalingFactor;\n        }\n        return (value - this.min) * scalingFactor;\n    }\n    getValueForDistanceFromCenter(distance) {\n        if (isNullOrUndef(distance)) {\n            return NaN;\n        }\n        const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n        return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n    }\n    getPointLabelContext(index) {\n        const pointLabels = this._pointLabels || [];\n        if (index >= 0 && index < pointLabels.length) {\n            const pointLabel = pointLabels[index];\n            return createPointLabelContext(this.getContext(), index, pointLabel);\n        }\n    }\n    getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n        const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n        return {\n            x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n            y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n            angle\n        };\n    }\n    getPointPositionForValue(index, value) {\n        return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    }\n    getBasePosition(index) {\n        return this.getPointPositionForValue(index || 0, this.getBaseValue());\n    }\n    getPointLabelPosition(index) {\n        const { left , top , right , bottom  } = this._pointLabelItems[index];\n        return {\n            left,\n            top,\n            right,\n            bottom\n        };\n    }\n drawBackground() {\n        const { backgroundColor , grid: { circular  }  } = this.options;\n        if (backgroundColor) {\n            const ctx = this.ctx;\n            ctx.save();\n            ctx.beginPath();\n            pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n            ctx.closePath();\n            ctx.fillStyle = backgroundColor;\n            ctx.fill();\n            ctx.restore();\n        }\n    }\n drawGrid() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const { angleLines , grid , border  } = opts;\n        const labelCount = this._pointLabels.length;\n        let i, offset, position;\n        if (opts.pointLabels.display) {\n            drawPointLabels(this, labelCount);\n        }\n        if (grid.display) {\n            this.ticks.forEach((tick, index)=>{\n                if (index !== 0 || index === 0 && this.min < 0) {\n                    offset = this.getDistanceFromCenterForValue(tick.value);\n                    const context = this.getContext(index);\n                    const optsAtIndex = grid.setContext(context);\n                    const optsAtIndexBorder = border.setContext(context);\n                    drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n                }\n            });\n        }\n        if (angleLines.display) {\n            ctx.save();\n            for(i = labelCount - 1; i >= 0; i--){\n                const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n                const { color , lineWidth  } = optsAtIndex;\n                if (!lineWidth || !color) {\n                    continue;\n                }\n                ctx.lineWidth = lineWidth;\n                ctx.strokeStyle = color;\n                ctx.setLineDash(optsAtIndex.borderDash);\n                ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n                offset = this.getDistanceFromCenterForValue(opts.reverse ? this.min : this.max);\n                position = this.getPointPosition(i, offset);\n                ctx.beginPath();\n                ctx.moveTo(this.xCenter, this.yCenter);\n                ctx.lineTo(position.x, position.y);\n                ctx.stroke();\n            }\n            ctx.restore();\n        }\n    }\n drawBorder() {}\n drawLabels() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        if (!tickOpts.display) {\n            return;\n        }\n        const startAngle = this.getIndexAngle(0);\n        let offset, width;\n        ctx.save();\n        ctx.translate(this.xCenter, this.yCenter);\n        ctx.rotate(startAngle);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        this.ticks.forEach((tick, index)=>{\n            if (index === 0 && this.min >= 0 && !opts.reverse) {\n                return;\n            }\n            const optsAtIndex = tickOpts.setContext(this.getContext(index));\n            const tickFont = toFont(optsAtIndex.font);\n            offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n            if (optsAtIndex.showLabelBackdrop) {\n                ctx.font = tickFont.string;\n                width = ctx.measureText(tick.label).width;\n                ctx.fillStyle = optsAtIndex.backdropColor;\n                const padding = toPadding(optsAtIndex.backdropPadding);\n                ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n            }\n            renderText(ctx, tick.label, 0, -offset, tickFont, {\n                color: optsAtIndex.color,\n                strokeColor: optsAtIndex.textStrokeColor,\n                strokeWidth: optsAtIndex.textStrokeWidth\n            });\n        });\n        ctx.restore();\n    }\n drawTitle() {}\n}\n\nconst INTERVALS = {\n    millisecond: {\n        common: true,\n        size: 1,\n        steps: 1000\n    },\n    second: {\n        common: true,\n        size: 1000,\n        steps: 60\n    },\n    minute: {\n        common: true,\n        size: 60000,\n        steps: 60\n    },\n    hour: {\n        common: true,\n        size: 3600000,\n        steps: 24\n    },\n    day: {\n        common: true,\n        size: 86400000,\n        steps: 30\n    },\n    week: {\n        common: false,\n        size: 604800000,\n        steps: 4\n    },\n    month: {\n        common: true,\n        size: 2.628e9,\n        steps: 12\n    },\n    quarter: {\n        common: false,\n        size: 7.884e9,\n        steps: 4\n    },\n    year: {\n        common: true,\n        size: 3.154e10\n    }\n};\n const UNITS =  /* #__PURE__ */ Object.keys(INTERVALS);\n function sorter(a, b) {\n    return a - b;\n}\n function parse(scale, input) {\n    if (isNullOrUndef(input)) {\n        return null;\n    }\n    const adapter = scale._adapter;\n    const { parser , round , isoWeekday  } = scale._parseOpts;\n    let value = input;\n    if (typeof parser === 'function') {\n        value = parser(value);\n    }\n    if (!isNumberFinite(value)) {\n        value = typeof parser === 'string' ? adapter.parse(value,  parser) : adapter.parse(value);\n    }\n    if (value === null) {\n        return null;\n    }\n    if (round) {\n        value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n    }\n    return +value;\n}\n function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    const ilen = UNITS.length;\n    for(let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i){\n        const interval = INTERVALS[UNITS[i]];\n        const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n        if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n            return UNITS[i];\n        }\n    }\n    return UNITS[ilen - 1];\n}\n function determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n    for(let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--){\n        const unit = UNITS[i];\n        if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n            return unit;\n        }\n    }\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n function determineMajorUnit(unit) {\n    for(let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i){\n        if (INTERVALS[UNITS[i]].common) {\n            return UNITS[i];\n        }\n    }\n}\n function addTick(ticks, time, timestamps) {\n    if (!timestamps) {\n        ticks[time] = true;\n    } else if (timestamps.length) {\n        const { lo , hi  } = _lookup(timestamps, time);\n        const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n        ticks[timestamp] = true;\n    }\n}\n function setMajorTicks(scale, ticks, map, majorUnit) {\n    const adapter = scale._adapter;\n    const first = +adapter.startOf(ticks[0].value, majorUnit);\n    const last = ticks[ticks.length - 1].value;\n    let major, index;\n    for(major = first; major <= last; major = +adapter.add(major, 1, majorUnit)){\n        index = map[major];\n        if (index >= 0) {\n            ticks[index].major = true;\n        }\n    }\n    return ticks;\n}\n function ticksFromTimestamps(scale, values, majorUnit) {\n    const ticks = [];\n     const map = {};\n    const ilen = values.length;\n    let i, value;\n    for(i = 0; i < ilen; ++i){\n        value = values[i];\n        map[value] = i;\n        ticks.push({\n            value,\n            major: false\n        });\n    }\n    return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n    static id = 'time';\n static defaults = {\n bounds: 'data',\n        adapters: {},\n        time: {\n            parser: false,\n            unit: false,\n            round: false,\n            isoWeekday: false,\n            minUnit: 'millisecond',\n            displayFormats: {}\n        },\n        ticks: {\n source: 'auto',\n            callback: false,\n            major: {\n                enabled: false\n            }\n        }\n    };\n constructor(props){\n        super(props);\n         this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n         this._unit = 'day';\n         this._majorUnit = undefined;\n        this._offsets = {};\n        this._normalized = false;\n        this._parseOpts = undefined;\n    }\n    init(scaleOpts, opts = {}) {\n        const time = scaleOpts.time || (scaleOpts.time = {});\n         const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n        adapter.init(opts);\n        mergeIf(time.displayFormats, adapter.formats());\n        this._parseOpts = {\n            parser: time.parser,\n            round: time.round,\n            isoWeekday: time.isoWeekday\n        };\n        super.init(scaleOpts);\n        this._normalized = opts.normalized;\n    }\n parse(raw, index) {\n        if (raw === undefined) {\n            return null;\n        }\n        return parse(this, raw);\n    }\n    beforeLayout() {\n        super.beforeLayout();\n        this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n    }\n    determineDataLimits() {\n        const options = this.options;\n        const adapter = this._adapter;\n        const unit = options.time.unit || 'day';\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n function _applyBounds(bounds) {\n            if (!minDefined && !isNaN(bounds.min)) {\n                min = Math.min(min, bounds.min);\n            }\n            if (!maxDefined && !isNaN(bounds.max)) {\n                max = Math.max(max, bounds.max);\n            }\n        }\n        if (!minDefined || !maxDefined) {\n            _applyBounds(this._getLabelBounds());\n            if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n                _applyBounds(this.getMinMax(false));\n            }\n        }\n        min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n        max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n        this.min = Math.min(min, max - 1);\n        this.max = Math.max(min + 1, max);\n    }\n _getLabelBounds() {\n        const arr = this.getLabelTimestamps();\n        let min = Number.POSITIVE_INFINITY;\n        let max = Number.NEGATIVE_INFINITY;\n        if (arr.length) {\n            min = arr[0];\n            max = arr[arr.length - 1];\n        }\n        return {\n            min,\n            max\n        };\n    }\n buildTicks() {\n        const options = this.options;\n        const timeOpts = options.time;\n        const tickOpts = options.ticks;\n        const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n        if (options.bounds === 'ticks' && timestamps.length) {\n            this.min = this._userMin || timestamps[0];\n            this.max = this._userMax || timestamps[timestamps.length - 1];\n        }\n        const min = this.min;\n        const max = this.max;\n        const ticks = _filterBetween(timestamps, min, max);\n        this._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min)) : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n        this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined : determineMajorUnit(this._unit);\n        this.initOffsets(timestamps);\n        if (options.reverse) {\n            ticks.reverse();\n        }\n        return ticksFromTimestamps(this, ticks, this._majorUnit);\n    }\n    afterAutoSkip() {\n        if (this.options.offsetAfterAutoskip) {\n            this.initOffsets(this.ticks.map((tick)=>+tick.value));\n        }\n    }\n initOffsets(timestamps = []) {\n        let start = 0;\n        let end = 0;\n        let first, last;\n        if (this.options.offset && timestamps.length) {\n            first = this.getDecimalForValue(timestamps[0]);\n            if (timestamps.length === 1) {\n                start = 1 - first;\n            } else {\n                start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n            }\n            last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n            if (timestamps.length === 1) {\n                end = last;\n            } else {\n                end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n            }\n        }\n        const limit = timestamps.length < 3 ? 0.5 : 0.25;\n        start = _limitValue(start, 0, limit);\n        end = _limitValue(end, 0, limit);\n        this._offsets = {\n            start,\n            end,\n            factor: 1 / (start + 1 + end)\n        };\n    }\n _generate() {\n        const adapter = this._adapter;\n        const min = this.min;\n        const max = this.max;\n        const options = this.options;\n        const timeOpts = options.time;\n        const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n        const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n        const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n        const hasWeekday = isNumber(weekday) || weekday === true;\n        const ticks = {};\n        let first = min;\n        let time, count;\n        if (hasWeekday) {\n            first = +adapter.startOf(first, 'isoWeek', weekday);\n        }\n        first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n        if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n            throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n        }\n        const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n        for(time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++){\n            addTick(ticks, time, timestamps);\n        }\n        if (time === max || options.bounds === 'ticks' || count === 1) {\n            addTick(ticks, time, timestamps);\n        }\n        return Object.keys(ticks).sort(sorter).map((x)=>+x);\n    }\n getLabelForValue(value) {\n        const adapter = this._adapter;\n        const timeOpts = this.options.time;\n        if (timeOpts.tooltipFormat) {\n            return adapter.format(value, timeOpts.tooltipFormat);\n        }\n        return adapter.format(value, timeOpts.displayFormats.datetime);\n    }\n format(value, format) {\n        const options = this.options;\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const fmt = format || formats[unit];\n        return this._adapter.format(value, fmt);\n    }\n _tickFormatFunction(time, index, ticks, format) {\n        const options = this.options;\n        const formatter = options.ticks.callback;\n        if (formatter) {\n            return callback(formatter, [\n                time,\n                index,\n                ticks\n            ], this);\n        }\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const majorUnit = this._majorUnit;\n        const minorFormat = unit && formats[unit];\n        const majorFormat = majorUnit && formats[majorUnit];\n        const tick = ticks[index];\n        const major = majorUnit && majorFormat && tick && tick.major;\n        return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    }\n generateTickLabels(ticks) {\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            tick.label = this._tickFormatFunction(tick.value, i, ticks);\n        }\n    }\n getDecimalForValue(value) {\n        return value === null ? NaN : (value - this.min) / (this.max - this.min);\n    }\n getPixelForValue(value) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForValue(value);\n        return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return this.min + pos * (this.max - this.min);\n    }\n _getLabelSize(label) {\n        const ticksOpts = this.options.ticks;\n        const tickLabelWidth = this.ctx.measureText(label).width;\n        const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n        const cosRotation = Math.cos(angle);\n        const sinRotation = Math.sin(angle);\n        const tickFontSize = this._resolveTickFontOptions(0).size;\n        return {\n            w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n            h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n        };\n    }\n _getLabelCapacity(exampleTime) {\n        const timeOpts = this.options.time;\n        const displayFormats = timeOpts.displayFormats;\n        const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n        const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [\n            exampleTime\n        ], this._majorUnit), format);\n        const size = this._getLabelSize(exampleLabel);\n        const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n        return capacity > 0 ? capacity : 1;\n    }\n getDataTimestamps() {\n        let timestamps = this._cache.data || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const metas = this.getMatchingVisibleMetas();\n        if (this._normalized && metas.length) {\n            return this._cache.data = metas[0].controller.getAllParsedValues(this);\n        }\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n        }\n        return this._cache.data = this.normalize(timestamps);\n    }\n getLabelTimestamps() {\n        const timestamps = this._cache.labels || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const labels = this.getLabels();\n        for(i = 0, ilen = labels.length; i < ilen; ++i){\n            timestamps.push(parse(this, labels[i]));\n        }\n        return this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps);\n    }\n normalize(values) {\n        return _arrayUnique(values.sort(sorter));\n    }\n}\n\nfunction interpolate(table, val, reverse) {\n    let lo = 0;\n    let hi = table.length - 1;\n    let prevSource, nextSource, prevTarget, nextTarget;\n    if (reverse) {\n        if (val >= table[lo].pos && val <= table[hi].pos) {\n            ({ lo , hi  } = _lookupByKey(table, 'pos', val));\n        }\n        ({ pos: prevSource , time: prevTarget  } = table[lo]);\n        ({ pos: nextSource , time: nextTarget  } = table[hi]);\n    } else {\n        if (val >= table[lo].time && val <= table[hi].time) {\n            ({ lo , hi  } = _lookupByKey(table, 'time', val));\n        }\n        ({ time: prevSource , pos: prevTarget  } = table[lo]);\n        ({ time: nextSource , pos: nextTarget  } = table[hi]);\n    }\n    const span = nextSource - prevSource;\n    return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n    static id = 'timeseries';\n static defaults = TimeScale.defaults;\n constructor(props){\n        super(props);\n         this._table = [];\n         this._minPos = undefined;\n         this._tableRange = undefined;\n    }\n initOffsets() {\n        const timestamps = this._getTimestampsForTable();\n        const table = this._table = this.buildLookupTable(timestamps);\n        this._minPos = interpolate(table, this.min);\n        this._tableRange = interpolate(table, this.max) - this._minPos;\n        super.initOffsets(timestamps);\n    }\n buildLookupTable(timestamps) {\n        const { min , max  } = this;\n        const items = [];\n        const table = [];\n        let i, ilen, prev, curr, next;\n        for(i = 0, ilen = timestamps.length; i < ilen; ++i){\n            curr = timestamps[i];\n            if (curr >= min && curr <= max) {\n                items.push(curr);\n            }\n        }\n        if (items.length < 2) {\n            return [\n                {\n                    time: min,\n                    pos: 0\n                },\n                {\n                    time: max,\n                    pos: 1\n                }\n            ];\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            next = items[i + 1];\n            prev = items[i - 1];\n            curr = items[i];\n            if (Math.round((next + prev) / 2) !== curr) {\n                table.push({\n                    time: curr,\n                    pos: i / (ilen - 1)\n                });\n            }\n        }\n        return table;\n    }\n _generate() {\n        const min = this.min;\n        const max = this.max;\n        let timestamps = super.getDataTimestamps();\n        if (!timestamps.includes(min) || !timestamps.length) {\n            timestamps.splice(0, 0, min);\n        }\n        if (!timestamps.includes(max) || timestamps.length === 1) {\n            timestamps.push(max);\n        }\n        return timestamps.sort((a, b)=>a - b);\n    }\n _getTimestampsForTable() {\n        let timestamps = this._cache.all || [];\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const data = this.getDataTimestamps();\n        const label = this.getLabelTimestamps();\n        if (data.length && label.length) {\n            timestamps = this.normalize(data.concat(label));\n        } else {\n            timestamps = data.length ? data : label;\n        }\n        timestamps = this._cache.all = timestamps;\n        return timestamps;\n    }\n getDecimalForValue(value) {\n        return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n    }\n}\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n    controllers,\n    elements,\n    plugins,\n    scales\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, plugin_colors as Colors, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, defaults, elements, layouts, plugins, registerables, registry, scales };\n//# sourceMappingURL=chart.js.map\n","import { Chart as Chart$1, BarController, DoughnutController, LineController, PieController, PolarAreaController, RadarController, BubbleController, ScatterController } from 'chart.js';\nimport { version, isProxy, toRaw, defineComponent, ref, shallowRef, onMounted, onUnmounted, watch, nextTick, h } from 'vue';\n\nconst CommonProps = {\n    data: {\n        type: Object,\n        required: true\n    },\n    options: {\n        type: Object,\n        default: ()=>({})\n    },\n    plugins: {\n        type: Array,\n        default: ()=>[]\n    },\n    datasetIdKey: {\n        type: String,\n        default: \"label\"\n    },\n    updateMode: {\n        type: String,\n        default: undefined\n    }\n};\nconst A11yProps = {\n    ariaLabel: {\n        type: String\n    },\n    ariaDescribedby: {\n        type: String\n    }\n};\nconst Props = {\n    type: {\n        type: String,\n        required: true\n    },\n    destroyDelay: {\n        type: Number,\n        default: 0 // No delay by default\n    },\n    ...CommonProps,\n    ...A11yProps\n};\n\nconst compatProps = version[0] === \"2\" ? (internals, props)=>Object.assign(internals, {\n        attrs: props\n    }) : (internals, props)=>Object.assign(internals, props);\nfunction toRawIfProxy(obj) {\n    return isProxy(obj) ? toRaw(obj) : obj;\n}\nfunction cloneProxy(obj) {\n    let src = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : obj;\n    return isProxy(src) ? new Proxy(obj, {}) : obj;\n}\nfunction setOptions(chart, nextOptions) {\n    const options = chart.options;\n    if (options && nextOptions) {\n        Object.assign(options, nextOptions);\n    }\n}\nfunction setLabels(currentData, nextLabels) {\n    currentData.labels = nextLabels;\n}\nfunction setDatasets(currentData, nextDatasets, datasetIdKey) {\n    const addedDatasets = [];\n    currentData.datasets = nextDatasets.map((nextDataset)=>{\n        // given the new set, find it's current match\n        const currentDataset = currentData.datasets.find((dataset)=>dataset[datasetIdKey] === nextDataset[datasetIdKey]);\n        // There is no original to update, so simply add new one\n        if (!currentDataset || !nextDataset.data || addedDatasets.includes(currentDataset)) {\n            return {\n                ...nextDataset\n            };\n        }\n        addedDatasets.push(currentDataset);\n        Object.assign(currentDataset, nextDataset);\n        return currentDataset;\n    });\n}\nfunction cloneData(data, datasetIdKey) {\n    const nextData = {\n        labels: [],\n        datasets: []\n    };\n    setLabels(nextData, data.labels);\n    setDatasets(nextData, data.datasets, datasetIdKey);\n    return nextData;\n}\n/**\n * Get dataset from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */ function getDatasetAtEvent(chart, event) {\n    return chart.getElementsAtEventForMode(event, \"dataset\", {\n        intersect: true\n    }, false);\n}\n/**\n * Get single dataset element from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */ function getElementAtEvent(chart, event) {\n    return chart.getElementsAtEventForMode(event, \"nearest\", {\n        intersect: true\n    }, false);\n}\n/**\n * Get all dataset elements from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */ function getElementsAtEvent(chart, event) {\n    return chart.getElementsAtEventForMode(event, \"index\", {\n        intersect: true\n    }, false);\n}\n\nconst Chart = defineComponent({\n    props: Props,\n    setup (props, param) {\n        let { expose , slots  } = param;\n        const canvasRef = ref(null);\n        const chartRef = shallowRef(null);\n        expose({\n            chart: chartRef\n        });\n        const renderChart = ()=>{\n            if (!canvasRef.value) return;\n            const { type , data , options , plugins , datasetIdKey  } = props;\n            const clonedData = cloneData(data, datasetIdKey);\n            const proxiedData = cloneProxy(clonedData, data);\n            chartRef.value = new Chart$1(canvasRef.value, {\n                type,\n                data: proxiedData,\n                options: {\n                    ...options\n                },\n                plugins\n            });\n        };\n        const destroyChart = ()=>{\n            const chart = toRaw(chartRef.value);\n            if (chart) {\n                if (props.destroyDelay > 0) {\n                    setTimeout(()=>{\n                        chart.destroy();\n                        chartRef.value = null;\n                    }, props.destroyDelay);\n                } else {\n                    chart.destroy();\n                    chartRef.value = null;\n                }\n            }\n        };\n        const update = (chart)=>{\n            chart.update(props.updateMode);\n        };\n        onMounted(renderChart);\n        onUnmounted(destroyChart);\n        watch([\n            ()=>props.options,\n            ()=>props.data\n        ], (param, param1)=>{\n            let [nextOptionsProxy, nextDataProxy] = param, [prevOptionsProxy, prevDataProxy] = param1;\n            const chart = toRaw(chartRef.value);\n            if (!chart) {\n                return;\n            }\n            let shouldUpdate = false;\n            if (nextOptionsProxy) {\n                const nextOptions = toRawIfProxy(nextOptionsProxy);\n                const prevOptions = toRawIfProxy(prevOptionsProxy);\n                if (nextOptions && nextOptions !== prevOptions) {\n                    setOptions(chart, nextOptions);\n                    shouldUpdate = true;\n                }\n            }\n            if (nextDataProxy) {\n                const nextLabels = toRawIfProxy(nextDataProxy.labels);\n                const prevLabels = toRawIfProxy(prevDataProxy.labels);\n                const nextDatasets = toRawIfProxy(nextDataProxy.datasets);\n                const prevDatasets = toRawIfProxy(prevDataProxy.datasets);\n                if (nextLabels !== prevLabels) {\n                    setLabels(chart.config.data, nextLabels);\n                    shouldUpdate = true;\n                }\n                if (nextDatasets && nextDatasets !== prevDatasets) {\n                    setDatasets(chart.config.data, nextDatasets, props.datasetIdKey);\n                    shouldUpdate = true;\n                }\n            }\n            if (shouldUpdate) {\n                nextTick(()=>{\n                    update(chart);\n                });\n            }\n        }, {\n            deep: true\n        });\n        return ()=>{\n            return h(\"canvas\", {\n                role: \"img\",\n                ariaLabel: props.ariaLabel,\n                ariaDescribedby: props.ariaDescribedby,\n                ref: canvasRef\n            }, [\n                h(\"p\", {}, [\n                    slots.default ? slots.default() : \"\"\n                ])\n            ]);\n        };\n    }\n});\n\nfunction createTypedChart(type, registerables) {\n    Chart$1.register(registerables);\n    return defineComponent({\n        props: CommonProps,\n        setup (props, param) {\n            let { expose  } = param;\n            const ref = shallowRef(null);\n            const reforwardRef = (chartRef)=>{\n                ref.value = chartRef?.chart;\n            };\n            expose({\n                chart: ref\n            });\n            return ()=>{\n                return h(Chart, compatProps({\n                    ref: reforwardRef\n                }, {\n                    type,\n                    ...props\n                }));\n            };\n        }\n    });\n}\nconst Bar = /* #__PURE__ */ createTypedChart(\"bar\", BarController);\nconst Doughnut = /* #__PURE__ */ createTypedChart(\"doughnut\", DoughnutController);\nconst Line = /* #__PURE__ */ createTypedChart(\"line\", LineController);\nconst Pie = /* #__PURE__ */ createTypedChart(\"pie\", PieController);\nconst PolarArea = /* #__PURE__ */ createTypedChart(\"polarArea\", PolarAreaController);\nconst Radar = /* #__PURE__ */ createTypedChart(\"radar\", RadarController);\nconst Bubble = /* #__PURE__ */ createTypedChart(\"bubble\", BubbleController);\nconst Scatter = /* #__PURE__ */ createTypedChart(\"scatter\", ScatterController);\n\nexport { Bar, Bubble, Chart, Doughnut, Line, Pie, PolarArea, Radar, Scatter, createTypedChart, getDatasetAtEvent, getElementAtEvent, getElementsAtEvent };\n//# sourceMappingURL=index.js.map\n"],"names":["round","v","lim","l","h","p2b","n2b","b2n","n2p","map$1","hex","h1","b","h2","eq","isShort","hexParse","str","len","ret","alpha","a","f","hexString","HUE_RE","hsl2rgbn","s","n","k","hsv2rgbn","hwb2rgbn","w","rgb","i","hueValue","r","g","d","max","rgb2hsl","min","calln","c","hsl2rgb","hwb2rgb","hsv2rgb","hue","hueParse","m","p1","p2","rotate","deg","hslString","map","names$1","unpack","unpacked","keys","tkeys","j","ok","nk","names","nameParse","RGB_RE","rgbParse","rgbString","to","from","interpolate","rgb1","rgb2","t","modHSL","ratio","tmp","clone","proto","fromObject","input","functionParse","Color","type","obj","color","weight","c1","c2","w2","p","w1","val","noop","uid","id","isNullOrUndef","value","isArray","isObject","isNumberFinite","finiteOrDefault","defaultValue","valueOrDefault","toDimension","dimension","callback","fn","args","thisArg","each","loopable","reverse","_elementsEqual","a0","a1","ilen","v0","v1","source","target","klen","isValidKey","key","_merger","options","tval","sval","merge","sources","merger","current","mergeIf","_mergerIf","keyResolvers","o","_splitKey","parts","part","_getKeyResolver","resolveObjectKey","_capitalize","defined","isFunction","setsEqual","item","_isClickEvent","e","PI","TAU","PITAU","INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","almostEquals","x","y","epsilon","niceNum","range","roundedRange","niceRange","fraction","_factorize","result","sqrt","isNumber","almostWhole","rounded","_setMinAndMaxByKey","array","property","toRadians","degrees","toDegrees","radians","_decimalPlaces","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","angle","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_int16Range","_isBetween","_lookup","table","cmp","index","hi","lo","mid","_lookupByKey","last","ti","_rlookupByKey","_filterBetween","values","arrayEvents","listenArrayEvents","listener","method","base","res","object","unlistenArrayEvents","stub","listeners","_arrayUnique","items","set","requestAnimFrame","throttled","argsToUse","ticking","debounce","delay","timeout","_toLeftRightCenter","align","_alignStartEnd","_textX","left","right","rtl","_getStartAndCountOfVisiblePoints","meta","points","animationsDisabled","pointCount","count","iScale","_parsed","axis","minDefined","maxDefined","_scaleRangesChanged","xScale","yScale","_scaleRanges","newRanges","changed","atEdge","elasticIn","elasticOut","effects","isPatternOrGradient","getHoverColor","numbers","colors","applyAnimationsDefaults","defaults","name","applyLayoutsDefaults","intlCache","getNumberFormat","locale","cacheKey","formatter","formatNumber","num","formatters","tickValue","ticks","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","remain","Ticks","applyScaleDefaults","_ctx","overrides","descriptors","getScope$1","node","root","scope","Defaults","_descriptors","_appliers","context","ctx","targetScope","targetName","scopeObject","targetScopeObject","privateName","local","appliers","apply","toFontString","font","_measureText","data","gc","longest","string","textWidth","_alignPixel","chart","pixel","width","devicePixelRatio","halfWidth","clearCanvas","canvas","drawPoint","drawPointLegend","xOffset","yOffset","size","cornerRadius","xOffsetW","yOffsetW","style","rotation","radius","rad","_isPointInArea","point","area","margin","clipArea","unclipArea","_steppedLineTo","previous","flip","mode","midpoint","_bezierCurveTo","setRenderOpts","opts","decorateText","line","metrics","top","bottom","yDecoration","drawBackdrop","oldColor","renderText","text","lines","stroke","addRoundedRectPath","rect","LINE_HEIGHT","FONT_STYLE","toLineHeight","matches","numberOrZero","_readValueToProps","props","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","resolve","inputs","info","_addGrace","minmax","grace","beginAtZero","change","keepZero","add","createContext","parentContext","_createResolver","scopes","prefixes","rootScopes","getTarget","finalRootScopes","_resolve","cache","_cached","_resolveWithPrefixes","getKeysFromAllScopes","storage","_attachContext","proxy","subProxy","descriptorDefaults","receiver","_resolveWithContext","_scriptable","_indexable","_allKeys","readKey","prefix","needsSubResolver","_proxy","_context","_subProxy","_resolveScriptable","_resolveArray","getValue","_stack","createSubResolver","isIndexable","arr","resolver","resolveFallback","getScope","parent","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","EPSILON","getPoint","getValueAxis","indexAxis","splineCurve","firstPoint","middlePoint","afterPoint","next","d01","d12","s01","s12","fa","fb","monotoneAdjust","deltaK","mK","pointsLen","alphaK","betaK","tauK","squaredMagnitude","pointCurrent","pointAfter","monotoneCompute","valueAxis","pointBefore","iPixel","vPixel","splineCurveMonotone","slopeDelta","capControlPoint","pt","capBezierPoints","inArea","inAreaPrev","inAreaNext","_updateBezierControlPoints","loop","controlPoints","prev","_isDomSupported","_getParentNode","domNode","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","getStyle","el","positions","getPositionedStyle","styles","suffix","pos","useOffsetPos","getCanvasPosition","touches","offsetX","offsetY","box","getRelativePosition","event","currentDevicePixelRatio","borderBox","paddings","borders","height","getContainerSize","maxWidth","maxHeight","container","containerStyle","containerBorder","containerPadding","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","containerSize","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","supportsEventListenerOptions","passiveSupported","readUsedSize","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","getRightToLeftAdapter","rectX","itemWidth","getLeftToRightAdapter","_itemWidth","getRtlAdapter","overrideTextDirection","direction","original","restoreTextDirection","propertyFn","normalizeSegment","getSegment","segment","bounds","startBound","endBound","between","normalize","_boundSegment","compare","inside","subStart","prevValue","startIsBefore","endIsBefore","shouldStart","shouldStop","_boundSegments","segments","sub","findStartAndEnd","spanGaps","solidSegments","cur","_computeSegments","segmentOptions","splitByStyles","completeLoop","doSplitByStyles","chartContext","baseStyle","readStyle","datasetIndex","prevStyle","addStyle","st","dir","styleChanged","replacer","Animator","anims","date","callbacks","numSteps","remaining","draw","charts","cb","acc","animator","transparent","interpolators","factor","c0","Animation","cfg","currentValue","elapsed","duration","promises","rej","resolved","Animations","config","animationOptions","animatedProps","option","newOptions","resolveTargetOptions","animations","awaitAll","running","animation","properties","anim","scaleClip","scale","allowedOverflow","defaultClip","toClip","getSortedDatasetIndices","filterVisible","metasets","applyStack","stack","dsIndex","singleMode","otherValue","convertObjectDataToArray","vScale","iAxisKey","vAxisKey","adata","isStacked","stacked","getStackKey","indexScale","valueScale","getUserBounds","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","positive","updateStacks","controller","parsed","iAxis","vAxis","itemStacks","visualValues","getFirstScaleId","scales","createDatasetContext","createDataContext","clearStacks","isDirectUpdateMode","cloneIfNotShared","cached","shared","createStack","canStack","DatasetController","dataset","chooseId","xid","yid","rid","iid","vid","scaleID","_data","resetNewElements","stackChanged","oldStacked","scopeKeys","_stacked","sorted","isNotInOrderComparedToPrev","labels","singleScale","xAxisKey","yAxisKey","parsedValue","otherScale","otherMin","otherMax","_skip","elements","active","drawActiveElementsOnTop","elementType","sharing","transition","sharedOptions","firstOpts","previouslySharedOptions","includeOptions","arg1","arg2","numMeta","numData","move","removed","newCount","getAllScaleValues","visibleMetas","computeMinSampleSize","curr","updateMinAndPrev","computeFitCategoryTraits","ruler","stackCount","thickness","computeFlexCategoryTraits","pixels","percent","parseFloatBar","entry","startValue","endValue","barStart","barEnd","parseValue","parseArrayOrPrimitive","isFloatBar","custom","barSign","actualBase","borderProps","setBorderSkipped","edge","parseEdge","swap","startEnd","orig","v2","setInflateAmount","inflateAmount","BarController","bars","reset","horizontal","vpixels","ipixels","dataIndex","currentParsed","iScaleValue","skipNull","barThickness","baseValue","minBarLength","floating","length","head","startPixel","endPixel","halfGrid","maxBarThickness","center","stackIndex","rects","LineController","_dataset","maxGapLength","directUpdate","pointsCount","prevParsed","nullData","border","lastPoint","abstract","DateAdapterBase","members","adapters","binarySearch","metaset","intersect","_sorted","lookupMethod","evaluateInteractionItems","position","handler","getDistanceMetricForAxis","useX","useY","deltaX","deltaY","getIntersectItems","useFinalPosition","includeInvisible","getNearestRadialItems","evaluationFunc","startAngle","endAngle","getNearestCartesianItems","distanceMetric","minDistance","inRange","distance","getNearestItems","getAxisItems","rangeMethod","intersectsItem","Interaction","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","wrapBoxes","boxes","layoutBoxes","stackWeight","buildStacks","layouts","wrap","setLayoutDims","params","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","buildLayoutBoxes","centerHorizontal","centerVertical","getCombinedMax","maxPadding","chartArea","updateMaxPadding","boxPadding","updateDims","newWidth","newHeight","widthChanged","heightChanged","handleMaxPadding","updatePos","getMargins","marginForPositions","fitBoxes","refitBoxes","refit","same","other","setBoxDims","placeBoxes","userPadding","layoutItem","minPadding","padding","availableWidth","availableHeight","verticalBoxes","horizontalBoxes","visibleVerticalBoxCount","total","BasePlatform","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","isNullOrEmpty","initCanvas","renderHeight","renderWidth","displayWidth","displayHeight","eventListenerOptions","addListener","removeListener","fromNativeEvent","nodeListContains","nodeList","createAttachObserver","observer","entries","trigger","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","resize","listenDevicePixelRatioChanges","unlistenDevicePixelRatioChanges","createResizeObserver","releaseObserver","createProxyAndListen","DomPlatform","initial","proxies","_detectPlatform","Element","final","autoSkip","tickOpts","determinedMaxTicks","determineMaxTicks","ticksLimit","majorIndices","getMajorIndices","numMajorIndices","first","newTicks","skipMajors","spacing","calculateSpacing","avgMajorSpacing","skip","offset","tickLength","maxScale","maxChart","evenMajorSpacing","getEvenSpacing","factors","majorStart","majorEnd","diff","reverseAlign","offsetFromEdge","getTicksLimit","ticksLength","maxTicksLimit","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","lineValue","garbageCollect","caches","gcLen","getTickMarkLength","getTitleHeight","createScaleContext","createTickContext","tick","titleAlign","titleArgs","titleX","titleY","positionAxisID","Scale","raw","_userMin","_userMax","_suggestedMin","_suggestedMax","metas","sampleSize","samplingEnabled","reversePixels","numTicks","minRotation","maxRotation","labelRotation","tickWidth","maxLabelDiagonal","labelSizes","maxLabelWidth","maxLabelHeight","minSize","titleOpts","gridOpts","display","isHorizontal","titleHeight","widest","highest","tickPadding","angleRadians","cos","sin","labelHeight","labelWidth","isRotated","labelsBelowTicks","offsetLeft","offsetRight","paddingLeft","paddingRight","paddingTop","paddingBottom","widths","heights","widestLabelSize","highestLabelSize","jlen","label","tickFont","fontString","lineHeight","nestedLabel","valueAt","idx","decimal","optionTicks","rot","grid","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","limit","step","optsAtIndex","optsAtIndexBorder","lineWidth","lineColor","borderDash","borderDashOffset","tickColor","tickBorderDash","tickBorderDashOffset","crossAlign","mirror","tickAndPadding","hTickAndPadding","textAlign","lineCount","textOffset","textBaseline","halfCount","strokeColor","strokeWidth","tickTextAlign","backdrop","labelPadding","backgroundColor","drawLine","lastLineWidth","renderTextOptions","title","tz","gz","bz","axisID","fontSize","TypedRegistry","override","parentScope","isIChartComponent","registerDefaults","itemDefaults","routeDefaults","routes","propertyParts","sourceName","sourceScope","Registry","typedRegistry","arg","reg","itemReg","registry","component","camelMethod","PluginService","hook","filter","descriptor","plugin","all","plugins","allPlugins","createDescriptors","previousDescriptors","localIds","getOpts","pluginOpts","getIndexAxis","datasetDefaults","getAxisFromDefaultScaleID","getDefaultScaleIDFromAxis","idMatchesAxis","axisFromPosition","determineAxis","scaleOptions","getAxisFromDataset","retrieveAxisFromDatasets","boundDs","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","scaleConf","defaultId","defaultScaleOptions","defaultID","initOptions","initData","initConfig","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","datasetType","mainScope","resetCache","_scopeCache","keyLists","subPrefixes","getResolver","needContext","subResolver","resolverCache","hasFunction","isScriptable","scriptable","indexable","version","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onAnimationProgress","getCanvas","instances","getChart","moveNumericKeys","intKey","determineLastEvent","lastEvent","inChartArea","isClick","getSizeForArea","field","getDatasetArea","Chart$1","invalidatePlugins","userConfig","initialCanvas","existingChart","maintainAspectRatio","_aspectRatio","newSize","newRatio","scalesOptions","axisOptions","scaleOpts","updated","isRadial","scaleType","scaleClass","hasUpdated","datasets","newControllers","ControllerClass","datasetElementType","dataElementType","animsDisabled","_active","_lastEvent","existingEvents","newEvents","_hiddenIndices","changes","_dataChanges","datasetCount","makeSet","changeSet","noArea","layers","clip","useClip","visible","platform","_add","_remove","detached","attached","enabled","activeElements","lastActive","pluginId","replay","hoverOptions","deactivated","activated","eventFilter","Chart","setStyle","lineTo","getLineMethod","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","fastPathSegment","avgX","countX","prevX","minY","maxY","lastY","pointIndex","drawX","truncX","_getSegmentMethod","_getInterpolationMethod","strokePathWithCache","path","strokePathDirect","segmentMethod","usePath2D","LineElement","_interpolate","interpolated","inRange$1","PointElement","mouseX","mouseY","borderWidth","getBarBounds","bar","half","skipOrLimit","parseBorderWidth","maxW","maxH","parseBorderRadius","enableBorderRadius","maxR","enableBorder","boundingRects","skipX","skipY","hasRadius","addNormalRectPath","inflateRect","amount","refRect","BarElement","borderColor","inner","outer","addRectPath","_segments","tpoints","_findSegmentEnd","_getBounds","targetSegments","tgt","subBounds","fillSources","fillSource","_getEdge","_pointsFromSegments","boundary","linePoints","_createBoundaryLine","_loop","_shouldApplyFill","_resolveTarget","propagate","fill","visited","_decodeFill","parseFillOption","decodeTargetIndex","firstCh","_getTargetPixel","_getTargetValue","fillOption","_buildStackLine","sourcePoints","linesBelow","getLinesBelow","addPointsBelow","below","sourcePoint","postponed","findPoint","pointValue","firstValue","lastValue","simpleArc","_getTarget","getLineByIndex","computeBoundary","computeCircularBoundary","computeLinearBoundary","_drawfill","lineOpts","above","doFill","clipVertical","clipY","lineLoop","src","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","_args","getBoxSize","labelOpts","boxHeight","boxWidth","itemsEqual","Legend","legendItems","labelFont","itemHeight","hitboxes","lineWidths","totalHeight","row","legendItem","_itemHeight","columnSizes","heightLimit","totalWidth","currentColWidth","currentColHeight","col","calculateItemSize","rtlHelper","hitbox","defaultColor","halfFontSize","cursor","drawLegendBox","drawOptions","centerX","centerY","yBoxTop","xBoxLeft","borderRadius","fillText","realX","fontLineHeight","calculateLegendItemHeight","titleFont","titlePadding","topPaddingPlusHalfFontSize","hitBox","lh","isListened","hoveredItem","sameItem","calculateItemWidth","calculateItemHeight","legendItemText","plugin_legend","legend","ci","usePointStyle","pointStyle","useBorderRadius","Title","textSize","fontOpts","createTitle","plugin_title","titleBlock","positioners","xSet","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","createTooltipItem","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","bodyLineHeight","widthPadding","maxLineWidth","determineYAlign","doesNotFitWithAlign","xAlign","caret","determineXAlign","yAlign","chartWidth","determineAlignment","alignX","alignY","paddingAndSize","getBackgroundPoint","alignment","caretSize","caretPadding","topLeft","topRight","bottomLeft","bottomRight","getAlignedX","getBeforeAfterBodyLines","createTooltipContext","tooltipItems","overrideCallbacks","defaultCallbacks","labelCount","tooltipItem","invokeCallbackWithFallback","Tooltip","beforeTitle","afterTitle","bodyItems","scoped","beforeFooter","afterFooter","labelColors","labelPointStyles","labelTextColors","positionAndSize","backgroundPoint","tooltipPoint","caretPosition","ptX","ptY","x3","y3","titleSpacing","labelColor","labelPointStyle","colorX","rtlColorX","yOffSet","colorY","outerX","innerX","bodySpacing","bodyAlign","displayColors","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","tooltipSize","animX","animY","opacity","hasTooltipContent","positionChanged","caretX","caretY","plugin_tooltip","addIfString","addedLabels","findOrAddLabel","_getLabelForValue","CategoryScale","added","generateTicks$1","generationOptions","dataRange","precision","maxTicks","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","decimalPlaces","relativeLabelSize","LinearScaleBase","setMin","setMax","minSign","maxSign","stepSize","numericGeneratorOptions","LinearScale","INTERVALS","UNITS","sorter","parse","adapter","parser","isoWeekday","determineUnitForAutoTicks","minUnit","capacity","interval","determineUnitForFormatting","determineMajorUnit","addTick","time","timestamps","timestamp","setMajorTicks","majorUnit","major","ticksFromTimestamps","TimeScale","_applyBounds","timeOpts","minor","weekday","hasWeekday","format","formats","fmt","minorFormat","majorFormat","offsets","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","displayFormats","exampleLabel","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","CommonProps","A11yProps","Props","compatProps","internals","toRawIfProxy","isProxy","toRaw","cloneProxy","setOptions","nextOptions","setLabels","currentData","nextLabels","setDatasets","nextDatasets","datasetIdKey","addedDatasets","nextDataset","currentDataset","cloneData","nextData","defineComponent","param","expose","slots","canvasRef","ref","chartRef","shallowRef","renderChart","clonedData","proxiedData","destroyChart","update","onMounted","onUnmounted","watch","param1","nextOptionsProxy","nextDataProxy","prevOptionsProxy","prevDataProxy","shouldUpdate","prevOptions","prevLabels","prevDatasets","nextTick","createTypedChart","registerables","reforwardRef","Bar","Line"],"mappings":"4HAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAMA,SAASA,GAAMC,EAAG,CAChB,OAAOA,EAAI,GAAM,CACnB,CACA,MAAMC,GAAM,CAACD,EAAGE,EAAGC,IAAM,KAAK,IAAI,KAAK,IAAIH,EAAGG,CAAC,EAAGD,CAAC,EACnD,SAASE,GAAIJ,EAAG,CACd,OAAOC,GAAIF,GAAMC,EAAI,IAAI,EAAG,EAAG,GAAG,CACpC,CAIA,SAASK,GAAIL,EAAG,CACd,OAAOC,GAAIF,GAAMC,EAAI,GAAG,EAAG,EAAG,GAAG,CACnC,CACA,SAASM,GAAIN,EAAG,CACd,OAAOC,GAAIF,GAAMC,EAAI,IAAI,EAAI,IAAK,EAAG,CAAC,CACxC,CACA,SAASO,GAAIP,EAAG,CACd,OAAOC,GAAIF,GAAMC,EAAI,GAAG,EAAG,EAAG,GAAG,CACnC,CAEA,MAAMQ,EAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,EAAE,EACvJC,GAAM,CAAC,GAAG,kBAAkB,EAC5BC,GAAKC,GAAKF,GAAIE,EAAI,EAAG,EACrBC,GAAKD,GAAKF,IAAKE,EAAI,MAAS,CAAC,EAAIF,GAAIE,EAAI,EAAG,EAC5CE,GAAKF,IAAOA,EAAI,MAAS,KAAQA,EAAI,IACrCG,GAAUd,GAAKa,GAAGb,EAAE,CAAC,GAAKa,GAAGb,EAAE,CAAC,GAAKa,GAAGb,EAAE,CAAC,GAAKa,GAAGb,EAAE,CAAC,EAC5D,SAASe,GAASC,EAAK,CACrB,IAAIC,EAAMD,EAAI,OACVE,EACJ,OAAIF,EAAI,CAAC,IAAM,MACTC,IAAQ,GAAKA,IAAQ,EACvBC,EAAM,CACJ,EAAG,IAAMV,EAAMQ,EAAI,CAAC,CAAC,EAAI,GACzB,EAAG,IAAMR,EAAMQ,EAAI,CAAC,CAAC,EAAI,GACzB,EAAG,IAAMR,EAAMQ,EAAI,CAAC,CAAC,EAAI,GACzB,EAAGC,IAAQ,EAAIT,EAAMQ,EAAI,CAAC,CAAC,EAAI,GAAK,GAC5C,GACeC,IAAQ,GAAKA,IAAQ,KAC9BC,EAAM,CACJ,EAAGV,EAAMQ,EAAI,CAAC,CAAC,GAAK,EAAIR,EAAMQ,EAAI,CAAC,CAAC,EACpC,EAAGR,EAAMQ,EAAI,CAAC,CAAC,GAAK,EAAIR,EAAMQ,EAAI,CAAC,CAAC,EACpC,EAAGR,EAAMQ,EAAI,CAAC,CAAC,GAAK,EAAIR,EAAMQ,EAAI,CAAC,CAAC,EACpC,EAAGC,IAAQ,EAAKT,EAAMQ,EAAI,CAAC,CAAC,GAAK,EAAIR,EAAMQ,EAAI,CAAC,CAAC,EAAK,GAC9D,IAGSE,CACT,CACA,MAAMC,GAAQ,CAACC,EAAGC,IAAMD,EAAI,IAAMC,EAAED,CAAC,EAAI,GACzC,SAASE,GAAUtB,EAAG,CACpB,IAAIqB,EAAIP,GAAQd,CAAC,EAAIU,GAAKE,GAC1B,OAAOZ,EACH,IAAMqB,EAAErB,EAAE,CAAC,EAAIqB,EAAErB,EAAE,CAAC,EAAIqB,EAAErB,EAAE,CAAC,EAAImB,GAAMnB,EAAE,EAAGqB,CAAC,EAC7C,MACN,CAEA,MAAME,GAAS,+GACf,SAASC,GAASrB,EAAGsB,EAAGvB,EAAG,CACzB,MAAMkB,EAAIK,EAAI,KAAK,IAAIvB,EAAG,EAAIA,CAAC,EACzBmB,EAAI,CAACK,EAAGC,GAAKD,EAAIvB,EAAI,IAAM,KAAOD,EAAIkB,EAAI,KAAK,IAAI,KAAK,IAAIO,EAAI,EAAG,EAAIA,EAAG,CAAC,EAAG,EAAE,EACtF,MAAO,CAACN,EAAE,CAAC,EAAGA,EAAE,CAAC,EAAGA,EAAE,CAAC,CAAC,CAC1B,CACA,SAASO,GAASzB,EAAGsB,EAAGzB,EAAG,CACzB,MAAMqB,EAAI,CAAC,EAAGM,GAAK,EAAIxB,EAAI,IAAM,IAAMH,EAAIA,EAAIyB,EAAI,KAAK,IAAI,KAAK,IAAIE,EAAG,EAAIA,EAAG,CAAC,EAAG,CAAC,EACpF,MAAO,CAACN,EAAE,CAAC,EAAGA,EAAE,CAAC,EAAGA,EAAE,CAAC,CAAC,CAC1B,CACA,SAASQ,GAAS1B,EAAG2B,EAAGnB,EAAG,CACzB,MAAMoB,EAAMP,GAASrB,EAAG,EAAG,EAAG,EAC9B,IAAI6B,EAMJ,IALIF,EAAInB,EAAI,IACVqB,EAAI,GAAKF,EAAInB,GACbmB,GAAKE,EACLrB,GAAKqB,GAEFA,EAAI,EAAGA,EAAI,EAAGA,IACjBD,EAAIC,CAAC,GAAK,EAAIF,EAAInB,EAClBoB,EAAIC,CAAC,GAAKF,EAEZ,OAAOC,CACT,CACA,SAASE,GAASC,EAAGC,EAAGxB,EAAGyB,EAAGC,EAAK,CACjC,OAAIH,IAAMG,GACCF,EAAIxB,GAAKyB,GAAMD,EAAIxB,EAAI,EAAI,GAElCwB,IAAME,GACA1B,EAAIuB,GAAKE,EAAI,GAEfF,EAAIC,GAAKC,EAAI,CACvB,CACA,SAASE,GAAQtC,EAAG,CAElB,MAAMkC,EAAIlC,EAAE,EAAI,IACVmC,EAAInC,EAAE,EAAI,IACVW,EAAIX,EAAE,EAAI,IACVqC,EAAM,KAAK,IAAIH,EAAGC,EAAGxB,CAAC,EACtB4B,EAAM,KAAK,IAAIL,EAAGC,EAAGxB,CAAC,EACtBT,GAAKmC,EAAME,GAAO,EACxB,IAAIpC,EAAGsB,EAAGW,EACV,OAAIC,IAAQE,IACVH,EAAIC,EAAME,EACVd,EAAIvB,EAAI,GAAMkC,GAAK,EAAIC,EAAME,GAAOH,GAAKC,EAAME,GAC/CpC,EAAI8B,GAASC,EAAGC,EAAGxB,EAAGyB,EAAGC,CAAG,EAC5BlC,EAAIA,EAAI,GAAK,IAER,CAACA,EAAI,EAAGsB,GAAK,EAAGvB,CAAC,CAC1B,CACA,SAASsC,GAAMnB,EAAGD,EAAGT,EAAG8B,EAAG,CACzB,OACE,MAAM,QAAQrB,CAAC,EACXC,EAAED,EAAE,CAAC,EAAGA,EAAE,CAAC,EAAGA,EAAE,CAAC,CAAC,EAClBC,EAAED,EAAGT,EAAG8B,CAAC,GACb,IAAIpC,EAAG,CACX,CACA,SAASqC,GAAQvC,EAAGsB,EAAGvB,EAAG,CACxB,OAAOsC,GAAMhB,GAAUrB,EAAGsB,EAAGvB,CAAC,CAChC,CACA,SAASyC,GAAQxC,EAAG2B,EAAGnB,EAAG,CACxB,OAAO6B,GAAMX,GAAU1B,EAAG2B,EAAGnB,CAAC,CAChC,CACA,SAASiC,GAAQzC,EAAGsB,EAAGzB,EAAG,CACxB,OAAOwC,GAAMZ,GAAUzB,EAAGsB,EAAGzB,CAAC,CAChC,CACA,SAAS6C,GAAI1C,EAAG,CACd,OAAQA,EAAI,IAAM,KAAO,GAC3B,CACA,SAAS2C,GAAS9B,EAAK,CACrB,MAAM+B,EAAIxB,GAAO,KAAKP,CAAG,EACzB,IAAII,EAAI,IACJpB,EACJ,GAAI,CAAC+C,EACH,OAEEA,EAAE,CAAC,IAAM/C,IACXoB,EAAI2B,EAAE,CAAC,EAAI3C,GAAI,CAAC2C,EAAE,CAAC,CAAC,EAAI1C,GAAI,CAAC0C,EAAE,CAAC,CAAC,GAEnC,MAAM5C,EAAI0C,GAAI,CAACE,EAAE,CAAC,CAAC,EACbC,EAAK,CAACD,EAAE,CAAC,EAAI,IACbE,EAAK,CAACF,EAAE,CAAC,EAAI,IACnB,OAAIA,EAAE,CAAC,IAAM,MACX/C,EAAI2C,GAAQxC,EAAG6C,EAAIC,CAAE,EACZF,EAAE,CAAC,IAAM,MAClB/C,EAAI4C,GAAQzC,EAAG6C,EAAIC,CAAE,EAErBjD,EAAI0C,GAAQvC,EAAG6C,EAAIC,CAAE,EAEhB,CACL,EAAGjD,EAAE,CAAC,EACN,EAAGA,EAAE,CAAC,EACN,EAAGA,EAAE,CAAC,EACN,EAAGoB,CACP,CACA,CACA,SAAS8B,GAAOlD,EAAGmD,EAAK,CACtB,IAAIhD,EAAImC,GAAQtC,CAAC,EACjBG,EAAE,CAAC,EAAI0C,GAAI1C,EAAE,CAAC,EAAIgD,CAAG,EACrBhD,EAAIuC,GAAQvC,CAAC,EACbH,EAAE,EAAIG,EAAE,CAAC,EACTH,EAAE,EAAIG,EAAE,CAAC,EACTH,EAAE,EAAIG,EAAE,CAAC,CACX,CACA,SAASiD,GAAUpD,EAAG,CACpB,GAAI,CAACA,EACH,OAEF,MAAMoB,EAAIkB,GAAQtC,CAAC,EACbG,EAAIiB,EAAE,CAAC,EACP,EAAIb,GAAIa,EAAE,CAAC,CAAC,EACZlB,EAAIK,GAAIa,EAAE,CAAC,CAAC,EAClB,OAAOpB,EAAE,EAAI,IACT,QAAQG,CAAC,KAAK,CAAC,MAAMD,CAAC,MAAMI,GAAIN,EAAE,CAAC,CAAC,IACpC,OAAOG,CAAC,KAAK,CAAC,MAAMD,CAAC,IAC3B,CAEA,MAAMmD,GAAM,CACV,EAAG,OACH,EAAG,QACH,EAAG,KACH,EAAG,MACH,EAAG,KACH,EAAG,SACH,EAAG,QACH,EAAG,KACH,EAAG,KACH,EAAG,KACH,EAAG,KACH,EAAG,QACH,EAAG,QACH,EAAG,KACH,EAAG,WACH,EAAG,KACH,EAAG,KACH,EAAG,KACH,EAAG,KACH,EAAG,KACH,EAAG,QACH,EAAG,KACH,EAAG,KACH,EAAG,OACH,EAAG,KACH,EAAG,QACH,EAAG,IACL,EACMC,GAAU,CACd,OAAQ,SACR,YAAa,SACb,KAAM,OACN,UAAW,SACX,KAAM,SACN,MAAO,SACP,OAAQ,SACR,MAAO,IACP,aAAc,SACd,GAAI,KACJ,QAAS,SACT,KAAM,SACN,UAAW,SACX,OAAQ,SACR,SAAU,SACV,QAAS,SACT,IAAK,SACL,YAAa,SACb,QAAS,SACT,QAAS,SACT,KAAM,OACN,IAAK,KACL,MAAO,OACP,QAAS,SACT,KAAM,SACN,KAAM,OACN,KAAM,SACN,OAAQ,SACR,QAAS,SACT,SAAU,SACV,OAAQ,SACR,MAAO,SACP,IAAK,SACL,OAAQ,SACR,OAAQ,SACR,KAAM,SACN,MAAO,SACP,MAAO,SACP,IAAK,OACL,OAAQ,SACR,OAAQ,SACR,SAAU,OACV,OAAQ,SACR,OAAQ,SACR,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,OAAQ,SACR,QAAS,SACT,UAAW,SACX,IAAK,SACL,OAAQ,SACR,IAAK,SACL,IAAK,OACL,MAAO,SACP,IAAK,SACL,QAAS,SACT,OAAQ,SACR,QAAS,SACT,MAAO,SACP,KAAM,SACN,MAAO,SACP,OAAQ,SACR,UAAW,SACX,QAAS,SACT,WAAY,SACZ,IAAK,SACL,KAAM,SACN,MAAO,SACP,UAAW,SACX,KAAM,SACN,KAAM,SACN,KAAM,SACN,KAAM,SACN,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,MAAO,SACP,MAAO,SACP,QAAS,SACT,IAAK,SACL,KAAM,OACN,QAAS,SACT,IAAK,SACL,OAAQ,SACR,MAAO,SACP,WAAY,SACZ,IAAK,KACL,MAAO,SACP,OAAQ,SACR,OAAQ,SACR,KAAM,SACN,UAAW,OACX,IAAK,SACL,SAAU,SACV,WAAY,SACZ,QAAS,SACT,SAAU,SACV,QAAS,SACT,WAAY,SACZ,KAAM,KACN,OAAQ,SACR,KAAM,SACN,QAAS,SACT,MAAO,SACP,QAAS,SACT,KAAM,SACN,UAAW,SACX,OAAQ,SACR,MAAO,SACP,WAAY,SACZ,UAAW,SACX,QAAS,SACT,KAAM,SACN,IAAK,SACL,KAAM,SACN,QAAS,SACT,MAAO,SACP,YAAa,SACb,GAAI,SACJ,SAAU,SACV,MAAO,SACP,UAAW,SACX,MAAO,SACP,UAAW,SACX,MAAO,SACP,QAAS,SACT,MAAO,SACP,OAAQ,SACR,MAAO,SACP,IAAK,SACL,KAAM,SACN,KAAM,SACN,KAAM,SACN,SAAU,OACV,OAAQ,SACR,IAAK,SACL,IAAK,OACL,MAAO,SACP,OAAQ,SACR,GAAI,SACJ,MAAO,SACP,IAAK,SACL,KAAM,SACN,UAAW,SACX,GAAI,SACJ,MAAO,QACT,EACA,SAASC,IAAS,CAChB,MAAMC,EAAW,CAAA,EACXC,EAAO,OAAO,KAAKH,EAAO,EAC1BI,EAAQ,OAAO,KAAKL,EAAG,EAC7B,IAAIrB,EAAG2B,EAAGhC,EAAGiC,EAAIC,EACjB,IAAK7B,EAAI,EAAGA,EAAIyB,EAAK,OAAQzB,IAAK,CAEhC,IADA4B,EAAKC,EAAKJ,EAAKzB,CAAC,EACX2B,EAAI,EAAGA,EAAID,EAAM,OAAQC,IAC5BhC,EAAI+B,EAAMC,CAAC,EACXE,EAAKA,EAAG,QAAQlC,EAAG0B,GAAI1B,CAAC,CAAC,EAE3BA,EAAI,SAAS2B,GAAQM,CAAE,EAAG,EAAE,EAC5BJ,EAASK,CAAE,EAAI,CAAClC,GAAK,GAAK,IAAMA,GAAK,EAAI,IAAMA,EAAI,GAAI,CACxD,CACD,OAAO6B,CACT,CAEA,IAAIM,GACJ,SAASC,GAAU/C,EAAK,CACjB8C,KACHA,GAAQP,GAAM,EACdO,GAAM,YAAc,CAAC,EAAG,EAAG,EAAG,CAAC,GAEjC,MAAM1C,EAAI0C,GAAM9C,EAAI,YAAa,CAAA,EACjC,OAAOI,GAAK,CACV,EAAGA,EAAE,CAAC,EACN,EAAGA,EAAE,CAAC,EACN,EAAGA,EAAE,CAAC,EACN,EAAGA,EAAE,SAAW,EAAIA,EAAE,CAAC,EAAI,GAC/B,CACA,CAEA,MAAM4C,GAAS,uGACf,SAASC,GAASjD,EAAK,CACrB,MAAM+B,EAAIiB,GAAO,KAAKhD,CAAG,EACzB,IAAII,EAAI,IACJc,EAAGC,EAAGxB,EACV,GAAKoC,EAGL,IAAIA,EAAE,CAAC,IAAMb,EAAG,CACd,MAAMlC,EAAI,CAAC+C,EAAE,CAAC,EACd3B,EAAI2B,EAAE,CAAC,EAAI3C,GAAIJ,CAAC,EAAIC,GAAID,EAAI,IAAK,EAAG,GAAG,CACxC,CACD,OAAAkC,EAAI,CAACa,EAAE,CAAC,EACRZ,EAAI,CAACY,EAAE,CAAC,EACRpC,EAAI,CAACoC,EAAE,CAAC,EACRb,EAAI,KAAOa,EAAE,CAAC,EAAI3C,GAAI8B,CAAC,EAAIjC,GAAIiC,EAAG,EAAG,GAAG,GACxCC,EAAI,KAAOY,EAAE,CAAC,EAAI3C,GAAI+B,CAAC,EAAIlC,GAAIkC,EAAG,EAAG,GAAG,GACxCxB,EAAI,KAAOoC,EAAE,CAAC,EAAI3C,GAAIO,CAAC,EAAIV,GAAIU,EAAG,EAAG,GAAG,GACjC,CACL,EAAGuB,EACH,EAAGC,EACH,EAAGxB,EACH,EAAGS,CACP,EACA,CACA,SAAS8C,GAAUlE,EAAG,CACpB,OAAOA,IACLA,EAAE,EAAI,IACF,QAAQA,EAAE,CAAC,KAAKA,EAAE,CAAC,KAAKA,EAAE,CAAC,KAAKM,GAAIN,EAAE,CAAC,CAAC,IACxC,OAAOA,EAAE,CAAC,KAAKA,EAAE,CAAC,KAAKA,EAAE,CAAC,IAElC,CAEA,MAAMmE,GAAKnE,GAAKA,GAAK,SAAYA,EAAI,MAAQ,KAAK,IAAIA,EAAG,EAAM,GAAG,EAAI,MAAQ,KACxEoE,GAAOpE,GAAKA,GAAK,OAAUA,EAAI,MAAQ,KAAK,KAAKA,EAAI,MAAS,MAAO,GAAG,EAC9E,SAASqE,GAAYC,EAAMC,EAAMC,EAAG,CAClC,MAAMtC,EAAIkC,GAAK9D,GAAIgE,EAAK,CAAC,CAAC,EACpBnC,EAAIiC,GAAK9D,GAAIgE,EAAK,CAAC,CAAC,EACpB3D,EAAIyD,GAAK9D,GAAIgE,EAAK,CAAC,CAAC,EAC1B,MAAO,CACL,EAAGjE,GAAI8D,GAAGjC,EAAIsC,GAAKJ,GAAK9D,GAAIiE,EAAK,CAAC,CAAC,EAAIrC,EAAE,CAAC,EAC1C,EAAG7B,GAAI8D,GAAGhC,EAAIqC,GAAKJ,GAAK9D,GAAIiE,EAAK,CAAC,CAAC,EAAIpC,EAAE,CAAC,EAC1C,EAAG9B,GAAI8D,GAAGxD,EAAI6D,GAAKJ,GAAK9D,GAAIiE,EAAK,CAAC,CAAC,EAAI5D,EAAE,CAAC,EAC1C,EAAG2D,EAAK,EAAIE,GAAKD,EAAK,EAAID,EAAK,EACnC,CACA,CAEA,SAASG,GAAOzE,EAAGgC,EAAG0C,EAAO,CAC3B,GAAI1E,EAAG,CACL,IAAI2E,EAAMrC,GAAQtC,CAAC,EACnB2E,EAAI3C,CAAC,EAAI,KAAK,IAAI,EAAG,KAAK,IAAI2C,EAAI3C,CAAC,EAAI2C,EAAI3C,CAAC,EAAI0C,EAAO1C,IAAM,EAAI,IAAM,CAAC,CAAC,EACzE2C,EAAMjC,GAAQiC,CAAG,EACjB3E,EAAE,EAAI2E,EAAI,CAAC,EACX3E,EAAE,EAAI2E,EAAI,CAAC,EACX3E,EAAE,EAAI2E,EAAI,CAAC,CACZ,CACH,CACA,SAASC,GAAM5E,EAAG6E,EAAO,CACvB,OAAO7E,GAAI,OAAO,OAAO6E,GAAS,GAAI7E,CAAC,CACzC,CACA,SAAS8E,GAAWC,EAAO,CACzB,IAAI/E,EAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAG,EACjC,OAAI,MAAM,QAAQ+E,CAAK,EACjBA,EAAM,QAAU,IAClB/E,EAAI,CAAC,EAAG+E,EAAM,CAAC,EAAG,EAAGA,EAAM,CAAC,EAAG,EAAGA,EAAM,CAAC,EAAG,EAAG,GAAG,EAC9CA,EAAM,OAAS,IACjB/E,EAAE,EAAIK,GAAI0E,EAAM,CAAC,CAAC,KAItB/E,EAAI4E,GAAMG,EAAO,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,CAAC,CAAC,EACzC/E,EAAE,EAAIK,GAAIL,EAAE,CAAC,GAERA,CACT,CACA,SAASgF,GAAchE,EAAK,CAC1B,OAAIA,EAAI,OAAO,CAAC,IAAM,IACbiD,GAASjD,CAAG,EAEd8B,GAAS9B,CAAG,CACrB,CACA,MAAMiE,EAAM,CACV,YAAYF,EAAO,CACjB,GAAIA,aAAiBE,GACnB,OAAOF,EAET,MAAMG,EAAO,OAAOH,EACpB,IAAI/E,EACAkF,IAAS,SACXlF,EAAI8E,GAAWC,CAAK,EACXG,IAAS,WAClBlF,EAAIe,GAASgE,CAAK,GAAKhB,GAAUgB,CAAK,GAAKC,GAAcD,CAAK,GAEhE,KAAK,KAAO/E,EACZ,KAAK,OAAS,CAAC,CAACA,CACjB,CACD,IAAI,OAAQ,CACV,OAAO,KAAK,MACb,CACD,IAAI,KAAM,CACR,IAAIA,EAAI4E,GAAM,KAAK,IAAI,EACvB,OAAI5E,IACFA,EAAE,EAAIM,GAAIN,EAAE,CAAC,GAERA,CACR,CACD,IAAI,IAAImF,EAAK,CACX,KAAK,KAAOL,GAAWK,CAAG,CAC3B,CACD,WAAY,CACV,OAAO,KAAK,OAASjB,GAAU,KAAK,IAAI,EAAI,MAC7C,CACD,WAAY,CACV,OAAO,KAAK,OAAS5C,GAAU,KAAK,IAAI,EAAI,MAC7C,CACD,WAAY,CACV,OAAO,KAAK,OAAS8B,GAAU,KAAK,IAAI,EAAI,MAC7C,CACD,IAAIgC,EAAOC,EAAQ,CACjB,GAAID,EAAO,CACT,MAAME,EAAK,KAAK,IACVC,EAAKH,EAAM,IACjB,IAAII,EACJ,MAAMC,EAAIJ,IAAWG,EAAK,GAAMH,EAC1BvD,EAAI,EAAI2D,EAAI,EACZrE,EAAIkE,EAAG,EAAIC,EAAG,EACdG,IAAO5D,EAAIV,IAAM,GAAKU,GAAKA,EAAIV,IAAM,EAAIU,EAAIV,IAAM,GAAK,EAC9DoE,EAAK,EAAIE,EACTJ,EAAG,EAAI,IAAOI,EAAKJ,EAAG,EAAIE,EAAKD,EAAG,EAAI,GACtCD,EAAG,EAAI,IAAOI,EAAKJ,EAAG,EAAIE,EAAKD,EAAG,EAAI,GACtCD,EAAG,EAAI,IAAOI,EAAKJ,EAAG,EAAIE,EAAKD,EAAG,EAAI,GACtCD,EAAG,EAAIG,EAAIH,EAAG,GAAK,EAAIG,GAAKF,EAAG,EAC/B,KAAK,IAAMD,CACZ,CACD,OAAO,IACR,CACD,YAAYF,EAAOZ,EAAG,CACpB,OAAIY,IACF,KAAK,KAAOf,GAAY,KAAK,KAAMe,EAAM,KAAMZ,CAAC,GAE3C,IACR,CACD,OAAQ,CACN,OAAO,IAAIS,GAAM,KAAK,GAAG,CAC1B,CACD,MAAM7D,EAAG,CACP,YAAK,KAAK,EAAIf,GAAIe,CAAC,EACZ,IACR,CACD,QAAQsD,EAAO,CACb,MAAM3C,EAAM,KAAK,KACjB,OAAAA,EAAI,GAAK,EAAI2C,EACN,IACR,CACD,WAAY,CACV,MAAM3C,EAAM,KAAK,KACX4D,EAAM5F,GAAMgC,EAAI,EAAI,GAAMA,EAAI,EAAI,IAAOA,EAAI,EAAI,GAAI,EAC3D,OAAAA,EAAI,EAAIA,EAAI,EAAIA,EAAI,EAAI4D,EACjB,IACR,CACD,QAAQjB,EAAO,CACb,MAAM3C,EAAM,KAAK,KACjB,OAAAA,EAAI,GAAK,EAAI2C,EACN,IACR,CACD,QAAS,CACP,MAAM1E,EAAI,KAAK,KACf,OAAAA,EAAE,EAAI,IAAMA,EAAE,EACdA,EAAE,EAAI,IAAMA,EAAE,EACdA,EAAE,EAAI,IAAMA,EAAE,EACP,IACR,CACD,QAAQ0E,EAAO,CACb,OAAAD,GAAO,KAAK,KAAM,EAAGC,CAAK,EACnB,IACR,CACD,OAAOA,EAAO,CACZ,OAAAD,GAAO,KAAK,KAAM,EAAG,CAACC,CAAK,EACpB,IACR,CACD,SAASA,EAAO,CACd,OAAAD,GAAO,KAAK,KAAM,EAAGC,CAAK,EACnB,IACR,CACD,WAAWA,EAAO,CAChB,OAAAD,GAAO,KAAK,KAAM,EAAG,CAACC,CAAK,EACpB,IACR,CACD,OAAOvB,EAAK,CACV,OAAAD,GAAO,KAAK,KAAMC,CAAG,EACd,IACR,CACH,CCtkBA;AAAA;AAAA;AAAA;AAAA;AAAA,GAYI,SAASyC,IAAO,CACR,CAGR,MAAMC,IAAO,IAAI,CACjB,IAAIC,EAAK,EACT,MAAO,IAAIA,GACf,KAKI,SAASC,EAAcC,EAAO,CAC9B,OAAOA,IAAU,MAAQ,OAAOA,EAAU,GAC9C,CAKI,SAASC,EAAQD,EAAO,CACxB,GAAI,MAAM,SAAW,MAAM,QAAQA,CAAK,EACpC,MAAO,GAEX,MAAMd,EAAO,OAAO,UAAU,SAAS,KAAKc,CAAK,EACjD,OAAId,EAAK,MAAM,EAAG,CAAC,IAAM,WAAaA,EAAK,MAAM,EAAE,IAAM,QAI7D,CAKI,SAASgB,EAASF,EAAO,CACzB,OAAOA,IAAU,MAAQ,OAAO,UAAU,SAAS,KAAKA,CAAK,IAAM,iBACvE,CAII,SAASG,EAAeH,EAAO,CAC/B,OAAQ,OAAOA,GAAU,UAAYA,aAAiB,SAAW,SAAS,CAACA,CAAK,CACpF,CAKI,SAASI,EAAgBJ,EAAOK,EAAc,CAC9C,OAAOF,EAAeH,CAAK,EAAIA,EAAQK,CAC3C,CAKI,SAASC,EAAeN,EAAOK,EAAc,CAC7C,OAAO,OAAOL,EAAU,IAAcK,EAAeL,CACzD,CAEA,MAAMO,GAAc,CAACP,EAAOQ,IAAY,OAAOR,GAAU,UAAYA,EAAM,SAAS,GAAG,EAAI,WAAWA,CAAK,EAAI,IAAMQ,EAAY,CAACR,EAO9H,SAASS,EAASC,EAAIC,EAAMC,EAAS,CACrC,GAAIF,GAAM,OAAOA,EAAG,MAAS,WACzB,OAAOA,EAAG,MAAME,EAASD,CAAI,CAErC,CACA,SAASE,EAAKC,EAAUJ,EAAIE,EAASG,EAAS,CAC1C,IAAI/E,EAAGf,EAAKwC,EACZ,GAAIwC,EAAQa,CAAQ,EAOZ,IANJ7F,EAAM6F,EAAS,OAMP9E,EAAI,EAAGA,EAAIf,EAAKe,IAChB0E,EAAG,KAAKE,EAASE,EAAS9E,CAAC,EAAGA,CAAC,UAGhCkE,EAASY,CAAQ,EAGxB,IAFArD,EAAO,OAAO,KAAKqD,CAAQ,EAC3B7F,EAAMwC,EAAK,OACPzB,EAAI,EAAGA,EAAIf,EAAKe,IAChB0E,EAAG,KAAKE,EAASE,EAASrD,EAAKzB,CAAC,CAAC,EAAGyB,EAAKzB,CAAC,CAAC,CAGvD,CAMI,SAASgF,GAAeC,EAAIC,EAAI,CAChC,IAAIlF,EAAGmF,EAAMC,EAAIC,EACjB,GAAI,CAACJ,GAAM,CAACC,GAAMD,EAAG,SAAWC,EAAG,OAC/B,MAAO,GAEX,IAAIlF,EAAI,EAAGmF,EAAOF,EAAG,OAAQjF,EAAImF,EAAM,EAAEnF,EAGrC,GAFAoF,EAAKH,EAAGjF,CAAC,EACTqF,EAAKH,EAAGlF,CAAC,EACLoF,EAAG,eAAiBC,EAAG,cAAgBD,EAAG,QAAUC,EAAG,MACvD,MAAO,GAGf,MAAO,EACX,CAII,SAASzC,GAAM0C,EAAQ,CACvB,GAAIrB,EAAQqB,CAAM,EACd,OAAOA,EAAO,IAAI1C,EAAK,EAE3B,GAAIsB,EAASoB,CAAM,EAAG,CAClB,MAAMC,EAAS,OAAO,OAAO,IAAI,EAC3B9D,EAAO,OAAO,KAAK6D,CAAM,EACzBE,EAAO/D,EAAK,OAClB,IAAI9B,EAAI,EACR,KAAMA,EAAI6F,EAAM,EAAE7F,EACd4F,EAAO9D,EAAK9B,CAAC,CAAC,EAAIiD,GAAM0C,EAAO7D,EAAK9B,CAAC,CAAC,CAAC,EAE3C,OAAO4F,CACV,CACD,OAAOD,CACX,CACA,SAASG,GAAWC,EAAK,CACrB,MAAO,CACH,YACA,YACA,aACH,EAAC,QAAQA,CAAG,IAAM,EACvB,CAKI,SAASC,GAAQD,EAAKH,EAAQD,EAAQM,EAAS,CAC/C,GAAI,CAACH,GAAWC,CAAG,EACf,OAEJ,MAAMG,EAAON,EAAOG,CAAG,EACjBI,EAAOR,EAAOI,CAAG,EACnBxB,EAAS2B,CAAI,GAAK3B,EAAS4B,CAAI,EAE/BC,GAAMF,EAAMC,EAAMF,CAAO,EAEzBL,EAAOG,CAAG,EAAI9C,GAAMkD,CAAI,CAEhC,CACA,SAASC,GAAMR,EAAQD,EAAQM,EAAS,CACpC,MAAMI,EAAU/B,EAAQqB,CAAM,EAAIA,EAAS,CACvCA,CACR,EACUH,EAAOa,EAAQ,OACrB,GAAI,CAAC9B,EAASqB,CAAM,EAChB,OAAOA,EAEXK,EAAUA,GAAW,GACrB,MAAMK,EAASL,EAAQ,QAAUD,GACjC,IAAIO,EACJ,QAAQlG,EAAI,EAAGA,EAAImF,EAAM,EAAEnF,EAAE,CAEzB,GADAkG,EAAUF,EAAQhG,CAAC,EACf,CAACkE,EAASgC,CAAO,EACjB,SAEJ,MAAMzE,EAAO,OAAO,KAAKyE,CAAO,EAChC,QAAQvG,EAAI,EAAG6F,EAAO/D,EAAK,OAAQ9B,EAAI6F,EAAM,EAAE7F,EAC3CsG,EAAOxE,EAAK9B,CAAC,EAAG4F,EAAQW,EAASN,CAAO,CAE/C,CACD,OAAOL,CACX,CACA,SAASY,GAAQZ,EAAQD,EAAQ,CAE7B,OAAOS,GAAMR,EAAQD,EAAQ,CACzB,OAAQc,EAChB,CAAK,CACL,CAII,SAASA,GAAUV,EAAKH,EAAQD,EAAQ,CACxC,GAAI,CAACG,GAAWC,CAAG,EACf,OAEJ,MAAMG,EAAON,EAAOG,CAAG,EACjBI,EAAOR,EAAOI,CAAG,EACnBxB,EAAS2B,CAAI,GAAK3B,EAAS4B,CAAI,EAC/BK,GAAQN,EAAMC,CAAI,EACV,OAAO,UAAU,eAAe,KAAKP,EAAQG,CAAG,IACxDH,EAAOG,CAAG,EAAI9C,GAAMkD,CAAI,EAEhC,CASA,MAAMO,GAAe,CAEjB,GAAKrI,GAAIA,EAET,EAAIsI,GAAIA,EAAE,EACV,EAAIA,GAAIA,EAAE,CACd,EAGI,SAASC,GAAUb,EAAK,CACxB,MAAMc,EAAQd,EAAI,MAAM,GAAG,EACrBjE,EAAO,CAAA,EACb,IAAIkB,EAAM,GACV,UAAW8D,KAAQD,EACf7D,GAAO8D,EACH9D,EAAI,SAAS,IAAI,EACjBA,EAAMA,EAAI,MAAM,EAAG,EAAE,EAAI,KAEzBlB,EAAK,KAAKkB,CAAG,EACbA,EAAM,IAGd,OAAOlB,CACX,CACA,SAASiF,GAAgBhB,EAAK,CAC1B,MAAMjE,EAAO8E,GAAUb,CAAG,EAC1B,OAAQvC,GAAM,CACV,UAAWxD,KAAK8B,EAAK,CACjB,GAAI9B,IAAM,GACN,MAEJwD,EAAMA,GAAOA,EAAIxD,CAAC,CACrB,CACD,OAAOwD,CACf,CACA,CACA,SAASwD,GAAiBxD,EAAKuC,EAAK,CAEhC,OADiBW,GAAaX,CAAG,IAAMW,GAAaX,CAAG,EAAIgB,GAAgBhB,CAAG,IAC9DvC,CAAG,CACvB,CAGI,SAASyD,GAAY5H,EAAK,CAC1B,OAAOA,EAAI,OAAO,CAAC,EAAE,YAAW,EAAKA,EAAI,MAAM,CAAC,CACpD,CACA,MAAM6H,GAAW7C,GAAQ,OAAOA,EAAU,IACpC8C,GAAc9C,GAAQ,OAAOA,GAAU,WAEvC+C,GAAY,CAAC3H,EAAGT,IAAI,CACtB,GAAIS,EAAE,OAAST,EAAE,KACb,MAAO,GAEX,UAAWqI,KAAQ5H,EACf,GAAI,CAACT,EAAE,IAAIqI,CAAI,EACX,MAAO,GAGf,MAAO,EACX,EAII,SAASC,GAAcC,EAAG,CAC1B,OAAOA,EAAE,OAAS,WAAaA,EAAE,OAAS,SAAWA,EAAE,OAAS,aACpE,CAKI,MAAMC,EAAK,KAAK,GACdC,EAAM,EAAID,EACVE,GAAQD,EAAMD,EACdG,GAAW,OAAO,kBAClBC,GAAcJ,EAAK,IACnBK,EAAUL,EAAK,EACfM,GAAaN,EAAK,EAClBO,GAAgBP,EAAK,EAAI,EACzBQ,GAAQ,KAAK,MACbC,GAAO,KAAK,KAClB,SAASC,GAAaC,EAAGC,EAAGC,EAAS,CACjC,OAAO,KAAK,IAAIF,EAAIC,CAAC,EAAIC,CAC7B,CAGI,SAASC,GAAQC,EAAO,CACxB,MAAMC,EAAe,KAAK,MAAMD,CAAK,EACrCA,EAAQL,GAAaK,EAAOC,EAAcD,EAAQ,GAAI,EAAIC,EAAeD,EACzE,MAAME,EAAY,KAAK,IAAI,GAAI,KAAK,MAAMT,GAAMO,CAAK,CAAC,CAAC,EACjDG,EAAWH,EAAQE,EAEzB,OADqBC,GAAY,EAAI,EAAIA,GAAY,EAAI,EAAIA,GAAY,EAAI,EAAI,IAC3DD,CAC1B,CAII,SAASE,GAAWtE,EAAO,CAC3B,MAAMuE,EAAS,CAAA,EACTC,EAAO,KAAK,KAAKxE,CAAK,EAC5B,IAAIhE,EACJ,IAAIA,EAAI,EAAGA,EAAIwI,EAAMxI,IACbgE,EAAQhE,IAAM,IACduI,EAAO,KAAKvI,CAAC,EACbuI,EAAO,KAAKvE,EAAQhE,CAAC,GAG7B,OAAIwI,KAAUA,EAAO,IACjBD,EAAO,KAAKC,CAAI,EAEpBD,EAAO,KAAK,CAACnJ,EAAGT,IAAIS,EAAIT,CAAC,EAAE,MACpB4J,CACX,CACA,SAASE,GAAS/I,EAAG,CACjB,MAAO,CAAC,MAAM,WAAWA,CAAC,CAAC,GAAK,SAASA,CAAC,CAC9C,CACA,SAASgJ,GAAYZ,EAAGE,EAAS,CAC7B,MAAMW,EAAU,KAAK,MAAMb,CAAC,EAC5B,OAAOa,EAAUX,GAAWF,GAAKa,EAAUX,GAAWF,CAC1D,CAGI,SAASc,GAAmBC,EAAOtD,EAAQuD,EAAU,CACrD,IAAI9I,EAAGmF,EAAMnB,EACb,IAAIhE,EAAI,EAAGmF,EAAO0D,EAAM,OAAQ7I,EAAImF,EAAMnF,IACtCgE,EAAQ6E,EAAM7I,CAAC,EAAE8I,CAAQ,EACpB,MAAM9E,CAAK,IACZuB,EAAO,IAAM,KAAK,IAAIA,EAAO,IAAKvB,CAAK,EACvCuB,EAAO,IAAM,KAAK,IAAIA,EAAO,IAAKvB,CAAK,EAGnD,CACA,SAAS+E,GAAUC,EAAS,CACxB,OAAOA,GAAW7B,EAAK,IAC3B,CACA,SAAS8B,GAAUC,EAAS,CACxB,OAAOA,GAAW,IAAM/B,EAC5B,CAOI,SAASgC,GAAerB,EAAG,CAC3B,GAAI,CAAC3D,EAAe2D,CAAC,EACjB,OAEJ,IAAIZ,EAAI,EACJzD,EAAI,EACR,KAAM,KAAK,MAAMqE,EAAIZ,CAAC,EAAIA,IAAMY,GAC5BZ,GAAK,GACLzD,IAEJ,OAAOA,CACX,CAEA,SAAS2F,GAAkBC,EAAaC,EAAY,CAChD,MAAMC,EAAsBD,EAAW,EAAID,EAAY,EACjDG,EAAsBF,EAAW,EAAID,EAAY,EACjDI,EAA2B,KAAK,KAAKF,EAAsBA,EAAsBC,EAAsBA,CAAmB,EAChI,IAAIE,EAAQ,KAAK,MAAMF,EAAqBD,CAAmB,EAC/D,OAAIG,EAAQ,IAAOvC,IACfuC,GAAStC,GAEN,CACH,MAAAsC,EACA,SAAUD,CAClB,CACA,CACA,SAASE,GAAsBC,EAAKC,EAAK,CACrC,OAAO,KAAK,KAAK,KAAK,IAAIA,EAAI,EAAID,EAAI,EAAG,CAAC,EAAI,KAAK,IAAIC,EAAI,EAAID,EAAI,EAAG,CAAC,CAAC,CAC5E,CAII,SAASE,GAAW1K,EAAGT,EAAG,CAC1B,OAAQS,EAAIT,EAAI0I,IAASD,EAAMD,CACnC,CAII,SAAS4C,GAAgB3K,EAAG,CAC5B,OAAQA,EAAIgI,EAAMA,GAAOA,CAC7B,CAGI,SAAS4C,GAAcN,EAAOO,EAAOC,EAAKC,EAAuB,CACjE,MAAM/K,EAAI2K,GAAgBL,CAAK,EACzBjK,EAAIsK,GAAgBE,CAAK,EACzB/C,EAAI6C,GAAgBG,CAAG,EACvBE,EAAeL,GAAgBtK,EAAIL,CAAC,EACpCiL,EAAaN,GAAgB7C,EAAI9H,CAAC,EAClCkL,EAAeP,GAAgB3K,EAAIK,CAAC,EACpC8K,EAAaR,GAAgB3K,EAAI8H,CAAC,EACxC,OAAO9H,IAAMK,GAAKL,IAAM8H,GAAKiD,GAAyB1K,IAAMyH,GAAKkD,EAAeC,GAAcC,EAAeC,CACjH,CAOI,SAASC,EAAYxG,EAAOzD,EAAKF,EAAK,CACtC,OAAO,KAAK,IAAIE,EAAK,KAAK,IAAIF,EAAK2D,CAAK,CAAC,CAC7C,CAII,SAASyG,GAAYzG,EAAO,CAC5B,OAAOwG,EAAYxG,EAAO,OAAQ,KAAK,CAC3C,CAOI,SAAS0G,GAAW1G,EAAOiG,EAAOC,EAAKlC,EAAU,KAAM,CACvD,OAAOhE,GAAS,KAAK,IAAIiG,EAAOC,CAAG,EAAIlC,GAAWhE,GAAS,KAAK,IAAIiG,EAAOC,CAAG,EAAIlC,CACtF,CAEA,SAAS2C,GAAQC,EAAO5G,EAAO6G,EAAK,CAChCA,EAAMA,IAASC,GAAQF,EAAME,CAAK,EAAI9G,GACtC,IAAI+G,EAAKH,EAAM,OAAS,EACpBI,EAAK,EACLC,EACJ,KAAMF,EAAKC,EAAK,GACZC,EAAMD,EAAKD,GAAM,EACbF,EAAII,CAAG,EACPD,EAAKC,EAELF,EAAKE,EAGb,MAAO,CACH,GAAAD,EACA,GAAAD,CACR,CACA,CAQI,MAAMG,GAAe,CAACN,EAAOlF,EAAK1B,EAAOmH,IAAOR,GAAQC,EAAO5G,EAAOmH,EAAQL,GAAQ,CAClF,MAAMM,EAAKR,EAAME,CAAK,EAAEpF,CAAG,EAC3B,OAAO0F,EAAKpH,GAASoH,IAAOpH,GAAS4G,EAAME,EAAQ,CAAC,EAAEpF,CAAG,IAAM1B,CACvE,EAAS8G,GAAQF,EAAME,CAAK,EAAEpF,CAAG,EAAI1B,CAAK,EAOhCqH,GAAgB,CAACT,EAAOlF,EAAK1B,IAAQ2G,GAAQC,EAAO5G,EAAQ8G,GAAQF,EAAME,CAAK,EAAEpF,CAAG,GAAK1B,CAAK,EAOpG,SAASsH,GAAeC,EAAQhL,EAAKF,EAAK,CAC1C,IAAI4J,EAAQ,EACRC,EAAMqB,EAAO,OACjB,KAAMtB,EAAQC,GAAOqB,EAAOtB,CAAK,EAAI1J,GACjC0J,IAEJ,KAAMC,EAAMD,GAASsB,EAAOrB,EAAM,CAAC,EAAI7J,GACnC6J,IAEJ,OAAOD,EAAQ,GAAKC,EAAMqB,EAAO,OAASA,EAAO,MAAMtB,EAAOC,CAAG,EAAIqB,CACzE,CACA,MAAMC,GAAc,CAChB,OACA,MACA,QACA,SACA,SACJ,EACA,SAASC,GAAkB5C,EAAO6C,EAAU,CACxC,GAAI7C,EAAM,SAAU,CAChBA,EAAM,SAAS,UAAU,KAAK6C,CAAQ,EACtC,MACH,CACD,OAAO,eAAe7C,EAAO,WAAY,CACrC,aAAc,GACd,WAAY,GACZ,MAAO,CACH,UAAW,CACP6C,CACH,CACJ,CACT,CAAK,EACDF,GAAY,QAAS9F,GAAM,CACvB,MAAMiG,EAAS,UAAY/E,GAAYlB,CAAG,EACpCkG,EAAO/C,EAAMnD,CAAG,EACtB,OAAO,eAAemD,EAAOnD,EAAK,CAC9B,aAAc,GACd,WAAY,GACZ,SAAUf,EAAM,CACZ,MAAMkH,EAAMD,EAAK,MAAM,KAAMjH,CAAI,EACjC,OAAAkE,EAAM,SAAS,UAAU,QAASiD,GAAS,CACnC,OAAOA,EAAOH,CAAM,GAAM,YAC1BG,EAAOH,CAAM,EAAE,GAAGhH,CAAI,CAE9C,CAAiB,EACMkH,CACV,CACb,CAAS,CACT,CAAK,CACL,CACA,SAASE,GAAoBlD,EAAO6C,EAAU,CAC1C,MAAMM,EAAOnD,EAAM,SACnB,GAAI,CAACmD,EACD,OAEJ,MAAMC,EAAYD,EAAK,UACjBlB,EAAQmB,EAAU,QAAQP,CAAQ,EACpCZ,IAAU,IACVmB,EAAU,OAAOnB,EAAO,CAAC,EAEzB,EAAAmB,EAAU,OAAS,KAGvBT,GAAY,QAAS9F,GAAM,CACvB,OAAOmD,EAAMnD,CAAG,CACxB,CAAK,EACD,OAAOmD,EAAM,SACjB,CAGI,SAASqD,GAAaC,EAAO,CAC7B,MAAMC,EAAM,IAAI,IAAID,CAAK,EACzB,OAAIC,EAAI,OAASD,EAAM,OACZA,EAEJ,MAAM,KAAKC,CAAG,CACzB,CAOG,MAAMC,GAAmB,UAAW,CACnC,OAAI,OAAO,OAAW,IACX,SAAS5H,EAAU,CACtB,OAAOA,EAAQ,CAC3B,EAEW,OAAO,qBAClB,IAII,SAAS6H,GAAU5H,EAAIE,EAAS,CAChC,IAAI2H,EAAY,CAAA,EACZC,EAAU,GACd,OAAO,YAAY7H,EAAM,CAErB4H,EAAY5H,EACP6H,IACDA,EAAU,GACVH,GAAiB,KAAK,OAAQ,IAAI,CAC9BG,EAAU,GACV9H,EAAG,MAAME,EAAS2H,CAAS,CAC3C,CAAa,EAEb,CACA,CAGI,SAASE,GAAS/H,EAAIgI,EAAO,CAC7B,IAAIC,EACJ,OAAO,YAAYhI,EAAM,CACrB,OAAI+H,GACA,aAAaC,CAAO,EACpBA,EAAU,WAAWjI,EAAIgI,EAAO/H,CAAI,GAEpCD,EAAG,MAAM,KAAMC,CAAI,EAEhB+H,CACf,CACA,CAII,MAAME,GAAsBC,GAAQA,IAAU,QAAU,OAASA,IAAU,MAAQ,QAAU,SAIvFC,EAAiB,CAACD,EAAO5C,EAAOC,IAAM2C,IAAU,QAAU5C,EAAQ4C,IAAU,MAAQ3C,GAAOD,EAAQC,GAAO,EAI1G6C,GAAS,CAACF,EAAOG,EAAMC,EAAOC,IAE7BL,KADOK,EAAM,OAAS,SACJD,EAAQJ,IAAU,UAAYG,EAAOC,GAAS,EAAID,EAK3E,SAASG,GAAiCC,EAAMC,EAAQC,EAAoB,CAC5E,MAAMC,EAAaF,EAAO,OAC1B,IAAIpD,EAAQ,EACRuD,EAAQD,EACZ,GAAIH,EAAK,QAAS,CACd,KAAM,CAAE,OAAAK,EAAS,QAAAC,CAAU,EAAGN,EACxBO,EAAOF,EAAO,KACd,CAAE,IAAAlN,EAAM,IAAAF,EAAM,WAAAuN,EAAa,WAAAC,GAAgBJ,EAAO,gBACpDG,IACA3D,EAAQO,EAAY,KAAK,IACzBU,GAAawC,EAASC,EAAMpN,CAAG,EAAE,GACjC+M,EAAqBC,EAAarC,GAAamC,EAAQM,EAAMF,EAAO,iBAAiBlN,CAAG,CAAC,EAAE,EAAE,EAAG,EAAGgN,EAAa,CAAC,GAEjHM,EACAL,EAAQhD,EAAY,KAAK,IACzBU,GAAawC,EAASD,EAAO,KAAMpN,EAAK,EAAI,EAAE,GAAK,EACnDiN,EAAqB,EAAIpC,GAAamC,EAAQM,EAAMF,EAAO,iBAAiBpN,CAAG,EAAG,EAAI,EAAE,GAAK,CAAC,EAAG4J,EAAOsD,CAAU,EAAItD,EAEtHuD,EAAQD,EAAatD,CAE5B,CACD,MAAO,CACH,MAAAA,EACA,MAAAuD,CACR,CACA,CAMI,SAASM,GAAoBV,EAAM,CACnC,KAAM,CAAE,OAAAW,EAAS,OAAAC,EAAS,aAAAC,CAAY,EAAMb,EACtCc,EAAY,CACd,KAAMH,EAAO,IACb,KAAMA,EAAO,IACb,KAAMC,EAAO,IACb,KAAMA,EAAO,GACrB,EACI,GAAI,CAACC,EACD,OAAAb,EAAK,aAAec,EACb,GAEX,MAAMC,EAAUF,EAAa,OAASF,EAAO,KAAOE,EAAa,OAASF,EAAO,KAAOE,EAAa,OAASD,EAAO,KAAOC,EAAa,OAASD,EAAO,IACzJ,cAAO,OAAOC,EAAcC,CAAS,EAC9BC,CACX,CAEA,MAAMC,GAAU5L,GAAIA,IAAM,GAAKA,IAAM,EAC/B6L,GAAY,CAAC7L,EAAG/C,EAAGgE,IAAI,EAAE,KAAK,IAAI,EAAG,IAAMjB,GAAK,EAAE,EAAI,KAAK,KAAKA,EAAI/C,GAAK2H,EAAM3D,CAAC,GAChF6K,GAAa,CAAC9L,EAAG/C,EAAGgE,IAAI,KAAK,IAAI,EAAG,IAAMjB,CAAC,EAAI,KAAK,KAAKA,EAAI/C,GAAK2H,EAAM3D,CAAC,EAAI,EAKzE8K,GAAU,CAChB,OAAS/L,GAAIA,EACb,WAAaA,GAAIA,EAAIA,EACrB,YAAcA,GAAI,CAACA,GAAKA,EAAI,GAC5B,cAAgBA,IAAKA,GAAK,IAAO,EAAI,GAAMA,EAAIA,EAAI,KAAQ,EAAEA,GAAKA,EAAI,GAAK,GAC3E,YAAcA,GAAIA,EAAIA,EAAIA,EAC1B,aAAeA,IAAKA,GAAK,GAAKA,EAAIA,EAAI,EACtC,eAAiBA,IAAKA,GAAK,IAAO,EAAI,GAAMA,EAAIA,EAAIA,EAAI,KAAQA,GAAK,GAAKA,EAAIA,EAAI,GAClF,YAAcA,GAAIA,EAAIA,EAAIA,EAAIA,EAC9B,aAAeA,GAAI,GAAGA,GAAK,GAAKA,EAAIA,EAAIA,EAAI,GAC5C,eAAiBA,IAAKA,GAAK,IAAO,EAAI,GAAMA,EAAIA,EAAIA,EAAIA,EAAI,MAASA,GAAK,GAAKA,EAAIA,EAAIA,EAAI,GAC3F,YAAcA,GAAIA,EAAIA,EAAIA,EAAIA,EAAIA,EAClC,aAAeA,IAAKA,GAAK,GAAKA,EAAIA,EAAIA,EAAIA,EAAI,EAC9C,eAAiBA,IAAKA,GAAK,IAAO,EAAI,GAAMA,EAAIA,EAAIA,EAAIA,EAAIA,EAAI,KAAQA,GAAK,GAAKA,EAAIA,EAAIA,EAAIA,EAAI,GAClG,WAAaA,GAAI,CAAC,KAAK,IAAIA,EAAIgF,CAAO,EAAI,EAC1C,YAAchF,GAAI,KAAK,IAAIA,EAAIgF,CAAO,EACtC,cAAgBhF,GAAI,KAAQ,KAAK,IAAI2E,EAAK3E,CAAC,EAAI,GAC/C,WAAaA,GAAIA,IAAM,EAAI,EAAI,KAAK,IAAI,EAAG,IAAMA,EAAI,EAAE,EACvD,YAAcA,GAAIA,IAAM,EAAI,EAAI,CAAC,KAAK,IAAI,EAAG,IAAMA,CAAC,EAAI,EACxD,cAAgBA,GAAI4L,GAAO5L,CAAC,EAAIA,EAAIA,EAAI,GAAM,GAAM,KAAK,IAAI,EAAG,IAAMA,EAAI,EAAI,EAAE,EAAI,IAAO,CAAC,KAAK,IAAI,EAAG,KAAOA,EAAI,EAAI,EAAE,EAAI,GAC7H,WAAaA,GAAIA,GAAK,EAAIA,EAAI,EAAE,KAAK,KAAK,EAAIA,EAAIA,CAAC,EAAI,GACvD,YAAcA,GAAI,KAAK,KAAK,GAAKA,GAAK,GAAKA,CAAC,EAC5C,cAAgBA,IAAKA,GAAK,IAAO,EAAI,KAAQ,KAAK,KAAK,EAAIA,EAAIA,CAAC,EAAI,GAAK,IAAO,KAAK,KAAK,GAAKA,GAAK,GAAKA,CAAC,EAAI,GAC9G,cAAgBA,GAAI4L,GAAO5L,CAAC,EAAIA,EAAI6L,GAAU7L,EAAG,KAAO,EAAG,EAC3D,eAAiBA,GAAI4L,GAAO5L,CAAC,EAAIA,EAAI8L,GAAW9L,EAAG,KAAO,EAAG,EAC7D,iBAAkBA,EAAG,CAGjB,OAAO4L,GAAO5L,CAAC,EAAIA,EAAIA,EAAI,GAAM,GAAM6L,GAAU7L,EAAI,EAAG,MAAG,GAAC,EAAI,GAAM,GAAM8L,GAAW9L,EAAI,EAAI,EAAG,MAAG,GAAC,CACzG,EACD,WAAYA,EAAG,CAEX,OAAOA,EAAIA,IAAM,QAAI,GAAKA,EAAI,QACjC,EACD,YAAaA,EAAG,CAEZ,OAAQA,GAAK,GAAKA,IAAM,QAAI,GAAKA,EAAI,SAAK,CAC7C,EACD,cAAeA,EAAG,CACd,IAAI/C,EAAI,QACR,OAAK+C,GAAK,IAAO,EACN,IAAOA,EAAIA,KAAO/C,GAAK,OAAS,GAAK+C,EAAI/C,IAE7C,KAAQ+C,GAAK,GAAKA,KAAO/C,GAAK,OAAS,GAAK+C,EAAI/C,GAAK,EAC/D,EACD,aAAe+C,GAAI,EAAI+L,GAAQ,cAAc,EAAI/L,CAAC,EAClD,cAAeA,EAAG,CAGd,OAAIA,EAAI,EAAI,KACD,OAAIA,EAAIA,EAEfA,EAAI,EAAI,KACD,QAAKA,GAAK,IAAM,MAAKA,EAAI,IAEhCA,EAAI,IAAM,KACH,QAAKA,GAAK,KAAO,MAAKA,EAAI,MAE9B,QAAKA,GAAK,MAAQ,MAAKA,EAAI,OACrC,EACD,gBAAkBA,GAAIA,EAAI,GAAM+L,GAAQ,aAAa/L,EAAI,CAAC,EAAI,GAAM+L,GAAQ,cAAc/L,EAAI,EAAI,CAAC,EAAI,GAAM,EACjH,EAEA,SAASgM,GAAoBxK,EAAO,CAChC,GAAIA,GAAS,OAAOA,GAAU,SAAU,CACpC,MAAMd,EAAOc,EAAM,WACnB,OAAOd,IAAS,0BAA4BA,IAAS,yBACxD,CACD,MAAO,EACX,CACA,SAASE,GAAMY,EAAO,CAClB,OAAOwK,GAAoBxK,CAAK,EAAIA,EAAQ,IAAIf,GAAMe,CAAK,CAC/D,CACA,SAASyK,GAAczK,EAAO,CAC1B,OAAOwK,GAAoBxK,CAAK,EAAIA,EAAQ,IAAIf,GAAMe,CAAK,EAAE,SAAS,EAAG,EAAE,OAAO,EAAG,EAAE,UAAS,CACpG,CAEA,MAAM0K,GAAU,CACZ,IACA,IACA,cACA,SACA,SACJ,EACMC,GAAS,CACX,QACA,cACA,iBACJ,EACA,SAASC,GAAwBC,EAAU,CACvCA,EAAS,IAAI,YAAa,CACtB,MAAO,OACP,SAAU,IACV,OAAQ,eACR,GAAI,OACJ,KAAM,OACN,KAAM,OACN,GAAI,OACJ,KAAM,MACd,CAAK,EACDA,EAAS,SAAS,YAAa,CAC3B,UAAW,GACX,WAAY,GACZ,YAAcC,GAAOA,IAAS,cAAgBA,IAAS,cAAgBA,IAAS,IACxF,CAAK,EACDD,EAAS,IAAI,aAAc,CACvB,OAAQ,CACJ,KAAM,QACN,WAAYF,EACf,EACD,QAAS,CACL,KAAM,SACN,WAAYD,EACf,CACT,CAAK,EACDG,EAAS,SAAS,aAAc,CAC5B,UAAW,WACnB,CAAK,EACDA,EAAS,IAAI,cAAe,CACxB,OAAQ,CACJ,UAAW,CACP,SAAU,GACb,CACJ,EACD,OAAQ,CACJ,UAAW,CACP,SAAU,CACb,CACJ,EACD,KAAM,CACF,WAAY,CACR,OAAQ,CACJ,KAAM,aACT,EACD,QAAS,CACL,KAAM,UACN,SAAU,CACb,CACJ,CACJ,EACD,KAAM,CACF,WAAY,CACR,OAAQ,CACJ,GAAI,aACP,EACD,QAAS,CACL,KAAM,UACN,OAAQ,SACR,GAAK7Q,GAAIA,EAAI,CAChB,CACJ,CACJ,CACT,CAAK,CACL,CAEA,SAAS+Q,GAAqBF,EAAU,CACpCA,EAAS,IAAI,SAAU,CACnB,YAAa,GACb,QAAS,CACL,IAAK,EACL,MAAO,EACP,OAAQ,EACR,KAAM,CACT,CACT,CAAK,CACL,CAEA,MAAMG,GAAY,IAAI,IACtB,SAASC,GAAgBC,EAAQtJ,EAAS,CACtCA,EAAUA,GAAW,GACrB,MAAMuJ,EAAWD,EAAS,KAAK,UAAUtJ,CAAO,EAChD,IAAIwJ,EAAYJ,GAAU,IAAIG,CAAQ,EACtC,OAAKC,IACDA,EAAY,IAAI,KAAK,aAAaF,EAAQtJ,CAAO,EACjDoJ,GAAU,IAAIG,EAAUC,CAAS,GAE9BA,CACX,CACA,SAASC,GAAaC,EAAKJ,EAAQtJ,EAAS,CACxC,OAAOqJ,GAAgBC,EAAQtJ,CAAO,EAAE,OAAO0J,CAAG,CACtD,CAEA,MAAMC,GAAa,CAClB,OAAQvL,EAAO,CACR,OAAOC,EAAQD,CAAK,EAAKA,EAAQ,GAAKA,CACzC,EACJ,QAASwL,EAAW1E,EAAO2E,EAAO,CAC3B,GAAID,IAAc,EACd,MAAO,IAEX,MAAMN,EAAS,KAAK,MAAM,QAAQ,OAClC,IAAIQ,EACAC,EAAQH,EACZ,GAAIC,EAAM,OAAS,EAAG,CAClB,MAAMG,EAAU,KAAK,IAAI,KAAK,IAAIH,EAAM,CAAC,EAAE,KAAK,EAAG,KAAK,IAAIA,EAAMA,EAAM,OAAS,CAAC,EAAE,KAAK,CAAC,GACtFG,EAAU,MAAQA,EAAU,QAC5BF,EAAW,cAEfC,EAAQE,GAAeL,EAAWC,CAAK,CAC1C,CACD,MAAMK,EAAWnI,GAAM,KAAK,IAAIgI,CAAK,CAAC,EAChCI,EAAa,MAAMD,CAAQ,EAAI,EAAI,KAAK,IAAI,KAAK,IAAI,GAAK,KAAK,MAAMA,CAAQ,EAAG,EAAE,EAAG,CAAC,EACtFlK,EAAU,CACZ,SAAA8J,EACA,sBAAuBK,EACvB,sBAAuBA,CACnC,EACQ,cAAO,OAAOnK,EAAS,KAAK,QAAQ,MAAM,MAAM,EACzCyJ,GAAaG,EAAWN,EAAQtJ,CAAO,CACjD,EACJ,YAAa4J,EAAW1E,EAAO2E,EAAO,CAC/B,GAAID,IAAc,EACd,MAAO,IAEX,MAAMQ,EAASP,EAAM3E,CAAK,EAAE,aAAe0E,EAAY,KAAK,IAAI,GAAI,KAAK,MAAM7H,GAAM6H,CAAS,CAAC,CAAC,EAChG,MAAI,CACA,EACA,EACA,EACA,EACA,GACA,EACZ,EAAU,SAASQ,CAAM,GAAKlF,EAAQ,GAAM2E,EAAM,OAC/BF,GAAW,QAAQ,KAAK,KAAMC,EAAW1E,EAAO2E,CAAK,EAEzD,EACV,CACL,EACA,SAASI,GAAeL,EAAWC,EAAO,CACtC,IAAIE,EAAQF,EAAM,OAAS,EAAIA,EAAM,CAAC,EAAE,MAAQA,EAAM,CAAC,EAAE,MAAQA,EAAM,CAAC,EAAE,MAAQA,EAAM,CAAC,EAAE,MAC3F,OAAI,KAAK,IAAIE,CAAK,GAAK,GAAKH,IAAc,KAAK,MAAMA,CAAS,IAC1DG,EAAQH,EAAY,KAAK,MAAMA,CAAS,GAErCG,CACX,CACC,IAAIM,GAAQ,CACT,WAAAV,EACJ,EAEA,SAASW,GAAmBrB,EAAU,CAClCA,EAAS,IAAI,QAAS,CAClB,QAAS,GACT,OAAQ,GACR,QAAS,GACT,YAAa,GACpB,OAAQ,QACD,KAAM,GACb,MAAO,EACA,KAAM,CACF,QAAS,GACT,UAAW,EACX,gBAAiB,GACjB,UAAW,GACX,WAAY,EACZ,UAAW,CAACsB,EAAMvK,IAAUA,EAAQ,UACpC,UAAW,CAACuK,EAAMvK,IAAUA,EAAQ,MACpC,OAAQ,EACX,EACD,OAAQ,CACJ,QAAS,GACT,KAAM,CAAE,EACR,WAAY,EACZ,MAAO,CACV,EACD,MAAO,CACH,QAAS,GACT,KAAM,GACN,QAAS,CACL,IAAK,EACL,OAAQ,CACX,CACJ,EACD,MAAO,CACH,YAAa,EACb,YAAa,GACb,OAAQ,GACR,gBAAiB,EACjB,gBAAiB,GACjB,QAAS,EACT,QAAS,GACT,SAAU,GACV,gBAAiB,EACjB,YAAa,EACb,SAAUqK,GAAM,WAAW,OAC3B,MAAO,CAAE,EACT,MAAO,CAAE,EACT,MAAO,SACP,WAAY,OACZ,kBAAmB,GACnB,cAAe,4BACf,gBAAiB,CACpB,CACT,CAAK,EACDpB,EAAS,MAAM,cAAe,QAAS,GAAI,OAAO,EAClDA,EAAS,MAAM,aAAc,QAAS,GAAI,aAAa,EACvDA,EAAS,MAAM,eAAgB,QAAS,GAAI,aAAa,EACzDA,EAAS,MAAM,cAAe,QAAS,GAAI,OAAO,EAClDA,EAAS,SAAS,QAAS,CACvB,UAAW,GACX,YAAcC,GAAO,CAACA,EAAK,WAAW,QAAQ,GAAK,CAACA,EAAK,WAAW,OAAO,GAAKA,IAAS,YAAcA,IAAS,SAChH,WAAaA,GAAOA,IAAS,cAAgBA,IAAS,kBAAoBA,IAAS,MAC3F,CAAK,EACDD,EAAS,SAAS,SAAU,CACxB,UAAW,OACnB,CAAK,EACDA,EAAS,SAAS,cAAe,CAC7B,YAAcC,GAAOA,IAAS,mBAAqBA,IAAS,WAC5D,WAAaA,GAAOA,IAAS,iBACrC,CAAK,CACL,CAEA,MAAMsB,GAAY,OAAO,OAAO,IAAI,EAC9BC,GAAc,OAAO,OAAO,IAAI,EACrC,SAASC,GAAWC,EAAM7K,EAAK,CAC5B,GAAI,CAACA,EACD,OAAO6K,EAEX,MAAM9O,EAAOiE,EAAI,MAAM,GAAG,EAC1B,QAAQ1F,EAAI,EAAG,EAAIyB,EAAK,OAAQzB,EAAI,EAAG,EAAEA,EAAE,CACvC,MAAML,EAAI8B,EAAKzB,CAAC,EAChBuQ,EAAOA,EAAK5Q,CAAC,IAAM4Q,EAAK5Q,CAAC,EAAI,OAAO,OAAO,IAAI,EAClD,CACD,OAAO4Q,CACX,CACA,SAASnE,GAAIoE,EAAMC,EAAOlF,EAAQ,CAC9B,OAAI,OAAOkF,GAAU,SACV1K,GAAMuK,GAAWE,EAAMC,CAAK,EAAGlF,CAAM,EAEzCxF,GAAMuK,GAAWE,EAAM,EAAE,EAAGC,CAAK,CAC5C,CACC,MAAMC,EAAS,CACZ,YAAYC,EAAcC,EAAU,CAChC,KAAK,UAAY,OACjB,KAAK,gBAAkB,kBACvB,KAAK,YAAc,kBACnB,KAAK,MAAQ,OACb,KAAK,SAAW,GAChB,KAAK,iBAAoBC,GAAUA,EAAQ,MAAM,SAAS,sBAC1D,KAAK,SAAW,GAChB,KAAK,OAAS,CACV,YACA,WACA,QACA,aACA,WACZ,EACQ,KAAK,KAAO,CACR,OAAQ,qDACR,KAAM,GACN,MAAO,SACP,WAAY,IACZ,OAAQ,IACpB,EACQ,KAAK,MAAQ,GACb,KAAK,qBAAuB,CAACC,EAAKlL,IAAU6I,GAAc7I,EAAQ,eAAe,EACjF,KAAK,iBAAmB,CAACkL,EAAKlL,IAAU6I,GAAc7I,EAAQ,WAAW,EACzE,KAAK,WAAa,CAACkL,EAAKlL,IAAU6I,GAAc7I,EAAQ,KAAK,EAC7D,KAAK,UAAY,IACjB,KAAK,YAAc,CACf,KAAM,UACN,UAAW,GACX,iBAAkB,EAC9B,EACQ,KAAK,oBAAsB,GAC3B,KAAK,QAAU,KACf,KAAK,QAAU,KACf,KAAK,QAAU,GACf,KAAK,QAAU,GACf,KAAK,WAAa,GAClB,KAAK,MAAQ,OACb,KAAK,OAAS,GACd,KAAK,SAAW,GAChB,KAAK,wBAA0B,GAC/B,KAAK,SAAS+K,CAAY,EAC1B,KAAK,MAAMC,CAAS,CACvB,CACJ,IAAIH,EAAOlF,EAAQ,CACZ,OAAOa,GAAI,KAAMqE,EAAOlF,CAAM,CACjC,CACJ,IAAIkF,EAAO,CACJ,OAAOH,GAAW,KAAMG,CAAK,CAChC,CACJ,SAASA,EAAOlF,EAAQ,CACjB,OAAOa,GAAIiE,GAAaI,EAAOlF,CAAM,CACxC,CACD,SAASkF,EAAOlF,EAAQ,CACpB,OAAOa,GAAIgE,GAAWK,EAAOlF,CAAM,CACtC,CACJ,MAAMkF,EAAO3B,EAAMiC,EAAaC,EAAY,CACrC,MAAMC,EAAcX,GAAW,KAAMG,CAAK,EACpCS,EAAoBZ,GAAW,KAAMS,CAAW,EAChDI,EAAc,IAAMrC,EAC1B,OAAO,iBAAiBmC,EAAa,CACjC,CAACE,CAAW,EAAG,CACX,MAAOF,EAAYnC,CAAI,EACvB,SAAU,EACb,EACD,CAACA,CAAI,EAAG,CACJ,WAAY,GACZ,KAAO,CACH,MAAMsC,EAAQ,KAAKD,CAAW,EACxB5L,EAAS2L,EAAkBF,CAAU,EAC3C,OAAI9M,EAASkN,CAAK,EACP,OAAO,OAAO,CAAE,EAAE7L,EAAQ6L,CAAK,EAEnC9M,EAAe8M,EAAO7L,CAAM,CACtC,EACD,IAAKvB,EAAO,CACR,KAAKmN,CAAW,EAAInN,CACvB,CACJ,CACb,CAAS,CACJ,CACD,MAAMqN,EAAU,CACZA,EAAS,QAASC,GAAQA,EAAM,IAAI,CAAC,CACxC,CACL,CACA,IAAIzC,EAA2B,IAAI6B,GAAS,CACxC,YAAc5B,GAAO,CAACA,EAAK,WAAW,IAAI,EAC1C,WAAaA,GAAOA,IAAS,SAC7B,MAAO,CACH,UAAW,aACd,EACD,YAAa,CACT,YAAa,GACb,WAAY,EACf,CACL,EAAG,CACCF,GACAG,GACAmB,EACJ,CAAC,EAOG,SAASqB,GAAaC,EAAM,CAC5B,MAAI,CAACA,GAAQzN,EAAcyN,EAAK,IAAI,GAAKzN,EAAcyN,EAAK,MAAM,EACvD,MAEHA,EAAK,MAAQA,EAAK,MAAQ,IAAM,KAAOA,EAAK,OAASA,EAAK,OAAS,IAAM,IAAMA,EAAK,KAAO,MAAQA,EAAK,MACpH,CAGI,SAASC,GAAaX,EAAKY,EAAMC,EAAIC,EAASC,EAAQ,CACtD,IAAIC,EAAYJ,EAAKG,CAAM,EAC3B,OAAKC,IACDA,EAAYJ,EAAKG,CAAM,EAAIf,EAAI,YAAYe,CAAM,EAAE,MACnDF,EAAG,KAAKE,CAAM,GAEdC,EAAYF,IACZA,EAAUE,GAEPF,CACX,CAoDI,SAASG,GAAYC,EAAOC,EAAOC,EAAO,CAC1C,MAAMC,EAAmBH,EAAM,wBACzBI,EAAYF,IAAU,EAAI,KAAK,IAAIA,EAAQ,EAAG,EAAG,EAAI,EAC3D,OAAO,KAAK,OAAOD,EAAQG,GAAaD,CAAgB,EAAIA,EAAmBC,CACnF,CAGI,SAASC,GAAYC,EAAQxB,EAAK,CAC9B,CAACA,GAAO,CAACwB,IAGbxB,EAAMA,GAAOwB,EAAO,WAAW,IAAI,EACnCxB,EAAI,KAAI,EAGRA,EAAI,eAAc,EAClBA,EAAI,UAAU,EAAG,EAAGwB,EAAO,MAAOA,EAAO,MAAM,EAC/CxB,EAAI,QAAO,EACf,CACA,SAASyB,GAAUzB,EAAKlL,EAASkC,EAAGC,EAAG,CAEnCyK,GAAgB1B,EAAKlL,EAASkC,EAAGC,EAAG,IAAI,CAC5C,CAEA,SAASyK,GAAgB1B,EAAKlL,EAASkC,EAAGC,EAAGjI,EAAG,CAC5C,IAAIoD,EAAMuP,EAASC,EAASC,EAAMC,EAAcV,EAAOW,EAAUC,EACjE,MAAMC,EAAQnN,EAAQ,WAChBoN,EAAWpN,EAAQ,SACnBqN,EAASrN,EAAQ,OACvB,IAAIsN,GAAOF,GAAY,GAAKzL,GAC5B,GAAIwL,GAAS,OAAOA,GAAU,WAC1B7P,EAAO6P,EAAM,WACT7P,IAAS,6BAA+BA,IAAS,8BAA8B,CAC/E4N,EAAI,KAAI,EACRA,EAAI,UAAUhJ,EAAGC,CAAC,EAClB+I,EAAI,OAAOoC,CAAG,EACdpC,EAAI,UAAUiC,EAAO,CAACA,EAAM,MAAQ,EAAG,CAACA,EAAM,OAAS,EAAGA,EAAM,MAAOA,EAAM,MAAM,EACnFjC,EAAI,QAAO,EACX,MACH,CAEL,GAAI,QAAMmC,CAAM,GAAKA,GAAU,GAI/B,QADAnC,EAAI,UAAS,EACNiC,EAAK,CAER,QACQjT,EACAgR,EAAI,QAAQhJ,EAAGC,EAAGjI,EAAI,EAAGmT,EAAQ,EAAG,EAAG7L,CAAG,EAE1C0J,EAAI,IAAIhJ,EAAGC,EAAGkL,EAAQ,EAAG7L,CAAG,EAEhC0J,EAAI,UAAS,EACb,MACJ,IAAK,WACDoB,EAAQpS,EAAIA,EAAI,EAAImT,EACpBnC,EAAI,OAAOhJ,EAAI,KAAK,IAAIoL,CAAG,EAAIhB,EAAOnK,EAAI,KAAK,IAAImL,CAAG,EAAID,CAAM,EAChEC,GAAOxL,GACPoJ,EAAI,OAAOhJ,EAAI,KAAK,IAAIoL,CAAG,EAAIhB,EAAOnK,EAAI,KAAK,IAAImL,CAAG,EAAID,CAAM,EAChEC,GAAOxL,GACPoJ,EAAI,OAAOhJ,EAAI,KAAK,IAAIoL,CAAG,EAAIhB,EAAOnK,EAAI,KAAK,IAAImL,CAAG,EAAID,CAAM,EAChEnC,EAAI,UAAS,EACb,MACJ,IAAK,cAQD8B,EAAeK,EAAS,KACxBN,EAAOM,EAASL,EAChBH,EAAU,KAAK,IAAIS,EAAMzL,EAAU,EAAIkL,EACvCE,EAAW,KAAK,IAAIK,EAAMzL,EAAU,GAAK3H,EAAIA,EAAI,EAAI8S,EAAeD,GACpED,EAAU,KAAK,IAAIQ,EAAMzL,EAAU,EAAIkL,EACvCG,EAAW,KAAK,IAAII,EAAMzL,EAAU,GAAK3H,EAAIA,EAAI,EAAI8S,EAAeD,GACpE7B,EAAI,IAAIhJ,EAAI+K,EAAU9K,EAAI2K,EAASE,EAAcM,EAAM/L,EAAI+L,EAAM1L,CAAO,EACxEsJ,EAAI,IAAIhJ,EAAIgL,EAAU/K,EAAI0K,EAASG,EAAcM,EAAM1L,EAAS0L,CAAG,EACnEpC,EAAI,IAAIhJ,EAAI+K,EAAU9K,EAAI2K,EAASE,EAAcM,EAAKA,EAAM1L,CAAO,EACnEsJ,EAAI,IAAIhJ,EAAIgL,EAAU/K,EAAI0K,EAASG,EAAcM,EAAM1L,EAAS0L,EAAM/L,CAAE,EACxE2J,EAAI,UAAS,EACb,MACJ,IAAK,OACD,GAAI,CAACkC,EAAU,CACXL,EAAO,KAAK,QAAUM,EACtBf,EAAQpS,EAAIA,EAAI,EAAI6S,EACpB7B,EAAI,KAAKhJ,EAAIoK,EAAOnK,EAAI4K,EAAM,EAAIT,EAAO,EAAIS,CAAI,EACjD,KACH,CACDO,GAAOzL,GACS,IAAK,UACrBoL,EAAW,KAAK,IAAIK,CAAG,GAAKpT,EAAIA,EAAI,EAAImT,GACxCR,EAAU,KAAK,IAAIS,CAAG,EAAID,EAC1BP,EAAU,KAAK,IAAIQ,CAAG,EAAID,EAC1BH,EAAW,KAAK,IAAII,CAAG,GAAKpT,EAAIA,EAAI,EAAImT,GACxCnC,EAAI,OAAOhJ,EAAI+K,EAAU9K,EAAI2K,CAAO,EACpC5B,EAAI,OAAOhJ,EAAIgL,EAAU/K,EAAI0K,CAAO,EACpC3B,EAAI,OAAOhJ,EAAI+K,EAAU9K,EAAI2K,CAAO,EACpC5B,EAAI,OAAOhJ,EAAIgL,EAAU/K,EAAI0K,CAAO,EACpC3B,EAAI,UAAS,EACb,MACJ,IAAK,WACDoC,GAAOzL,GACS,IAAK,QACrBoL,EAAW,KAAK,IAAIK,CAAG,GAAKpT,EAAIA,EAAI,EAAImT,GACxCR,EAAU,KAAK,IAAIS,CAAG,EAAID,EAC1BP,EAAU,KAAK,IAAIQ,CAAG,EAAID,EAC1BH,EAAW,KAAK,IAAII,CAAG,GAAKpT,EAAIA,EAAI,EAAImT,GACxCnC,EAAI,OAAOhJ,EAAI+K,EAAU9K,EAAI2K,CAAO,EACpC5B,EAAI,OAAOhJ,EAAI+K,EAAU9K,EAAI2K,CAAO,EACpC5B,EAAI,OAAOhJ,EAAIgL,EAAU/K,EAAI0K,CAAO,EACpC3B,EAAI,OAAOhJ,EAAIgL,EAAU/K,EAAI0K,CAAO,EACpC,MACJ,IAAK,OACDI,EAAW,KAAK,IAAIK,CAAG,GAAKpT,EAAIA,EAAI,EAAImT,GACxCR,EAAU,KAAK,IAAIS,CAAG,EAAID,EAC1BP,EAAU,KAAK,IAAIQ,CAAG,EAAID,EAC1BH,EAAW,KAAK,IAAII,CAAG,GAAKpT,EAAIA,EAAI,EAAImT,GACxCnC,EAAI,OAAOhJ,EAAI+K,EAAU9K,EAAI2K,CAAO,EACpC5B,EAAI,OAAOhJ,EAAI+K,EAAU9K,EAAI2K,CAAO,EACpC5B,EAAI,OAAOhJ,EAAIgL,EAAU/K,EAAI0K,CAAO,EACpC3B,EAAI,OAAOhJ,EAAIgL,EAAU/K,EAAI0K,CAAO,EACpCS,GAAOzL,GACPoL,EAAW,KAAK,IAAIK,CAAG,GAAKpT,EAAIA,EAAI,EAAImT,GACxCR,EAAU,KAAK,IAAIS,CAAG,EAAID,EAC1BP,EAAU,KAAK,IAAIQ,CAAG,EAAID,EAC1BH,EAAW,KAAK,IAAII,CAAG,GAAKpT,EAAIA,EAAI,EAAImT,GACxCnC,EAAI,OAAOhJ,EAAI+K,EAAU9K,EAAI2K,CAAO,EACpC5B,EAAI,OAAOhJ,EAAI+K,EAAU9K,EAAI2K,CAAO,EACpC5B,EAAI,OAAOhJ,EAAIgL,EAAU/K,EAAI0K,CAAO,EACpC3B,EAAI,OAAOhJ,EAAIgL,EAAU/K,EAAI0K,CAAO,EACpC,MACJ,IAAK,OACDA,EAAU3S,EAAIA,EAAI,EAAI,KAAK,IAAIoT,CAAG,EAAID,EACtCP,EAAU,KAAK,IAAIQ,CAAG,EAAID,EAC1BnC,EAAI,OAAOhJ,EAAI2K,EAAS1K,EAAI2K,CAAO,EACnC5B,EAAI,OAAOhJ,EAAI2K,EAAS1K,EAAI2K,CAAO,EACnC,MACJ,IAAK,OACD5B,EAAI,OAAOhJ,EAAGC,CAAC,EACf+I,EAAI,OAAOhJ,EAAI,KAAK,IAAIoL,CAAG,GAAKpT,EAAIA,EAAI,EAAImT,GAASlL,EAAI,KAAK,IAAImL,CAAG,EAAID,CAAM,EAC/E,MACJ,IAAK,GACDnC,EAAI,UAAS,EACb,KACP,CACDA,EAAI,KAAI,EACJlL,EAAQ,YAAc,GACtBkL,EAAI,OAAM,EAElB,CAOI,SAASqC,GAAeC,EAAOC,EAAMC,EAAQ,CAC7C,OAAAA,EAASA,GAAU,GACZ,CAACD,GAAQD,GAASA,EAAM,EAAIC,EAAK,KAAOC,GAAUF,EAAM,EAAIC,EAAK,MAAQC,GAAUF,EAAM,EAAIC,EAAK,IAAMC,GAAUF,EAAM,EAAIC,EAAK,OAASC,CACrJ,CACA,SAASC,GAASzC,EAAKuC,EAAM,CACzBvC,EAAI,KAAI,EACRA,EAAI,UAAS,EACbA,EAAI,KAAKuC,EAAK,KAAMA,EAAK,IAAKA,EAAK,MAAQA,EAAK,KAAMA,EAAK,OAASA,EAAK,GAAG,EAC5EvC,EAAI,KAAI,CACZ,CACA,SAAS0C,GAAW1C,EAAK,CACrBA,EAAI,QAAO,CACf,CAGI,SAAS2C,GAAe3C,EAAK4C,EAAUnO,EAAQoO,EAAMC,EAAM,CAC3D,GAAI,CAACF,EACD,OAAO5C,EAAI,OAAOvL,EAAO,EAAGA,EAAO,CAAC,EAExC,GAAIqO,IAAS,SAAU,CACnB,MAAMC,GAAYH,EAAS,EAAInO,EAAO,GAAK,EAC3CuL,EAAI,OAAO+C,EAAUH,EAAS,CAAC,EAC/B5C,EAAI,OAAO+C,EAAUtO,EAAO,CAAC,CAChC,MAAUqO,IAAS,SAAY,CAAC,CAACD,EAC9B7C,EAAI,OAAO4C,EAAS,EAAGnO,EAAO,CAAC,EAE/BuL,EAAI,OAAOvL,EAAO,EAAGmO,EAAS,CAAC,EAEnC5C,EAAI,OAAOvL,EAAO,EAAGA,EAAO,CAAC,CACjC,CAGI,SAASuO,GAAehD,EAAK4C,EAAUnO,EAAQoO,EAAM,CACrD,GAAI,CAACD,EACD,OAAO5C,EAAI,OAAOvL,EAAO,EAAGA,EAAO,CAAC,EAExCuL,EAAI,cAAc6C,EAAOD,EAAS,KAAOA,EAAS,KAAMC,EAAOD,EAAS,KAAOA,EAAS,KAAMC,EAAOpO,EAAO,KAAOA,EAAO,KAAMoO,EAAOpO,EAAO,KAAOA,EAAO,KAAMA,EAAO,EAAGA,EAAO,CAAC,CACxL,CACA,SAASwO,GAAcjD,EAAKkD,EAAM,CAC1BA,EAAK,aACLlD,EAAI,UAAUkD,EAAK,YAAY,CAAC,EAAGA,EAAK,YAAY,CAAC,CAAC,EAErDjQ,EAAciQ,EAAK,QAAQ,GAC5BlD,EAAI,OAAOkD,EAAK,QAAQ,EAExBA,EAAK,QACLlD,EAAI,UAAYkD,EAAK,OAErBA,EAAK,YACLlD,EAAI,UAAYkD,EAAK,WAErBA,EAAK,eACLlD,EAAI,aAAekD,EAAK,aAEhC,CACA,SAASC,GAAanD,EAAKhJ,EAAGC,EAAGmM,EAAMF,EAAM,CACzC,GAAIA,EAAK,eAAiBA,EAAK,UAAW,CAOtC,MAAMG,EAAUrD,EAAI,YAAYoD,CAAI,EAC9BlH,EAAOlF,EAAIqM,EAAQ,sBACnBlH,EAAQnF,EAAIqM,EAAQ,uBACpBC,EAAMrM,EAAIoM,EAAQ,wBAClBE,EAAStM,EAAIoM,EAAQ,yBACrBG,EAAcN,EAAK,eAAiBI,EAAMC,GAAU,EAAIA,EAC9DvD,EAAI,YAAcA,EAAI,UACtBA,EAAI,UAAS,EACbA,EAAI,UAAYkD,EAAK,iBAAmB,EACxClD,EAAI,OAAO9D,EAAMsH,CAAW,EAC5BxD,EAAI,OAAO7D,EAAOqH,CAAW,EAC7BxD,EAAI,OAAM,CACb,CACL,CACA,SAASyD,GAAazD,EAAKkD,EAAM,CAC7B,MAAMQ,EAAW1D,EAAI,UACrBA,EAAI,UAAYkD,EAAK,MACrBlD,EAAI,SAASkD,EAAK,KAAMA,EAAK,IAAKA,EAAK,MAAOA,EAAK,MAAM,EACzDlD,EAAI,UAAY0D,CACpB,CAGI,SAASC,GAAW3D,EAAK4D,EAAM5M,EAAGC,EAAGyJ,EAAMwC,EAAO,GAAI,CACtD,MAAMW,EAAQ1Q,EAAQyQ,CAAI,EAAIA,EAAO,CACjCA,CACR,EACUE,EAASZ,EAAK,YAAc,GAAKA,EAAK,cAAgB,GAC5D,IAAIhU,EAAGkU,EAIP,IAHApD,EAAI,KAAI,EACRA,EAAI,KAAOU,EAAK,OAChBuC,GAAcjD,EAAKkD,CAAI,EACnBhU,EAAI,EAAGA,EAAI2U,EAAM,OAAQ,EAAE3U,EAC3BkU,EAAOS,EAAM3U,CAAC,EACVgU,EAAK,UACLO,GAAazD,EAAKkD,EAAK,QAAQ,EAE/BY,IACIZ,EAAK,cACLlD,EAAI,YAAckD,EAAK,aAEtBjQ,EAAciQ,EAAK,WAAW,IAC/BlD,EAAI,UAAYkD,EAAK,aAEzBlD,EAAI,WAAWoD,EAAMpM,EAAGC,EAAGiM,EAAK,QAAQ,GAE5ClD,EAAI,SAASoD,EAAMpM,EAAGC,EAAGiM,EAAK,QAAQ,EACtCC,GAAanD,EAAKhJ,EAAGC,EAAGmM,EAAMF,CAAI,EAClCjM,GAAK,OAAOyJ,EAAK,UAAU,EAE/BV,EAAI,QAAO,CACf,CAKI,SAAS+D,GAAmB/D,EAAKgE,EAAM,CACvC,KAAM,CAAE,EAAAhN,EAAI,EAAAC,EAAI,EAAAjI,EAAI,EAAA3B,EAAI,OAAA8U,CAAS,EAAG6B,EAEpChE,EAAI,IAAIhJ,EAAImL,EAAO,QAASlL,EAAIkL,EAAO,QAASA,EAAO,QAAS,IAAM9L,EAAIA,EAAI,EAAI,EAElF2J,EAAI,OAAOhJ,EAAGC,EAAI5J,EAAI8U,EAAO,UAAU,EAEvCnC,EAAI,IAAIhJ,EAAImL,EAAO,WAAYlL,EAAI5J,EAAI8U,EAAO,WAAYA,EAAO,WAAY9L,EAAIK,EAAS,EAAI,EAE9FsJ,EAAI,OAAOhJ,EAAIhI,EAAImT,EAAO,YAAalL,EAAI5J,CAAC,EAE5C2S,EAAI,IAAIhJ,EAAIhI,EAAImT,EAAO,YAAalL,EAAI5J,EAAI8U,EAAO,YAAaA,EAAO,YAAazL,EAAS,EAAG,EAAI,EAEpGsJ,EAAI,OAAOhJ,EAAIhI,EAAGiI,EAAIkL,EAAO,QAAQ,EAErCnC,EAAI,IAAIhJ,EAAIhI,EAAImT,EAAO,SAAUlL,EAAIkL,EAAO,SAAUA,EAAO,SAAU,EAAG,CAACzL,EAAS,EAAI,EAExFsJ,EAAI,OAAOhJ,EAAImL,EAAO,QAASlL,CAAC,CACpC,CAEA,MAAMgN,GAAc,uCACdC,GAAa,wEAWf,SAASC,GAAajR,EAAO2O,EAAM,CACnC,MAAMuC,GAAW,GAAKlR,GAAO,MAAM+Q,EAAW,EAC9C,GAAI,CAACG,GAAWA,EAAQ,CAAC,IAAM,SAC3B,OAAOvC,EAAO,IAGlB,OADA3O,EAAQ,CAACkR,EAAQ,CAAC,EACXA,EAAQ,CAAC,EAAC,CACb,IAAK,KACD,OAAOlR,EACX,IAAK,IACDA,GAAS,IACT,KACP,CACD,OAAO2O,EAAO3O,CAClB,CACA,MAAMmR,GAAgBnX,GAAI,CAACA,GAAK,EAChC,SAASoX,GAAkBpR,EAAOqR,EAAO,CACrC,MAAMnW,EAAM,CAAA,EACNoW,EAAWpR,EAASmR,CAAK,EACzB5T,EAAO6T,EAAW,OAAO,KAAKD,CAAK,EAAIA,EACvCE,EAAOrR,EAASF,CAAK,EAAIsR,EAAYE,GAAOlR,EAAeN,EAAMwR,CAAI,EAAGxR,EAAMqR,EAAMG,CAAI,CAAC,CAAC,EAAKA,GAAOxR,EAAMwR,CAAI,EAAI,IAAIxR,EAC9H,UAAWwR,KAAQ/T,EACfvC,EAAIsW,CAAI,EAAIL,GAAaI,EAAKC,CAAI,CAAC,EAEvC,OAAOtW,CACX,CAQI,SAASuW,GAAOzR,EAAO,CACvB,OAAOoR,GAAkBpR,EAAO,CAC5B,IAAK,IACL,MAAO,IACP,OAAQ,IACR,KAAM,GACd,CAAK,CACL,CAOI,SAAS0R,GAAc1R,EAAO,CAC9B,OAAOoR,GAAkBpR,EAAO,CAC5B,UACA,WACA,aACA,aACR,CAAK,CACL,CAQI,SAAS2R,EAAU3R,EAAO,CAC1B,MAAMb,EAAMsS,GAAOzR,CAAK,EACxB,OAAAb,EAAI,MAAQA,EAAI,KAAOA,EAAI,MAC3BA,EAAI,OAASA,EAAI,IAAMA,EAAI,OACpBA,CACX,CAOI,SAASyS,EAAOhQ,EAASiQ,EAAU,CACnCjQ,EAAUA,GAAW,GACrBiQ,EAAWA,GAAYhH,EAAS,KAChC,IAAI8D,EAAOrO,EAAesB,EAAQ,KAAMiQ,EAAS,IAAI,EACjD,OAAOlD,GAAS,WAChBA,EAAO,SAASA,EAAM,EAAE,GAE5B,IAAII,EAAQzO,EAAesB,EAAQ,MAAOiQ,EAAS,KAAK,EACpD9C,GAAS,EAAE,GAAKA,GAAO,MAAMiC,EAAU,IACvC,QAAQ,KAAK,kCAAoCjC,EAAQ,GAAG,EAC5DA,EAAQ,QAEZ,MAAMvB,EAAO,CACT,OAAQlN,EAAesB,EAAQ,OAAQiQ,EAAS,MAAM,EACtD,WAAYZ,GAAa3Q,EAAesB,EAAQ,WAAYiQ,EAAS,UAAU,EAAGlD,CAAI,EACtF,KAAAA,EACA,MAAAI,EACA,OAAQzO,EAAesB,EAAQ,OAAQiQ,EAAS,MAAM,EACtD,OAAQ,EAChB,EACI,OAAArE,EAAK,OAASD,GAAaC,CAAI,EACxBA,CACX,CAWI,SAASsE,GAAQC,EAAQlF,EAAS/F,EAAOkL,EAAM,CAE/C,IAAIhW,EAAGmF,EAAMnB,EACb,IAAIhE,EAAI,EAAGmF,EAAO4Q,EAAO,OAAQ/V,EAAImF,EAAM,EAAEnF,EAEzC,GADAgE,EAAQ+R,EAAO/V,CAAC,EACZgE,IAAU,QAWVA,IAAU,OAIV,OAAOA,CAGnB,CAMI,SAASiS,GAAUC,EAAQC,EAAOC,EAAa,CAC/C,KAAM,CAAE,IAAA7V,EAAM,IAAAF,CAAM,EAAG6V,EACjBG,EAAS9R,GAAY4R,GAAQ9V,EAAME,GAAO,CAAC,EAC3C+V,EAAW,CAACtS,EAAOuS,IAAMH,GAAepS,IAAU,EAAI,EAAIA,EAAQuS,EACxE,MAAO,CACH,IAAKD,EAAS/V,EAAK,CAAC,KAAK,IAAI8V,CAAM,CAAC,EACpC,IAAKC,EAASjW,EAAKgW,CAAM,CACjC,CACA,CACA,SAASG,GAAcC,EAAe5F,EAAS,CAC3C,OAAO,OAAO,OAAO,OAAO,OAAO4F,CAAa,EAAG5F,CAAO,CAC9D,CAWI,SAAS6F,GAAgBC,EAAQC,EAAW,CAC5C,EACJ,EAAGC,EAAYhB,EAAUiB,EAAY,IAAIH,EAAO,CAAC,EAAG,CAChD,MAAMI,EAAkBF,GAAcF,EAClC,OAAOd,EAAa,MACpBA,EAAWmB,GAAS,YAAaL,CAAM,GAE3C,MAAMM,EAAQ,CACV,CAAC,OAAO,WAAW,EAAG,SACtB,WAAY,GACZ,QAASN,EACT,YAAaI,EACb,UAAWlB,EACX,WAAYiB,EACZ,SAAWrG,GAAQiG,GAAgB,CAC3BjG,EACA,GAAGkG,CACnB,EAAeC,EAAUG,EAAiBlB,CAAQ,CAClD,EACI,OAAO,IAAI,MAAMoB,EAAO,CAGpB,eAAgB1R,EAAQiQ,EAAM,CAC1B,cAAOjQ,EAAOiQ,CAAI,EAClB,OAAOjQ,EAAO,MACd,OAAOoR,EAAO,CAAC,EAAEnB,CAAI,EACd,EACV,EAGD,IAAKjQ,EAAQiQ,EAAM,CACf,OAAO0B,GAAQ3R,EAAQiQ,EAAM,IAAI2B,GAAqB3B,EAAMoB,EAAUD,EAAQpR,CAAM,CAAC,CACxF,EAID,yBAA0BA,EAAQiQ,EAAM,CACpC,OAAO,QAAQ,yBAAyBjQ,EAAO,QAAQ,CAAC,EAAGiQ,CAAI,CAClE,EAGD,gBAAkB,CACd,OAAO,QAAQ,eAAemB,EAAO,CAAC,CAAC,CAC1C,EAGD,IAAKpR,EAAQiQ,EAAM,CACf,OAAO4B,GAAqB7R,CAAM,EAAE,SAASiQ,CAAI,CACpD,EAGD,QAASjQ,EAAQ,CACb,OAAO6R,GAAqB7R,CAAM,CACrC,EAGD,IAAKA,EAAQiQ,EAAMxR,EAAO,CACtB,MAAMqT,EAAU9R,EAAO,WAAaA,EAAO,SAAWuR,EAAS,GAC/D,OAAAvR,EAAOiQ,CAAI,EAAI6B,EAAQ7B,CAAI,EAAIxR,EAC/B,OAAOuB,EAAO,MACP,EACV,CACT,CAAK,CACL,CAQI,SAAS+R,GAAeC,EAAO1G,EAAS2G,EAAUC,EAAoB,CACtE,MAAMR,EAAQ,CACV,WAAY,GACZ,OAAQM,EACR,SAAU1G,EACV,UAAW2G,EACX,OAAQ,IAAI,IACZ,aAAc7G,GAAa4G,EAAOE,CAAkB,EACpD,WAAa3G,GAAMwG,GAAeC,EAAOzG,EAAK0G,EAAUC,CAAkB,EAC1E,SAAWhH,GAAQ6G,GAAeC,EAAM,SAAS9G,CAAK,EAAGI,EAAS2G,EAAUC,CAAkB,CACtG,EACI,OAAO,IAAI,MAAMR,EAAO,CAGpB,eAAgB1R,EAAQiQ,EAAM,CAC1B,cAAOjQ,EAAOiQ,CAAI,EAClB,OAAO+B,EAAM/B,CAAI,EACV,EACV,EAGD,IAAKjQ,EAAQiQ,EAAMkC,EAAU,CACzB,OAAOR,GAAQ3R,EAAQiQ,EAAM,IAAImC,GAAoBpS,EAAQiQ,EAAMkC,CAAQ,CAAC,CAC/E,EAID,yBAA0BnS,EAAQiQ,EAAM,CACpC,OAAOjQ,EAAO,aAAa,QAAU,QAAQ,IAAIgS,EAAO/B,CAAI,EAAI,CAC5D,WAAY,GACZ,aAAc,EACjB,EAAG,OAAY,QAAQ,yBAAyB+B,EAAO/B,CAAI,CAC/D,EAGD,gBAAkB,CACd,OAAO,QAAQ,eAAe+B,CAAK,CACtC,EAGD,IAAKhS,EAAQiQ,EAAM,CACf,OAAO,QAAQ,IAAI+B,EAAO/B,CAAI,CACjC,EAGD,SAAW,CACP,OAAO,QAAQ,QAAQ+B,CAAK,CAC/B,EAGD,IAAKhS,EAAQiQ,EAAMxR,EAAO,CACtB,OAAAuT,EAAM/B,CAAI,EAAIxR,EACd,OAAOuB,EAAOiQ,CAAI,EACX,EACV,CACT,CAAK,CACL,CAGI,SAAS7E,GAAa4G,EAAO1I,EAAW,CACxC,WAAY,GACZ,UAAW,EACf,EAAG,CACC,KAAM,CAAE,YAAA+I,EAAa/I,EAAS,WAAa,WAAAgJ,EAAYhJ,EAAS,UAAY,SAAAiJ,EAAUjJ,EAAS,OAAO,EAAM0I,EAC5G,MAAO,CACH,QAASO,EACT,WAAYF,EACZ,UAAWC,EACX,aAAc/Q,GAAW8Q,CAAW,EAAIA,EAAc,IAAIA,EAC1D,YAAa9Q,GAAW+Q,CAAU,EAAIA,EAAa,IAAIA,CAC/D,CACA,CACA,MAAME,GAAU,CAACC,EAAQlJ,IAAOkJ,EAASA,EAASpR,GAAYkI,CAAI,EAAIA,EAChEmJ,GAAmB,CAACzC,EAAMxR,IAAQE,EAASF,CAAK,GAAKwR,IAAS,aAAe,OAAO,eAAexR,CAAK,IAAM,MAAQA,EAAM,cAAgB,QAClJ,SAASkT,GAAQ3R,EAAQiQ,EAAMM,EAAS,CACpC,GAAI,OAAO,UAAU,eAAe,KAAKvQ,EAAQiQ,CAAI,GAAKA,IAAS,cAC/D,OAAOjQ,EAAOiQ,CAAI,EAEtB,MAAMxR,EAAQ8R,IAEd,OAAAvQ,EAAOiQ,CAAI,EAAIxR,EACRA,CACX,CACA,SAAS2T,GAAoBpS,EAAQiQ,EAAMkC,EAAU,CACjD,KAAM,CAAE,OAAAQ,EAAS,SAAAC,EAAW,UAAAC,EAAY,aAAc/H,CAAc,EAAG9K,EACvE,IAAIvB,EAAQkU,EAAO1C,CAAI,EAEvB,OAAI1O,GAAW9C,CAAK,GAAKqM,EAAY,aAAamF,CAAI,IAClDxR,EAAQqU,GAAmB7C,EAAMxR,EAAOuB,EAAQmS,CAAQ,GAExDzT,EAAQD,CAAK,GAAKA,EAAM,SACxBA,EAAQsU,GAAc9C,EAAMxR,EAAOuB,EAAQ8K,EAAY,WAAW,GAElE4H,GAAiBzC,EAAMxR,CAAK,IAE5BA,EAAQsT,GAAetT,EAAOmU,EAAUC,GAAaA,EAAU5C,CAAI,EAAGnF,CAAW,GAE9ErM,CACX,CACA,SAASqU,GAAmB7C,EAAM+C,EAAUhT,EAAQmS,EAAU,CAC1D,KAAM,CAAE,OAAAQ,EAAS,SAAAC,EAAW,UAAAC,EAAY,OAAAI,CAAM,EAAMjT,EACpD,GAAIiT,EAAO,IAAIhD,CAAI,EACf,MAAM,IAAI,MAAM,uBAAyB,MAAM,KAAKgD,CAAM,EAAE,KAAK,IAAI,EAAI,KAAOhD,CAAI,EAExFgD,EAAO,IAAIhD,CAAI,EACf,IAAIxR,EAAQuU,EAASJ,EAAUC,GAAaV,CAAQ,EACpD,OAAAc,EAAO,OAAOhD,CAAI,EACdyC,GAAiBzC,EAAMxR,CAAK,IAE5BA,EAAQyU,GAAkBP,EAAO,QAASA,EAAQ1C,EAAMxR,CAAK,GAE1DA,CACX,CACA,SAASsU,GAAc9C,EAAMxR,EAAOuB,EAAQmT,EAAa,CACrD,KAAM,CAAE,OAAAR,EAAS,SAAAC,EAAW,UAAAC,EAAY,aAAc/H,CAAc,EAAG9K,EACvE,GAAI,OAAO4S,EAAS,MAAU,KAAeO,EAAYlD,CAAI,EACzD,OAAOxR,EAAMmU,EAAS,MAAQnU,EAAM,MAAM,EACvC,GAAIE,EAASF,EAAM,CAAC,CAAC,EAAG,CAE3B,MAAM2U,EAAM3U,EACN2S,EAASuB,EAAO,QAAQ,OAAQzY,GAAIA,IAAMkZ,CAAG,EACnD3U,EAAQ,CAAA,EACR,UAAWgD,KAAQ2R,EAAI,CACnB,MAAMC,EAAWH,GAAkB9B,EAAQuB,EAAQ1C,EAAMxO,CAAI,EAC7DhD,EAAM,KAAKsT,GAAesB,EAAUT,EAAUC,GAAaA,EAAU5C,CAAI,EAAGnF,CAAW,CAAC,CAC3F,CACJ,CACD,OAAOrM,CACX,CACA,SAAS6U,GAAgBhD,EAAUL,EAAMxR,EAAO,CAC5C,OAAO8C,GAAW+O,CAAQ,EAAIA,EAASL,EAAMxR,CAAK,EAAI6R,CAC1D,CACA,MAAMiD,GAAW,CAACpT,EAAKqT,IAASrT,IAAQ,GAAOqT,EAAS,OAAOrT,GAAQ,SAAWiB,GAAiBoS,EAAQrT,CAAG,EAAI,OAClH,SAASsT,GAAU5M,EAAK6M,EAAcvT,EAAKwT,EAAgBlV,EAAO,CAC9D,UAAW+U,KAAUE,EAAa,CAC9B,MAAMxI,EAAQqI,GAASpT,EAAKqT,CAAM,EAClC,GAAItI,EAAO,CACPrE,EAAI,IAAIqE,CAAK,EACb,MAAMoF,EAAWgD,GAAgBpI,EAAM,UAAW/K,EAAK1B,CAAK,EAC5D,GAAI,OAAO6R,EAAa,KAAeA,IAAanQ,GAAOmQ,IAAaqD,EAGpE,OAAOrD,CAEvB,SAAmBpF,IAAU,IAAS,OAAOyI,EAAmB,KAAexT,IAAQwT,EAG3E,OAAO,IAEd,CACD,MAAO,EACX,CACA,SAAST,GAAkBQ,EAAcL,EAAUpD,EAAMxR,EAAO,CAC5D,MAAM6S,EAAa+B,EAAS,YACtB/C,EAAWgD,GAAgBD,EAAS,UAAWpD,EAAMxR,CAAK,EAC1DmV,EAAY,CACd,GAAGF,EACH,GAAGpC,CACX,EACUzK,EAAM,IAAI,IAChBA,EAAI,IAAIpI,CAAK,EACb,IAAI0B,EAAM0T,GAAiBhN,EAAK+M,EAAW3D,EAAMK,GAAYL,EAAMxR,CAAK,EAIxE,OAHI0B,IAAQ,MAGR,OAAOmQ,EAAa,KAAeA,IAAaL,IAChD9P,EAAM0T,GAAiBhN,EAAK+M,EAAWtD,EAAUnQ,EAAK1B,CAAK,EACvD0B,IAAQ,MACD,GAGRgR,GAAgB,MAAM,KAAKtK,CAAG,EAAG,CACpC,EACR,EAAOyK,EAAYhB,EAAU,IAAIwD,GAAaT,EAAUpD,EAAMxR,CAAK,CAAC,CACpE,CACA,SAASoV,GAAiBhN,EAAK+M,EAAWzT,EAAKmQ,EAAU7O,EAAM,CAC3D,KAAMtB,GACFA,EAAMsT,GAAU5M,EAAK+M,EAAWzT,EAAKmQ,EAAU7O,CAAI,EAEvD,OAAOtB,CACX,CACA,SAAS2T,GAAaT,EAAUpD,EAAMxR,EAAO,CACzC,MAAM+U,EAASH,EAAS,aAClBpD,KAAQuD,IACVA,EAAOvD,CAAI,EAAI,IAEnB,MAAMjQ,EAASwT,EAAOvD,CAAI,EAC1B,OAAIvR,EAAQsB,CAAM,GAAKrB,EAASF,CAAK,EAE1BA,EAEJuB,GAAU,CAAA,CACrB,CACA,SAAS4R,GAAqB3B,EAAMoB,EAAUD,EAAQY,EAAO,CACzD,IAAIvT,EACJ,UAAWgU,KAAUpB,EAEjB,GADA5S,EAAQgT,GAASe,GAAQC,EAAQxC,CAAI,EAAGmB,CAAM,EAC1C,OAAO3S,EAAU,IACjB,OAAOiU,GAAiBzC,EAAMxR,CAAK,EAAIyU,GAAkB9B,EAAQY,EAAO/B,EAAMxR,CAAK,EAAIA,CAGnG,CACA,SAASgT,GAAStR,EAAKiR,EAAQ,CAC3B,UAAWlG,KAASkG,EAAO,CACvB,GAAI,CAAClG,EACD,SAEJ,MAAMzM,EAAQyM,EAAM/K,CAAG,EACvB,GAAI,OAAO1B,EAAU,IACjB,OAAOA,CAEd,CACL,CACA,SAASoT,GAAqB7R,EAAQ,CAClC,IAAI9D,EAAO8D,EAAO,MAClB,OAAK9D,IACDA,EAAO8D,EAAO,MAAQ+T,GAAyB/T,EAAO,OAAO,GAE1D9D,CACX,CACA,SAAS6X,GAAyB3C,EAAQ,CACtC,MAAMvK,EAAM,IAAI,IAChB,UAAWqE,KAASkG,EAChB,UAAWjR,KAAO,OAAO,KAAK+K,CAAK,EAAE,OAAQ9Q,GAAI,CAACA,EAAE,WAAW,GAAG,CAAC,EAC/DyM,EAAI,IAAI1G,CAAG,EAGnB,OAAO,MAAM,KAAK0G,CAAG,CACzB,CAgBA,MAAMmN,GAAU,OAAO,SAAW,MAC5BC,GAAW,CAACnM,EAAQrN,IAAIA,EAAIqN,EAAO,QAAU,CAACA,EAAOrN,CAAC,EAAE,MAAQqN,EAAOrN,CAAC,EACxEyZ,GAAgBC,GAAYA,IAAc,IAAM,IAAM,IAC5D,SAASC,GAAYC,EAAYC,EAAaC,EAAYtX,EAAG,CAIzD,MAAMkR,EAAWkG,EAAW,KAAOC,EAAcD,EAC3C1T,EAAU2T,EACVE,EAAOD,EAAW,KAAOD,EAAcC,EACvCE,EAAMrQ,GAAsBzD,EAASwN,CAAQ,EAC7CuG,EAAMtQ,GAAsBoQ,EAAM7T,CAAO,EAC/C,IAAIgU,EAAMF,GAAOA,EAAMC,GACnBE,EAAMF,GAAOD,EAAMC,GAEvBC,EAAM,MAAMA,CAAG,EAAI,EAAIA,EACvBC,EAAM,MAAMA,CAAG,EAAI,EAAIA,EACvB,MAAMC,EAAK5X,EAAI0X,EACTG,EAAK7X,EAAI2X,EACf,MAAO,CACH,SAAU,CACN,EAAGjU,EAAQ,EAAIkU,GAAML,EAAK,EAAIrG,EAAS,GACvC,EAAGxN,EAAQ,EAAIkU,GAAML,EAAK,EAAIrG,EAAS,EAC1C,EACD,KAAM,CACF,EAAGxN,EAAQ,EAAImU,GAAMN,EAAK,EAAIrG,EAAS,GACvC,EAAGxN,EAAQ,EAAImU,GAAMN,EAAK,EAAIrG,EAAS,EAC1C,CACT,CACA,CAGI,SAAS4G,GAAejN,EAAQkN,EAAQC,EAAI,CAC5C,MAAMC,EAAYpN,EAAO,OACzB,IAAIqN,EAAQC,EAAOC,EAAMC,EAAkBC,EACvCC,EAAavB,GAASnM,EAAQ,CAAC,EACnC,QAAQrN,EAAI,EAAGA,EAAIya,EAAY,EAAG,EAAEza,EAGhC,GAFA8a,EAAeC,EACfA,EAAavB,GAASnM,EAAQrN,EAAI,CAAC,EAC/B,GAAC8a,GAAgB,CAACC,GAGtB,IAAIlT,GAAa0S,EAAOva,CAAC,EAAG,EAAGuZ,EAAO,EAAG,CACrCiB,EAAGxa,CAAC,EAAIwa,EAAGxa,EAAI,CAAC,EAAI,EACpB,QACH,CACD0a,EAASF,EAAGxa,CAAC,EAAIua,EAAOva,CAAC,EACzB2a,EAAQH,EAAGxa,EAAI,CAAC,EAAIua,EAAOva,CAAC,EAC5B6a,EAAmB,KAAK,IAAIH,EAAQ,CAAC,EAAI,KAAK,IAAIC,EAAO,CAAC,EACtD,EAAAE,GAAoB,KAGxBD,EAAO,EAAI,KAAK,KAAKC,CAAgB,EACrCL,EAAGxa,CAAC,EAAI0a,EAASE,EAAOL,EAAOva,CAAC,EAChCwa,EAAGxa,EAAI,CAAC,EAAI2a,EAAQC,EAAOL,EAAOva,CAAC,GAE3C,CACA,SAASgb,GAAgB3N,EAAQmN,EAAId,EAAY,IAAK,CAClD,MAAMuB,EAAYxB,GAAaC,CAAS,EAClCe,EAAYpN,EAAO,OACzB,IAAIsC,EAAOuL,EAAaJ,EACpBC,EAAavB,GAASnM,EAAQ,CAAC,EACnC,QAAQrN,EAAI,EAAGA,EAAIya,EAAW,EAAEza,EAAE,CAI9B,GAHAkb,EAAcJ,EACdA,EAAeC,EACfA,EAAavB,GAASnM,EAAQrN,EAAI,CAAC,EAC/B,CAAC8a,EACD,SAEJ,MAAMK,EAASL,EAAapB,CAAS,EAC/B0B,EAASN,EAAaG,CAAS,EACjCC,IACAvL,GAASwL,EAASD,EAAYxB,CAAS,GAAK,EAC5CoB,EAAa,MAAMpB,CAAS,EAAE,EAAIyB,EAASxL,EAC3CmL,EAAa,MAAMG,CAAS,EAAE,EAAIG,EAASzL,EAAQ6K,EAAGxa,CAAC,GAEvD+a,IACApL,GAASoL,EAAWrB,CAAS,EAAIyB,GAAU,EAC3CL,EAAa,MAAMpB,CAAS,EAAE,EAAIyB,EAASxL,EAC3CmL,EAAa,MAAMG,CAAS,EAAE,EAAIG,EAASzL,EAAQ6K,EAAGxa,CAAC,EAE9D,CACL,CAMI,SAASqb,GAAoBhO,EAAQqM,EAAY,IAAK,CACtD,MAAMuB,EAAYxB,GAAaC,CAAS,EAClCe,EAAYpN,EAAO,OACnBkN,EAAS,MAAME,CAAS,EAAE,KAAK,CAAC,EAChCD,EAAK,MAAMC,CAAS,EAE1B,IAAIza,EAAGkb,EAAaJ,EAChBC,EAAavB,GAASnM,EAAQ,CAAC,EACnC,IAAIrN,EAAI,EAAGA,EAAIya,EAAW,EAAEza,EAIxB,GAHAkb,EAAcJ,EACdA,EAAeC,EACfA,EAAavB,GAASnM,EAAQrN,EAAI,CAAC,EAC/B,EAAC8a,EAGL,IAAIC,EAAY,CACZ,MAAMO,EAAaP,EAAWrB,CAAS,EAAIoB,EAAapB,CAAS,EAEjEa,EAAOva,CAAC,EAAIsb,IAAe,GAAKP,EAAWE,CAAS,EAAIH,EAAaG,CAAS,GAAKK,EAAa,CACnG,CACDd,EAAGxa,CAAC,EAAKkb,EAA2BH,EAA6BnT,GAAK2S,EAAOva,EAAI,CAAC,CAAC,IAAM4H,GAAK2S,EAAOva,CAAC,CAAC,EAAI,GAAKua,EAAOva,EAAI,CAAC,EAAIua,EAAOva,CAAC,GAAK,EAA5Fua,EAAOva,EAAI,CAAC,EAAtCua,EAAOva,CAAC,EAEnCsa,GAAejN,EAAQkN,EAAQC,CAAE,EACjCQ,GAAgB3N,EAAQmN,EAAId,CAAS,CACzC,CACA,SAAS6B,GAAgBC,EAAIjb,EAAKF,EAAK,CACnC,OAAO,KAAK,IAAI,KAAK,IAAImb,EAAInb,CAAG,EAAGE,CAAG,CAC1C,CACA,SAASkb,GAAgBpO,EAAQgG,EAAM,CACnC,IAAIrT,EAAGmF,EAAMiO,EAAOsI,EAAQC,EACxBC,EAAazI,GAAe9F,EAAO,CAAC,EAAGgG,CAAI,EAC/C,IAAIrT,EAAI,EAAGmF,EAAOkI,EAAO,OAAQrN,EAAImF,EAAM,EAAEnF,EACzC2b,EAAaD,EACbA,EAASE,EACTA,EAAa5b,EAAImF,EAAO,GAAKgO,GAAe9F,EAAOrN,EAAI,CAAC,EAAGqT,CAAI,EAC1DqI,IAGLtI,EAAQ/F,EAAOrN,CAAC,EACZ2b,IACAvI,EAAM,KAAOmI,GAAgBnI,EAAM,KAAMC,EAAK,KAAMA,EAAK,KAAK,EAC9DD,EAAM,KAAOmI,GAAgBnI,EAAM,KAAMC,EAAK,IAAKA,EAAK,MAAM,GAE9DuI,IACAxI,EAAM,KAAOmI,GAAgBnI,EAAM,KAAMC,EAAK,KAAMA,EAAK,KAAK,EAC9DD,EAAM,KAAOmI,GAAgBnI,EAAM,KAAMC,EAAK,IAAKA,EAAK,MAAM,GAG1E,CAGI,SAASwI,GAA2BxO,EAAQzH,EAASyN,EAAMyI,EAAMpC,EAAW,CAC5E,IAAI1Z,EAAGmF,EAAMiO,EAAO2I,EAKpB,GAHInW,EAAQ,WACRyH,EAASA,EAAO,OAAQmO,GAAK,CAACA,EAAG,IAAI,GAErC5V,EAAQ,yBAA2B,WACnCyV,GAAoBhO,EAAQqM,CAAS,MAClC,CACH,IAAIsC,EAAOF,EAAOzO,EAAOA,EAAO,OAAS,CAAC,EAAIA,EAAO,CAAC,EACtD,IAAIrN,EAAI,EAAGmF,EAAOkI,EAAO,OAAQrN,EAAImF,EAAM,EAAEnF,EACzCoT,EAAQ/F,EAAOrN,CAAC,EAChB+b,EAAgBpC,GAAYqC,EAAM5I,EAAO/F,EAAO,KAAK,IAAIrN,EAAI,EAAGmF,GAAQ2W,EAAO,EAAI,EAAE,EAAI3W,CAAI,EAAGS,EAAQ,OAAO,EAC/GwN,EAAM,KAAO2I,EAAc,SAAS,EACpC3I,EAAM,KAAO2I,EAAc,SAAS,EACpC3I,EAAM,KAAO2I,EAAc,KAAK,EAChC3I,EAAM,KAAO2I,EAAc,KAAK,EAChCC,EAAO5I,CAEd,CACGxN,EAAQ,iBACR6V,GAAgBpO,EAAQgG,CAAI,CAEpC,CAUI,SAAS4I,IAAkB,CAC3B,OAAO,OAAO,OAAW,KAAe,OAAO,SAAa,GAChE,CAGI,SAASC,GAAeC,EAAS,CACjC,IAAIpD,EAASoD,EAAQ,WACrB,OAAIpD,GAAUA,EAAO,SAAQ,IAAO,wBAChCA,EAASA,EAAO,MAEbA,CACX,CAII,SAASqD,GAAcC,EAAY9L,EAAM+L,EAAgB,CACzD,IAAIC,EACJ,OAAI,OAAOF,GAAe,UACtBE,EAAgB,SAASF,EAAY,EAAE,EACnCA,EAAW,QAAQ,GAAG,IAAM,KAE5BE,EAAgBA,EAAgB,IAAMhM,EAAK,WAAW+L,CAAc,IAGxEC,EAAgBF,EAEbE,CACX,CACA,MAAMC,GAAoBC,GAAUA,EAAQ,cAAc,YAAY,iBAAiBA,EAAS,IAAI,EACpG,SAASC,GAASC,EAAI7T,EAAU,CAC5B,OAAO0T,GAAiBG,CAAE,EAAE,iBAAiB7T,CAAQ,CACzD,CACA,MAAM8T,GAAY,CACd,MACA,QACA,SACA,MACJ,EACA,SAASC,GAAmBC,EAAQ/J,EAAOgK,EAAQ,CAC/C,MAAMxU,EAAS,CAAA,EACfwU,EAASA,EAAS,IAAMA,EAAS,GACjC,QAAQ/c,EAAI,EAAGA,EAAI,EAAGA,IAAI,CACtB,MAAMgd,EAAMJ,GAAU5c,CAAC,EACvBuI,EAAOyU,CAAG,EAAI,WAAWF,EAAO/J,EAAQ,IAAMiK,EAAMD,CAAM,CAAC,GAAK,CACnE,CACD,OAAAxU,EAAO,MAAQA,EAAO,KAAOA,EAAO,MACpCA,EAAO,OAASA,EAAO,IAAMA,EAAO,OAC7BA,CACX,CACA,MAAM0U,GAAe,CAACnV,EAAGC,EAAGxC,KAAUuC,EAAI,GAAKC,EAAI,KAAO,CAACxC,GAAU,CAACA,EAAO,YAKzE,SAAS2X,GAAkBhW,EAAGoL,EAAQ,CACtC,MAAM6K,EAAUjW,EAAE,QACZ5B,EAAS6X,GAAWA,EAAQ,OAASA,EAAQ,CAAC,EAAIjW,EAClD,CAAE,QAAAkW,EAAU,QAAAC,CAAU,EAAG/X,EAC/B,IAAIgY,EAAM,GACNxV,EAAGC,EACP,GAAIkV,GAAaG,EAASC,EAASnW,EAAE,MAAM,EACvCY,EAAIsV,EACJrV,EAAIsV,MACD,CACH,MAAMvI,EAAOxC,EAAO,wBACpBxK,EAAIxC,EAAO,QAAUwP,EAAK,KAC1B/M,EAAIzC,EAAO,QAAUwP,EAAK,IAC1BwI,EAAM,EACT,CACD,MAAO,CACH,EAAAxV,EACA,EAAAC,EACA,IAAAuV,CACR,CACA,CAMI,SAASC,GAAoBC,EAAOxL,EAAO,CAC3C,GAAI,WAAYwL,EACZ,OAAOA,EAEX,KAAM,CAAE,OAAAlL,EAAS,wBAAAmL,CAA0B,EAAGzL,EACxCe,EAAQyJ,GAAiBlK,CAAM,EAC/BoL,EAAY3K,EAAM,YAAc,aAChC4K,EAAWd,GAAmB9J,EAAO,SAAS,EAC9C6K,EAAUf,GAAmB9J,EAAO,SAAU,OAAO,EACrD,CAAE,EAAAjL,EAAI,EAAAC,EAAI,IAAAuV,CAAM,EAAGJ,GAAkBM,EAAOlL,CAAM,EAClDG,EAAUkL,EAAS,MAAQL,GAAOM,EAAQ,MAC1ClL,EAAUiL,EAAS,KAAOL,GAAOM,EAAQ,KAC/C,GAAI,CAAE,MAAA1L,EAAQ,OAAA2L,CAAS,EAAG7L,EAC1B,OAAI0L,IACAxL,GAASyL,EAAS,MAAQC,EAAQ,MAClCC,GAAUF,EAAS,OAASC,EAAQ,QAEjC,CACH,EAAG,KAAK,OAAO9V,EAAI2K,GAAWP,EAAQI,EAAO,MAAQmL,CAAuB,EAC5E,EAAG,KAAK,OAAO1V,EAAI2K,GAAWmL,EAASvL,EAAO,OAASmL,CAAuB,CACtF,CACA,CACA,SAASK,GAAiBxL,EAAQJ,EAAO2L,EAAQ,CAC7C,IAAIE,EAAUC,EACd,GAAI9L,IAAU,QAAa2L,IAAW,OAAW,CAC7C,MAAMI,EAAY3L,GAAU4J,GAAe5J,CAAM,EACjD,GAAI,CAAC2L,EACD/L,EAAQI,EAAO,YACfuL,EAASvL,EAAO,iBACb,CACH,MAAMwC,EAAOmJ,EAAU,wBACjBC,EAAiB1B,GAAiByB,CAAS,EAC3CE,EAAkBtB,GAAmBqB,EAAgB,SAAU,OAAO,EACtEE,EAAmBvB,GAAmBqB,EAAgB,SAAS,EACrEhM,EAAQ4C,EAAK,MAAQsJ,EAAiB,MAAQD,EAAgB,MAC9DN,EAAS/I,EAAK,OAASsJ,EAAiB,OAASD,EAAgB,OACjEJ,EAAW3B,GAAc8B,EAAe,SAAUD,EAAW,aAAa,EAC1ED,EAAY5B,GAAc8B,EAAe,UAAWD,EAAW,cAAc,CAChF,CACJ,CACD,MAAO,CACH,MAAA/L,EACA,OAAA2L,EACA,SAAUE,GAAYzW,GACtB,UAAW0W,GAAa1W,EAChC,CACA,CACA,MAAM+W,GAAUrgB,GAAI,KAAK,MAAMA,EAAI,EAAE,EAAI,GAEzC,SAASsgB,GAAehM,EAAQiM,EAASC,EAAUC,EAAa,CAC5D,MAAM1L,EAAQyJ,GAAiBlK,CAAM,EAC/BoM,EAAU7B,GAAmB9J,EAAO,QAAQ,EAC5CgL,EAAW3B,GAAcrJ,EAAM,SAAUT,EAAQ,aAAa,GAAKhL,GACnE0W,EAAY5B,GAAcrJ,EAAM,UAAWT,EAAQ,cAAc,GAAKhL,GACtEqX,EAAgBb,GAAiBxL,EAAQiM,EAASC,CAAQ,EAChE,GAAI,CAAE,MAAAtM,EAAQ,OAAA2L,CAAS,EAAGc,EAC1B,GAAI5L,EAAM,YAAc,cAAe,CACnC,MAAM6K,EAAUf,GAAmB9J,EAAO,SAAU,OAAO,EACrD4K,EAAWd,GAAmB9J,EAAO,SAAS,EACpDb,GAASyL,EAAS,MAAQC,EAAQ,MAClCC,GAAUF,EAAS,OAASC,EAAQ,MACvC,CACD,OAAA1L,EAAQ,KAAK,IAAI,EAAGA,EAAQwM,EAAQ,KAAK,EACzCb,EAAS,KAAK,IAAI,EAAGY,EAAcvM,EAAQuM,EAAcZ,EAASa,EAAQ,MAAM,EAChFxM,EAAQmM,GAAO,KAAK,IAAInM,EAAO6L,EAAUY,EAAc,QAAQ,CAAC,EAChEd,EAASQ,GAAO,KAAK,IAAIR,EAAQG,EAAWW,EAAc,SAAS,CAAC,EAChEzM,GAAS,CAAC2L,IAGVA,EAASQ,GAAOnM,EAAQ,CAAC,IAENqM,IAAY,QAAaC,IAAa,SACvCC,GAAeE,EAAc,QAAUd,EAASc,EAAc,SAChFd,EAASc,EAAc,OACvBzM,EAAQmM,GAAO,KAAK,MAAMR,EAASY,CAAW,CAAC,GAE5C,CACH,MAAAvM,EACA,OAAA2L,CACR,CACA,CAMI,SAASe,GAAY5M,EAAO6M,EAAYC,EAAY,CACpD,MAAMC,EAAaF,GAAc,EAC3BG,EAAe,KAAK,MAAMhN,EAAM,OAAS+M,CAAU,EACnDE,EAAc,KAAK,MAAMjN,EAAM,MAAQ+M,CAAU,EACvD/M,EAAM,OAAS,KAAK,MAAMA,EAAM,MAAM,EACtCA,EAAM,MAAQ,KAAK,MAAMA,EAAM,KAAK,EACpC,MAAMM,EAASN,EAAM,OAQrB,OAJIM,EAAO,QAAUwM,GAAc,CAACxM,EAAO,MAAM,QAAU,CAACA,EAAO,MAAM,SACrEA,EAAO,MAAM,OAAS,GAAGN,EAAM,MAAM,KACrCM,EAAO,MAAM,MAAQ,GAAGN,EAAM,KAAK,MAEnCA,EAAM,0BAA4B+M,GAAczM,EAAO,SAAW0M,GAAgB1M,EAAO,QAAU2M,GACnGjN,EAAM,wBAA0B+M,EAChCzM,EAAO,OAAS0M,EAChB1M,EAAO,MAAQ2M,EACfjN,EAAM,IAAI,aAAa+M,EAAY,EAAG,EAAGA,EAAY,EAAG,CAAC,EAClD,IAEJ,EACX,CAKI,MAAMG,GAA+B,UAAW,CAChD,IAAIC,EAAmB,GACvB,GAAI,CACA,MAAMvZ,EAAU,CACZ,IAAI,SAAW,CACX,OAAAuZ,EAAmB,GACZ,EACV,CACb,EACYlD,GAAe,IACf,OAAO,iBAAiB,OAAQ,KAAMrW,CAAO,EAC7C,OAAO,oBAAoB,OAAQ,KAAMA,CAAO,EAEvD,MAAW,CAEX,CACD,OAAOuZ,CACX,IASI,SAASC,GAAa3C,EAAS3T,EAAU,CACzC,MAAM9E,EAAQ0Y,GAASD,EAAS3T,CAAQ,EAClCoM,EAAUlR,GAASA,EAAM,MAAM,mBAAmB,EACxD,OAAOkR,EAAU,CAACA,EAAQ,CAAC,EAAI,MACnC,CAII,SAASmK,GAAare,EAAIC,EAAIuB,EAAGoR,EAAM,CACvC,MAAO,CACH,EAAG5S,EAAG,EAAIwB,GAAKvB,EAAG,EAAID,EAAG,GACzB,EAAGA,EAAG,EAAIwB,GAAKvB,EAAG,EAAID,EAAG,EACjC,CACA,CAGI,SAASse,GAAsBte,EAAIC,EAAIuB,EAAGoR,EAAM,CAChD,MAAO,CACH,EAAG5S,EAAG,EAAIwB,GAAKvB,EAAG,EAAID,EAAG,GACzB,EAAG4S,IAAS,SAAWpR,EAAI,GAAMxB,EAAG,EAAIC,EAAG,EAAI2S,IAAS,QAAUpR,EAAI,EAAIxB,EAAG,EAAIC,EAAG,EAAIuB,EAAI,EAAIvB,EAAG,EAAID,EAAG,CAClH,CACA,CAGI,SAASue,GAAqBve,EAAIC,EAAIuB,EAAGoR,EAAM,CAC/C,MAAM4L,EAAM,CACR,EAAGxe,EAAG,KACN,EAAGA,EAAG,IACd,EACUye,EAAM,CACR,EAAGxe,EAAG,KACN,EAAGA,EAAG,IACd,EACU7B,EAAIigB,GAAare,EAAIwe,EAAKhd,CAAC,EAC3B7D,EAAI0gB,GAAaG,EAAKC,EAAKjd,CAAC,EAC5B/B,EAAI4e,GAAaI,EAAKxe,EAAIuB,CAAC,EAC3BpC,EAAIif,GAAajgB,EAAGT,EAAG6D,CAAC,EACxB0E,EAAImY,GAAa1gB,EAAG8B,EAAG+B,CAAC,EAC9B,OAAO6c,GAAajf,EAAG8G,EAAG1E,CAAC,CAC/B,CAEA,MAAMkd,GAAwB,SAASC,EAAOzN,EAAO,CACjD,MAAO,CACH,EAAGpK,EAAG,CACF,OAAO6X,EAAQA,EAAQzN,EAAQpK,CAClC,EACD,SAAUhI,EAAG,CACToS,EAAQpS,CACX,EACD,UAAW+M,EAAO,CACd,OAAIA,IAAU,SACHA,EAEJA,IAAU,QAAU,OAAS,OACvC,EACD,MAAO/E,EAAG9D,EAAO,CACb,OAAO8D,EAAI9D,CACd,EACD,WAAY8D,EAAG8X,EAAW,CACtB,OAAO9X,EAAI8X,CACd,CACT,CACA,EACMC,GAAwB,UAAW,CACrC,MAAO,CACH,EAAG/X,EAAG,CACF,OAAOA,CACV,EACD,SAAUhI,EAAG,CAAE,EACf,UAAW+M,EAAO,CACd,OAAOA,CACV,EACD,MAAO/E,EAAG9D,EAAO,CACb,OAAO8D,EAAI9D,CACd,EACD,WAAY8D,EAAGgY,EAAY,CACvB,OAAOhY,CACV,CACT,CACA,EACA,SAASiY,GAAc7S,EAAKyS,EAAOzN,EAAO,CACtC,OAAOhF,EAAMwS,GAAsBC,EAAOzN,CAAK,EAAI2N,GAAqB,CAC5E,CACA,SAASG,GAAsBlP,EAAKmP,EAAW,CAC3C,IAAIlN,EAAOmN,GACPD,IAAc,OAASA,IAAc,SACrClN,EAAQjC,EAAI,OAAO,MACnBoP,EAAW,CACPnN,EAAM,iBAAiB,WAAW,EAClCA,EAAM,oBAAoB,WAAW,CACjD,EACQA,EAAM,YAAY,YAAakN,EAAW,WAAW,EACrDnP,EAAI,kBAAoBoP,EAEhC,CACA,SAASC,GAAqBrP,EAAKoP,EAAU,CACrCA,IAAa,SACb,OAAOpP,EAAI,kBACXA,EAAI,OAAO,MAAM,YAAY,YAAaoP,EAAS,CAAC,EAAGA,EAAS,CAAC,CAAC,EAE1E,CAEA,SAASE,GAAWtX,EAAU,CAC1B,OAAIA,IAAa,QACN,CACH,QAASkB,GACT,QAASF,GACT,UAAWC,EACvB,EAEW,CACH,QAASW,GACT,QAAS,CAACtL,EAAGT,IAAIS,EAAIT,EACrB,UAAYmJ,GAAIA,CACxB,CACA,CACA,SAASuY,GAAiB,CAAE,MAAApW,EAAQ,IAAAC,EAAM,MAAAsD,EAAQ,KAAAsO,EAAO,MAAA/I,GAAU,CAC/D,MAAO,CACH,MAAO9I,EAAQuD,EACf,IAAKtD,EAAMsD,EACX,KAAMsO,IAAS5R,EAAMD,EAAQ,GAAKuD,IAAU,EAC5C,MAAAuF,CACR,CACA,CACA,SAASuN,GAAWC,EAASlT,EAAQmT,EAAQ,CACzC,KAAM,CAAE,SAAA1X,EAAW,MAAO2X,EAAa,IAAKC,CAAW,EAAGF,EACpD,CAAE,QAAAG,EAAU,UAAAC,CAAY,EAAGR,GAAWtX,CAAQ,EAC9C0E,EAAQH,EAAO,OACrB,GAAI,CAAE,MAAApD,EAAQ,IAAAC,EAAM,KAAA4R,CAAI,EAAMyE,EAC1BvgB,EAAGmF,EACP,GAAI2W,EAAM,CAGN,IAFA7R,GAASuD,EACTtD,GAAOsD,EACHxN,EAAI,EAAGmF,EAAOqI,EAAOxN,EAAImF,GACpBwb,EAAQC,EAAUvT,EAAOpD,EAAQuD,CAAK,EAAE1E,CAAQ,CAAC,EAAG2X,EAAYC,CAAQ,EAD9C,EAAE1gB,EAIjCiK,IACAC,IAEJD,GAASuD,EACTtD,GAAOsD,CACV,CACD,OAAItD,EAAMD,IACNC,GAAOsD,GAEJ,CACH,MAAAvD,EACA,IAAAC,EACA,KAAA4R,EACA,MAAOyE,EAAQ,KACvB,CACA,CACC,SAASM,GAAcN,EAASlT,EAAQmT,EAAQ,CAC7C,GAAI,CAACA,EACD,MAAO,CACHD,CACZ,EAEI,KAAM,CAAE,SAAAzX,EAAW,MAAO2X,EAAa,IAAKC,CAAW,EAAGF,EACpDhT,EAAQH,EAAO,OACf,CAAE,QAAAyT,EAAU,QAAAH,EAAU,UAAAC,CAAS,EAAMR,GAAWtX,CAAQ,EACxD,CAAE,MAAAmB,EAAQ,IAAAC,EAAM,KAAA4R,EAAO,MAAA/I,GAAWuN,GAAWC,EAASlT,EAAQmT,CAAM,EACpEjY,EAAS,CAAA,EACf,IAAIwY,EAAS,GACTC,EAAW,KACXhd,EAAOoP,EAAO6N,EAClB,MAAMC,EAAgB,IAAIP,EAAQF,EAAYQ,EAAWjd,CAAK,GAAK8c,EAAQL,EAAYQ,CAAS,IAAM,EAChGE,EAAc,IAAIL,EAAQJ,EAAU1c,CAAK,IAAM,GAAK2c,EAAQD,EAAUO,EAAWjd,CAAK,EACtFod,EAAc,IAAIL,GAAUG,IAC5BG,EAAa,IAAI,CAACN,GAAUI,EAAW,EAC7C,QAAQnhB,EAAIiK,EAAO+R,EAAO/R,EAAOjK,GAAKkK,EAAK,EAAElK,EACzCoT,EAAQ/F,EAAOrN,EAAIwN,CAAK,EACpB,CAAA4F,EAAM,OAGVpP,EAAQ4c,EAAUxN,EAAMtK,CAAQ,CAAC,EAC7B9E,IAAUid,IAGdF,EAASJ,EAAQ3c,EAAOyc,EAAYC,CAAQ,EACxCM,IAAa,MAAQI,MACrBJ,EAAWF,EAAQ9c,EAAOyc,CAAU,IAAM,EAAIzgB,EAAIgc,GAElDgF,IAAa,MAAQK,MACrB9Y,EAAO,KAAK8X,GAAiB,CACzB,MAAOW,EACP,IAAKhhB,EACL,KAAA8b,EACA,MAAAtO,EACA,MAAAuF,CACH,CAAA,CAAC,EACFiO,EAAW,MAEfhF,EAAOhc,EACPihB,EAAYjd,IAEhB,OAAIgd,IAAa,MACbzY,EAAO,KAAK8X,GAAiB,CACzB,MAAOW,EACP,IAAA9W,EACA,KAAA4R,EACA,MAAAtO,EACA,MAAAuF,CACH,CAAA,CAAC,EAECxK,CACX,CACC,SAAS+Y,GAAepN,EAAMsM,EAAQ,CACnC,MAAMjY,EAAS,CAAA,EACTgZ,EAAWrN,EAAK,SACtB,QAAQlU,EAAI,EAAGA,EAAIuhB,EAAS,OAAQvhB,IAAI,CACpC,MAAMwhB,EAAMX,GAAcU,EAASvhB,CAAC,EAAGkU,EAAK,OAAQsM,CAAM,EACtDgB,EAAI,QACJjZ,EAAO,KAAK,GAAGiZ,CAAG,CAEzB,CACD,OAAOjZ,CACX,CACC,SAASkZ,GAAgBpU,EAAQG,EAAOsO,EAAM4F,EAAU,CACrD,IAAIzX,EAAQ,EACRC,EAAMsD,EAAQ,EAClB,GAAIsO,GAAQ,CAAC4F,EACT,KAAMzX,EAAQuD,GAAS,CAACH,EAAOpD,CAAK,EAAE,MAClCA,IAGR,KAAMA,EAAQuD,GAASH,EAAOpD,CAAK,EAAE,MACjCA,IAMJ,IAJAA,GAASuD,EACLsO,IACA5R,GAAOD,GAELC,EAAMD,GAASoD,EAAOnD,EAAMsD,CAAK,EAAE,MACrCtD,IAEJ,OAAAA,GAAOsD,EACA,CACH,MAAAvD,EACA,IAAAC,CACR,CACA,CACC,SAASyX,GAActU,EAAQpD,EAAO5J,EAAKyb,EAAM,CAC9C,MAAMtO,EAAQH,EAAO,OACf9E,EAAS,CAAA,EACf,IAAI4C,EAAOlB,EACP+R,EAAO3O,EAAOpD,CAAK,EACnBC,EACJ,IAAIA,EAAMD,EAAQ,EAAGC,GAAO7J,EAAK,EAAE6J,EAAI,CACnC,MAAM0X,EAAMvU,EAAOnD,EAAMsD,CAAK,EAC1BoU,EAAI,MAAQA,EAAI,KACX5F,EAAK,OACNF,EAAO,GACPvT,EAAO,KAAK,CACR,MAAO0B,EAAQuD,EACf,KAAMtD,EAAM,GAAKsD,EACjB,KAAAsO,CACpB,CAAiB,EACD7R,EAAQkB,EAAOyW,EAAI,KAAO1X,EAAM,OAGpCiB,EAAOjB,EACH8R,EAAK,OACL/R,EAAQC,IAGhB8R,EAAO4F,CACV,CACD,OAAIzW,IAAS,MACT5C,EAAO,KAAK,CACR,MAAO0B,EAAQuD,EACf,IAAKrC,EAAOqC,EACZ,KAAAsO,CACZ,CAAS,EAEEvT,CACX,CACC,SAASsZ,GAAiB3N,EAAM4N,EAAgB,CAC7C,MAAMzU,EAAS6G,EAAK,OACdwN,EAAWxN,EAAK,QAAQ,SACxB1G,EAAQH,EAAO,OACrB,GAAI,CAACG,EACD,MAAO,GAEX,MAAMsO,EAAO,CAAC,CAAC5H,EAAK,MACd,CAAE,MAAAjK,EAAQ,IAAAC,GAASuX,GAAgBpU,EAAQG,EAAOsO,EAAM4F,CAAQ,EACtE,GAAIA,IAAa,GACb,OAAOK,GAAc7N,EAAM,CACvB,CACI,MAAAjK,EACA,IAAAC,EACA,KAAA4R,CACH,CACb,EAAWzO,EAAQyU,CAAc,EAE7B,MAAMzhB,EAAM6J,EAAMD,EAAQC,EAAMsD,EAAQtD,EAClC8X,EAAe,CAAC,CAAC9N,EAAK,WAAajK,IAAU,GAAKC,IAAQsD,EAAQ,EACxE,OAAOuU,GAAc7N,EAAMyN,GAActU,EAAQpD,EAAO5J,EAAK2hB,CAAY,EAAG3U,EAAQyU,CAAc,CACtG,CACC,SAASC,GAAc7N,EAAMqN,EAAUlU,EAAQyU,EAAgB,CAC5D,MAAI,CAACA,GAAkB,CAACA,EAAe,YAAc,CAACzU,EAC3CkU,EAEJU,GAAgB/N,EAAMqN,EAAUlU,EAAQyU,CAAc,CACjE,CACC,SAASG,GAAgB/N,EAAMqN,EAAUlU,EAAQyU,EAAgB,CAC9D,MAAMI,EAAehO,EAAK,OAAO,WAAU,EACrCiO,EAAYC,GAAUlO,EAAK,OAAO,EAClC,CAAE,cAAemO,EAAe,QAAS,CAAE,SAAAX,CAAQ,CAAM,EAAGxN,EAC5D1G,EAAQH,EAAO,OACf9E,EAAS,CAAA,EACf,IAAI+Z,EAAYH,EACZlY,EAAQsX,EAAS,CAAC,EAAE,MACpBvhB,EAAIiK,EACR,SAASsY,EAAS9iB,EAAGyH,EAAGhJ,EAAGskB,EAAI,CAC3B,MAAMC,EAAMf,EAAW,GAAK,EAC5B,GAAIjiB,IAAMyH,EAIV,KADAzH,GAAK+N,EACCH,EAAO5N,EAAI+N,CAAK,EAAE,MACpB/N,GAAKgjB,EAET,KAAMpV,EAAOnG,EAAIsG,CAAK,EAAE,MACpBtG,GAAKub,EAELhjB,EAAI+N,IAAUtG,EAAIsG,IAClBjF,EAAO,KAAK,CACR,MAAO9I,EAAI+N,EACX,IAAKtG,EAAIsG,EACT,KAAMtP,EACN,MAAOskB,CACvB,CAAa,EACDF,EAAYE,EACZvY,EAAQ/C,EAAIsG,GAEnB,CACD,UAAW+S,KAAWgB,EAAS,CAC3BtX,EAAQyX,EAAWzX,EAAQsW,EAAQ,MACnC,IAAIvE,EAAO3O,EAAOpD,EAAQuD,CAAK,EAC3BuF,EACJ,IAAI/S,EAAIiK,EAAQ,EAAGjK,GAAKugB,EAAQ,IAAKvgB,IAAI,CACrC,MAAMwb,EAAKnO,EAAOrN,EAAIwN,CAAK,EAC3BuF,EAAQqP,GAAUN,EAAe,WAAWtL,GAAc0L,EAAc,CACpE,KAAM,UACN,GAAIlG,EACJ,GAAIR,EACJ,aAAcxb,EAAI,GAAKwN,EACvB,YAAaxN,EAAIwN,EACjB,aAAA6U,CACH,CAAA,CAAC,CAAC,EACCK,GAAa3P,EAAOuP,CAAS,GAC7BC,EAAStY,EAAOjK,EAAI,EAAGugB,EAAQ,KAAM+B,CAAS,EAElDtG,EAAOR,EACP8G,EAAYvP,CACf,CACG9I,EAAQjK,EAAI,GACZuiB,EAAStY,EAAOjK,EAAI,EAAGugB,EAAQ,KAAM+B,CAAS,CAErD,CACD,OAAO/Z,CACX,CACA,SAAS6Z,GAAUxc,EAAS,CACxB,MAAO,CACH,gBAAiBA,EAAQ,gBACzB,eAAgBA,EAAQ,eACxB,WAAYA,EAAQ,WACpB,iBAAkBA,EAAQ,iBAC1B,gBAAiBA,EAAQ,gBACzB,YAAaA,EAAQ,YACrB,YAAaA,EAAQ,WAC7B,CACA,CACA,SAAS8c,GAAa3P,EAAOuP,EAAW,CACpC,GAAI,CAACA,EACD,MAAO,GAEX,MAAMrL,EAAQ,CAAA,EACR0L,EAAW,SAASjd,EAAK1B,EAAO,CAClC,OAAKwK,GAAoBxK,CAAK,GAGzBiT,EAAM,SAASjT,CAAK,GACrBiT,EAAM,KAAKjT,CAAK,EAEbiT,EAAM,QAAQjT,CAAK,GALfA,CAMnB,EACI,OAAO,KAAK,UAAU+O,EAAO4P,CAAQ,IAAM,KAAK,UAAUL,EAAWK,CAAQ,CACjF,CCzrFA;AAAA;AAAA;AAAA;AAAA;AAAA,GASA,MAAMC,EAAS,CACX,aAAa,CACT,KAAK,SAAW,KAChB,KAAK,QAAU,IAAI,IACnB,KAAK,SAAW,GAChB,KAAK,UAAY,MACpB,CACJ,QAAQ5Q,EAAO6Q,EAAOC,EAAM5f,EAAM,CAC3B,MAAM6f,EAAYF,EAAM,UAAU3f,CAAI,EAChC8f,EAAWH,EAAM,SACvBE,EAAU,QAASre,GAAKA,EAAG,CACnB,MAAAsN,EACA,QAAS6Q,EAAM,QACf,SAAAG,EACA,YAAa,KAAK,IAAIF,EAAOD,EAAM,MAAOG,CAAQ,CACrD,CAAA,CAAC,CACT,CACJ,UAAW,CACA,KAAK,WAGT,KAAK,SAAW,GAChB,KAAK,SAAW3W,GAAiB,KAAK,OAAQ,IAAI,CAC9C,KAAK,QAAO,EACZ,KAAK,SAAW,KACZ,KAAK,UACL,KAAK,SAAQ,CAE7B,CAAS,EACJ,CACJ,QAAQyW,EAAO,KAAK,MAAO,CACpB,IAAIG,EAAY,EAChB,KAAK,QAAQ,QAAQ,CAACJ,EAAO7Q,IAAQ,CACjC,GAAI,CAAC6Q,EAAM,SAAW,CAACA,EAAM,MAAM,OAC/B,OAEJ,MAAM1W,EAAQ0W,EAAM,MACpB,IAAI7iB,EAAImM,EAAM,OAAS,EACnB+W,EAAO,GACPlc,EACJ,KAAMhH,GAAK,EAAG,EAAEA,EACZgH,EAAOmF,EAAMnM,CAAC,EACVgH,EAAK,SACDA,EAAK,OAAS6b,EAAM,WACpBA,EAAM,SAAW7b,EAAK,QAE1BA,EAAK,KAAK8b,CAAI,EACdI,EAAO,KAEP/W,EAAMnM,CAAC,EAAImM,EAAMA,EAAM,OAAS,CAAC,EACjCA,EAAM,IAAG,GAGb+W,IACAlR,EAAM,KAAI,EACV,KAAK,QAAQA,EAAO6Q,EAAOC,EAAM,UAAU,GAE1C3W,EAAM,SACP0W,EAAM,QAAU,GAChB,KAAK,QAAQ7Q,EAAO6Q,EAAOC,EAAM,UAAU,EAC3CD,EAAM,QAAU,IAEpBI,GAAa9W,EAAM,MAC/B,CAAS,EACD,KAAK,UAAY2W,EACbG,IAAc,IACd,KAAK,SAAW,GAEvB,CACJ,UAAUjR,EAAO,CACV,MAAMmR,EAAS,KAAK,QACpB,IAAIN,EAAQM,EAAO,IAAInR,CAAK,EAC5B,OAAK6Q,IACDA,EAAQ,CACJ,QAAS,GACT,QAAS,GACT,MAAO,CAAE,EACT,UAAW,CACP,SAAU,CAAE,EACZ,SAAU,CAAE,CACf,CACjB,EACYM,EAAO,IAAInR,EAAO6Q,CAAK,GAEpBA,CACV,CACJ,OAAO7Q,EAAOwL,EAAO4F,EAAI,CAClB,KAAK,UAAUpR,CAAK,EAAE,UAAUwL,CAAK,EAAE,KAAK4F,CAAE,CACjD,CACJ,IAAIpR,EAAO7F,EAAO,CACP,CAACA,GAAS,CAACA,EAAM,QAGrB,KAAK,UAAU6F,CAAK,EAAE,MAAM,KAAK,GAAG7F,CAAK,CAC5C,CACJ,IAAI6F,EAAO,CACJ,OAAO,KAAK,UAAUA,CAAK,EAAE,MAAM,OAAS,CAC/C,CACJ,MAAMA,EAAO,CACN,MAAM6Q,EAAQ,KAAK,QAAQ,IAAI7Q,CAAK,EAC/B6Q,IAGLA,EAAM,QAAU,GAChBA,EAAM,MAAQ,KAAK,MACnBA,EAAM,SAAWA,EAAM,MAAM,OAAO,CAACQ,EAAKzB,IAAM,KAAK,IAAIyB,EAAKzB,EAAI,SAAS,EAAG,CAAC,EAC/E,KAAK,SAAQ,EAChB,CACD,QAAQ5P,EAAO,CACX,GAAI,CAAC,KAAK,SACN,MAAO,GAEX,MAAM6Q,EAAQ,KAAK,QAAQ,IAAI7Q,CAAK,EACpC,MAAI,GAAC6Q,GAAS,CAACA,EAAM,SAAW,CAACA,EAAM,MAAM,OAIhD,CACJ,KAAK7Q,EAAO,CACL,MAAM6Q,EAAQ,KAAK,QAAQ,IAAI7Q,CAAK,EACpC,GAAI,CAAC6Q,GAAS,CAACA,EAAM,MAAM,OACvB,OAEJ,MAAM1W,EAAQ0W,EAAM,MACpB,IAAI7iB,EAAImM,EAAM,OAAS,EACvB,KAAMnM,GAAK,EAAG,EAAEA,EACZmM,EAAMnM,CAAC,EAAE,SAEb6iB,EAAM,MAAQ,GACd,KAAK,QAAQ7Q,EAAO6Q,EAAO,KAAK,IAAG,EAAI,UAAU,CACpD,CACJ,OAAO7Q,EAAO,CACP,OAAO,KAAK,QAAQ,OAAOA,CAAK,CACnC,CACL,CACA,IAAIsR,GAA2B,IAAIV,GAEnC,MAAMW,GAAc,cACdC,GAAgB,CAClB,QAASphB,EAAMD,EAAIshB,EAAQ,CACvB,OAAOA,EAAS,GAAMthB,EAAKC,CAC9B,EACJ,MAAOA,EAAMD,EAAIshB,EAAQ,CAClB,MAAMC,EAAKtgB,GAAMhB,GAAQmhB,EAAW,EAC9BjgB,EAAKogB,EAAG,OAAStgB,GAAMjB,GAAMohB,EAAW,EAC9C,OAAOjgB,GAAMA,EAAG,MAAQA,EAAG,IAAIogB,EAAID,CAAM,EAAE,UAAW,EAAGthB,CAC5D,EACD,OAAQC,EAAMD,EAAIshB,EAAQ,CACtB,OAAOrhB,GAAQD,EAAKC,GAAQqhB,CAC/B,CACL,EACA,MAAME,EAAU,CACZ,YAAYC,EAAKre,EAAQiQ,EAAMrT,EAAG,CAC9B,MAAM0hB,EAAete,EAAOiQ,CAAI,EAChCrT,EAAK2T,GAAQ,CACT8N,EAAI,GACJzhB,EACA0hB,EACAD,EAAI,IAChB,CAAS,EACD,MAAMxhB,EAAO0T,GAAQ,CACjB8N,EAAI,KACJC,EACA1hB,CACZ,CAAS,EACD,KAAK,QAAU,GACf,KAAK,IAAMyhB,EAAI,IAAMJ,GAAcI,EAAI,MAAQ,OAAOxhB,CAAI,EAC1D,KAAK,QAAUmM,GAAQqV,EAAI,MAAM,GAAKrV,GAAQ,OAC9C,KAAK,OAAS,KAAK,MAAM,KAAK,IAAK,GAAIqV,EAAI,OAAS,EAAE,EACtD,KAAK,UAAY,KAAK,OAAS,KAAK,MAAMA,EAAI,QAAQ,EACtD,KAAK,MAAQ,CAAC,CAACA,EAAI,KACnB,KAAK,QAAUre,EACf,KAAK,MAAQiQ,EACb,KAAK,MAAQpT,EACb,KAAK,IAAMD,EACX,KAAK,UAAY,MACpB,CACD,QAAS,CACL,OAAO,KAAK,OACf,CACD,OAAOyhB,EAAKzhB,EAAI2gB,EAAM,CAClB,GAAI,KAAK,QAAS,CACd,KAAK,QAAQ,EAAK,EAClB,MAAMe,EAAe,KAAK,QAAQ,KAAK,KAAK,EACtCC,EAAUhB,EAAO,KAAK,OACtB9S,EAAS,KAAK,UAAY8T,EAChC,KAAK,OAAShB,EACd,KAAK,UAAY,KAAK,MAAM,KAAK,IAAI9S,EAAQ4T,EAAI,QAAQ,CAAC,EAC1D,KAAK,QAAUE,EACf,KAAK,MAAQ,CAAC,CAACF,EAAI,KACnB,KAAK,IAAM9N,GAAQ,CACf8N,EAAI,GACJzhB,EACA0hB,EACAD,EAAI,IACpB,CAAa,EACD,KAAK,MAAQ9N,GAAQ,CACjB8N,EAAI,KACJC,EACA1hB,CAChB,CAAa,CACJ,CACJ,CACD,QAAS,CACD,KAAK,UACL,KAAK,KAAK,KAAK,IAAK,CAAA,EACpB,KAAK,QAAU,GACf,KAAK,QAAQ,EAAK,EAEzB,CACD,KAAK2gB,EAAM,CACP,MAAMgB,EAAUhB,EAAO,KAAK,OACtBiB,EAAW,KAAK,UAChBvO,EAAO,KAAK,MACZpT,EAAO,KAAK,MACZ0Z,EAAO,KAAK,MACZ3Z,EAAK,KAAK,IAChB,IAAIshB,EAEJ,GADA,KAAK,QAAUrhB,IAASD,IAAO2Z,GAAQgI,EAAUC,GAC7C,CAAC,KAAK,QAAS,CACf,KAAK,QAAQvO,CAAI,EAAIrT,EACrB,KAAK,QAAQ,EAAI,EACjB,MACH,CACD,GAAI2hB,EAAU,EAAG,CACb,KAAK,QAAQtO,CAAI,EAAIpT,EACrB,MACH,CACDqhB,EAASK,EAAUC,EAAW,EAC9BN,EAAS3H,GAAQ2H,EAAS,EAAI,EAAIA,EAASA,EAC3CA,EAAS,KAAK,QAAQ,KAAK,IAAI,EAAG,KAAK,IAAI,EAAGA,CAAM,CAAC,CAAC,EACtD,KAAK,QAAQjO,CAAI,EAAI,KAAK,IAAIpT,EAAMD,EAAIshB,CAAM,CACjD,CACD,MAAO,CACH,MAAMO,EAAW,KAAK,YAAc,KAAK,UAAY,CAAA,GACrD,OAAO,IAAI,QAAQ,CAACnY,EAAKoY,IAAM,CAC3BD,EAAS,KAAK,CACV,IAAAnY,EACA,IAAAoY,CAChB,CAAa,CACb,CAAS,CACJ,CACD,QAAQC,EAAU,CACd,MAAMvY,EAASuY,EAAW,MAAQ,MAC5BF,EAAW,KAAK,WAAa,GACnC,QAAQhkB,EAAI,EAAGA,EAAIgkB,EAAS,OAAQhkB,IAChCgkB,EAAShkB,CAAC,EAAE2L,CAAM,GAEzB,CACL,CAEA,MAAMwY,EAAW,CACb,YAAYnS,EAAOoS,EAAO,CACtB,KAAK,OAASpS,EACd,KAAK,YAAc,IAAI,IACvB,KAAK,UAAUoS,CAAM,CACxB,CACD,UAAUA,EAAQ,CACd,GAAI,CAAClgB,EAASkgB,CAAM,EAChB,OAEJ,MAAMC,EAAmB,OAAO,KAAKxV,EAAS,SAAS,EACjDyV,EAAgB,KAAK,YAC3B,OAAO,oBAAoBF,CAAM,EAAE,QAAS1e,GAAM,CAC9C,MAAMke,EAAMQ,EAAO1e,CAAG,EACtB,GAAI,CAACxB,EAAS0f,CAAG,EACb,OAEJ,MAAMM,EAAW,CAAA,EACjB,UAAWK,KAAUF,EACjBH,EAASK,CAAM,EAAIX,EAAIW,CAAM,GAEhCtgB,EAAQ2f,EAAI,UAAU,GAAKA,EAAI,YAAc,CAC1Cle,CAChB,GAAe,QAAS8P,GAAO,EACXA,IAAS9P,GAAO,CAAC4e,EAAc,IAAI9O,CAAI,IACvC8O,EAAc,IAAI9O,EAAM0O,CAAQ,CAEpD,CAAa,CACb,CAAS,CACJ,CACJ,gBAAgB3e,EAAQgG,EAAQ,CACzB,MAAMiZ,EAAajZ,EAAO,QACpB3F,EAAU6e,GAAqBlf,EAAQif,CAAU,EACvD,GAAI,CAAC5e,EACD,MAAO,GAEX,MAAM8e,EAAa,KAAK,kBAAkB9e,EAAS4e,CAAU,EAC7D,OAAIA,EAAW,SACXG,GAASpf,EAAO,QAAQ,YAAaif,CAAU,EAAE,KAAK,IAAI,CACtDjf,EAAO,QAAUif,CACjC,EAAe,IAAI,CACnB,CAAa,EAEEE,CACV,CACJ,kBAAkBnf,EAAQgG,EAAQ,CAC3B,MAAM+Y,EAAgB,KAAK,YACrBI,EAAa,CAAA,EACbE,EAAUrf,EAAO,cAAgBA,EAAO,YAAc,CAAA,GACtD8P,EAAQ,OAAO,KAAK9J,CAAM,EAC1BuX,EAAO,KAAK,MAClB,IAAI9iB,EACJ,IAAIA,EAAIqV,EAAM,OAAS,EAAGrV,GAAK,EAAG,EAAEA,EAAE,CAClC,MAAMwV,EAAOH,EAAMrV,CAAC,EACpB,GAAIwV,EAAK,OAAO,CAAC,IAAM,IACnB,SAEJ,GAAIA,IAAS,UAAW,CACpBkP,EAAW,KAAK,GAAG,KAAK,gBAAgBnf,EAAQgG,CAAM,CAAC,EACvD,QACH,CACD,MAAMvH,EAAQuH,EAAOiK,CAAI,EACzB,IAAIqP,EAAYD,EAAQpP,CAAI,EAC5B,MAAMoO,EAAMU,EAAc,IAAI9O,CAAI,EAClC,GAAIqP,EACA,GAAIjB,GAAOiB,EAAU,SAAU,CAC3BA,EAAU,OAAOjB,EAAK5f,EAAO8e,CAAI,EACjC,QACpB,MACoB+B,EAAU,OAAM,EAGxB,GAAI,CAACjB,GAAO,CAACA,EAAI,SAAU,CACvBre,EAAOiQ,CAAI,EAAIxR,EACf,QACH,CACD4gB,EAAQpP,CAAI,EAAIqP,EAAY,IAAIlB,GAAUC,EAAKre,EAAQiQ,EAAMxR,CAAK,EAClE0gB,EAAW,KAAKG,CAAS,CAC5B,CACD,OAAOH,CACV,CACJ,OAAOnf,EAAQgG,EAAQ,CAChB,GAAI,KAAK,YAAY,OAAS,EAAG,CAC7B,OAAO,OAAOhG,EAAQgG,CAAM,EAC5B,MACH,CACD,MAAMmZ,EAAa,KAAK,kBAAkBnf,EAAQgG,CAAM,EACxD,GAAImZ,EAAW,OACX,OAAApB,GAAS,IAAI,KAAK,OAAQoB,CAAU,EAC7B,EAEd,CACL,CACA,SAASC,GAASD,EAAYI,EAAY,CACtC,MAAMF,EAAU,CAAA,EACVnjB,EAAO,OAAO,KAAKqjB,CAAU,EACnC,QAAQ9kB,EAAI,EAAGA,EAAIyB,EAAK,OAAQzB,IAAI,CAChC,MAAM+kB,EAAOL,EAAWjjB,EAAKzB,CAAC,CAAC,EAC3B+kB,GAAQA,EAAK,UACbH,EAAQ,KAAKG,EAAK,KAAM,CAAA,CAE/B,CACD,OAAO,QAAQ,IAAIH,CAAO,CAC9B,CACA,SAASH,GAAqBlf,EAAQif,EAAY,CAC9C,GAAI,CAACA,EACD,OAEJ,IAAI5e,EAAUL,EAAO,QACrB,GAAI,CAACK,EAAS,CACVL,EAAO,QAAUif,EACjB,MACH,CACD,OAAI5e,EAAQ,UACRL,EAAO,QAAUK,EAAU,OAAO,OAAO,CAAE,EAAEA,EAAS,CAClD,QAAS,GACT,YAAa,CAAE,CAC3B,CAAS,GAEEA,CACX,CAEA,SAASof,GAAUC,EAAOC,EAAiB,CACvC,MAAMlR,EAAOiR,GAASA,EAAM,SAAW,CAAA,EACjClgB,EAAUiP,EAAK,QACfzT,EAAMyT,EAAK,MAAQ,OAAYkR,EAAkB,EACjD7kB,EAAM2T,EAAK,MAAQ,OAAYkR,EAAkB,EACvD,MAAO,CACH,MAAOngB,EAAU1E,EAAME,EACvB,IAAKwE,EAAUxE,EAAMF,CAC7B,CACA,CACA,SAAS8kB,GAAYpX,EAAQC,EAAQkX,EAAiB,CAClD,GAAIA,IAAoB,GACpB,MAAO,GAEX,MAAMpd,EAAIkd,GAAUjX,EAAQmX,CAAe,EACrCnd,EAAIid,GAAUhX,EAAQkX,CAAe,EAC3C,MAAO,CACH,IAAKnd,EAAE,IACP,MAAOD,EAAE,IACT,OAAQC,EAAE,MACV,KAAMD,EAAE,KAChB,CACA,CACA,SAASsd,GAAOphB,EAAO,CACnB,IAAI,EAAG9D,EAAGvB,EAAGT,EACb,OAAIgG,EAASF,CAAK,GACd,EAAIA,EAAM,IACV9D,EAAI8D,EAAM,MACVrF,EAAIqF,EAAM,OACV9F,EAAI8F,EAAM,MAEV,EAAI9D,EAAIvB,EAAIT,EAAI8F,EAEb,CACH,IAAK,EACL,MAAO9D,EACP,OAAQvB,EACR,KAAMT,EACN,SAAU8F,IAAU,EAC5B,CACA,CACA,SAASqhB,GAAwBrT,EAAOsT,EAAe,CACnD,MAAM7jB,EAAO,CAAA,EACP8jB,EAAWvT,EAAM,uBAAuBsT,CAAa,EAC3D,IAAItlB,EAAGmF,EACP,IAAInF,EAAI,EAAGmF,EAAOogB,EAAS,OAAQvlB,EAAImF,EAAM,EAAEnF,EAC3CyB,EAAK,KAAK8jB,EAASvlB,CAAC,EAAE,KAAK,EAE/B,OAAOyB,CACX,CACA,SAAS+jB,GAAWC,EAAOzhB,EAAO0hB,EAAS9f,EAAU,CAAA,EAAI,CACrD,MAAMnE,EAAOgkB,EAAM,KACbE,EAAa/f,EAAQ,OAAS,SACpC,IAAI5F,EAAGmF,EAAMkd,EAAcuD,EAC3B,GAAI5hB,IAAU,KAGd,KAAIhE,EAAI,EAAGmF,EAAO1D,EAAK,OAAQzB,EAAImF,EAAM,EAAEnF,EAAE,CAEzC,GADAqiB,EAAe,CAAC5gB,EAAKzB,CAAC,EAClBqiB,IAAiBqD,EAAS,CAC1B,GAAI9f,EAAQ,IACR,SAEJ,KACH,CACDggB,EAAaH,EAAM,OAAOpD,CAAY,EAClCle,EAAeyhB,CAAU,IAAMD,GAAc3hB,IAAU,GAAK4D,GAAK5D,CAAK,IAAM4D,GAAKge,CAAU,KAC3F5hB,GAAS4hB,EAEhB,CACD,OAAO5hB,EACX,CACA,SAAS6hB,GAAyBnU,EAAMtE,EAAM,CAC1C,KAAM,CAAE,OAAAK,EAAS,OAAAqY,CAAS,EAAG1Y,EACvB2Y,EAAWtY,EAAO,OAAS,IAAM,IAAM,IACvCuY,EAAWF,EAAO,OAAS,IAAM,IAAM,IACvCrkB,EAAO,OAAO,KAAKiQ,CAAI,EACvBuU,EAAQ,IAAI,MAAMxkB,EAAK,MAAM,EACnC,IAAIzB,EAAGmF,EAAMO,EACb,IAAI1F,EAAI,EAAGmF,EAAO1D,EAAK,OAAQzB,EAAImF,EAAM,EAAEnF,EACvC0F,EAAMjE,EAAKzB,CAAC,EACZimB,EAAMjmB,CAAC,EAAI,CACP,CAAC+lB,CAAQ,EAAGrgB,EACZ,CAACsgB,CAAQ,EAAGtU,EAAKhM,CAAG,CAChC,EAEI,OAAOugB,CACX,CACA,SAASC,GAAUjB,EAAO7X,EAAM,CAC5B,MAAM+Y,EAAUlB,GAASA,EAAM,QAAQ,QACvC,OAAOkB,GAAWA,IAAY,QAAa/Y,EAAK,QAAU,MAC9D,CACA,SAASgZ,GAAYC,EAAYC,EAAYlZ,EAAM,CAC/C,MAAO,GAAGiZ,EAAW,EAAE,IAAIC,EAAW,EAAE,IAAIlZ,EAAK,OAASA,EAAK,IAAI,EACvE,CACA,SAASmZ,GAActB,EAAO,CAC1B,KAAM,CAAE,IAAA1kB,EAAM,IAAAF,EAAM,WAAAuN,EAAa,WAAAC,GAAgBoX,EAAM,gBACvD,MAAO,CACH,IAAKrX,EAAarN,EAAM,OAAO,kBAC/B,IAAKsN,EAAaxN,EAAM,OAAO,iBACvC,CACA,CACA,SAASmmB,GAAiBC,EAAQC,EAAUC,EAAY,CACpD,MAAMC,EAAWH,EAAOC,CAAQ,IAAMD,EAAOC,CAAQ,EAAI,CAAA,GACzD,OAAOE,EAASD,CAAU,IAAMC,EAASD,CAAU,EAAI,CAAA,EAC3D,CACA,SAASE,GAAoBpB,EAAOK,EAAQgB,EAAU5jB,EAAM,CACxD,UAAWkK,KAAQ0Y,EAAO,wBAAwB5iB,CAAI,EAAE,UAAU,CAC9D,MAAMc,EAAQyhB,EAAMrY,EAAK,KAAK,EAC9B,GAAI0Z,GAAY9iB,EAAQ,GAAK,CAAC8iB,GAAY9iB,EAAQ,EAC9C,OAAOoJ,EAAK,KAEnB,CACD,OAAO,IACX,CACA,SAAS2Z,GAAaC,EAAYC,EAAQ,CACtC,KAAM,CAAE,MAAAjV,EAAQ,YAAa5E,CAAI,EAAM4Z,EACjCP,EAASzU,EAAM,UAAYA,EAAM,QAAU,CAAA,GAC3C,CAAE,OAAAvE,EAAS,OAAAqY,EAAS,MAAOzD,CAAY,EAAMjV,EAC7C8Z,EAAQzZ,EAAO,KACf0Z,EAAQrB,EAAO,KACfpgB,EAAM0gB,GAAY3Y,EAAQqY,EAAQ1Y,CAAI,EACtCjI,EAAO8hB,EAAO,OACpB,IAAIxB,EACJ,QAAQzlB,EAAI,EAAGA,EAAImF,EAAM,EAAEnF,EAAE,CACzB,MAAMgH,EAAOigB,EAAOjnB,CAAC,EACf,CAAE,CAACknB,CAAK,EAAGpc,EAAQ,CAACqc,CAAK,EAAGnjB,CAAQ,EAAGgD,EACvCogB,EAAapgB,EAAK,UAAYA,EAAK,QAAU,CAAA,GACnDye,EAAQ2B,EAAWD,CAAK,EAAIX,GAAiBC,EAAQ/gB,EAAKoF,CAAK,EAC/D2a,EAAMpD,CAAY,EAAIre,EACtByhB,EAAM,KAAOoB,GAAoBpB,EAAOK,EAAQ,GAAM1Y,EAAK,IAAI,EAC/DqY,EAAM,QAAUoB,GAAoBpB,EAAOK,EAAQ,GAAO1Y,EAAK,IAAI,EACnE,MAAMia,EAAe5B,EAAM,gBAAkBA,EAAM,cAAgB,CAAA,GACnE4B,EAAahF,CAAY,EAAIre,CAChC,CACL,CACA,SAASsjB,GAAgBtV,EAAOrE,EAAM,CAClC,MAAM4Z,EAASvV,EAAM,OACrB,OAAO,OAAO,KAAKuV,CAAM,EAAE,OAAQ7hB,GAAM6hB,EAAO7hB,CAAG,EAAE,OAASiI,CAAI,EAAE,MAAK,CAC7E,CACA,SAAS6Z,GAAqBzO,EAAQjO,EAAO,CACzC,OAAO0L,GAAcuC,EAAQ,CACzB,OAAQ,GACR,QAAS,OACT,aAAcjO,EACd,MAAAA,EACA,KAAM,UACN,KAAM,SACd,CAAK,CACL,CACA,SAAS2c,GAAkB1O,EAAQjO,EAAO2R,EAAS,CAC/C,OAAOjG,GAAcuC,EAAQ,CACzB,OAAQ,GACR,UAAWjO,EACX,OAAQ,OACR,IAAK,OACL,QAAA2R,EACA,MAAA3R,EACA,KAAM,UACN,KAAM,MACd,CAAK,CACL,CACA,SAAS4c,GAAYta,EAAMjB,EAAO,CAC9B,MAAMkW,EAAejV,EAAK,WAAW,MAC/BO,EAAOP,EAAK,QAAUA,EAAK,OAAO,KACxC,GAAKO,EAGL,CAAAxB,EAAQA,GAASiB,EAAK,QACtB,UAAW6Z,KAAU9a,EAAM,CACvB,MAAMsa,EAASQ,EAAO,QACtB,GAAI,CAACR,GAAUA,EAAO9Y,CAAI,IAAM,QAAa8Y,EAAO9Y,CAAI,EAAE0U,CAAY,IAAM,OACxE,OAEJ,OAAOoE,EAAO9Y,CAAI,EAAE0U,CAAY,EAC5BoE,EAAO9Y,CAAI,EAAE,gBAAkB,QAAa8Y,EAAO9Y,CAAI,EAAE,cAAc0U,CAAY,IAAM,QACzF,OAAOoE,EAAO9Y,CAAI,EAAE,cAAc0U,CAAY,CAErD,EACL,CACA,MAAMsF,GAAsB/T,GAAOA,IAAS,SAAWA,IAAS,OAC1DgU,GAAmB,CAACC,EAAQC,IAASA,EAASD,EAAS,OAAO,OAAO,GAAIA,CAAM,EAC/EE,GAAc,CAACC,EAAU5a,EAAM4E,IAAQgW,GAAY,CAAC5a,EAAK,QAAUA,EAAK,UAAY,CAClF,KAAMiY,GAAwBrT,EAAO,EAAI,EACzC,OAAQ,IAChB,EACA,MAAMiW,EAAkB,CACvB,OAAO,SAAW,CAAA,EAClB,OAAO,mBAAqB,KAC5B,OAAO,gBAAkB,KACzB,YAAYjW,EAAOqQ,EAAa,CACzB,KAAK,MAAQrQ,EACb,KAAK,KAAOA,EAAM,IAClB,KAAK,MAAQqQ,EACb,KAAK,gBAAkB,GACvB,KAAK,YAAc,KAAK,UACxB,KAAK,MAAQ,KAAK,YAAY,KAC9B,KAAK,QAAU,OACd,KAAK,SAAW,GACjB,KAAK,MAAQ,OACb,KAAK,YAAc,OACnB,KAAK,eAAiB,OACtB,KAAK,WAAa,OAClB,KAAK,WAAa,OAClB,KAAK,oBAAsB,GAC3B,KAAK,mBAAqB,GAC1B,KAAK,SAAW,OAChB,KAAK,UAAY,GACjB,KAAK,mBAAqB,WAAW,mBACrC,KAAK,gBAAkB,WAAW,gBAClC,KAAK,WAAU,CAClB,CACD,YAAa,CACT,MAAMjV,EAAO,KAAK,YAClB,KAAK,UAAS,EACd,KAAK,WAAU,EACfA,EAAK,SAAW8Y,GAAU9Y,EAAK,OAAQA,CAAI,EAC3C,KAAK,YAAW,EACZ,KAAK,QAAQ,MAAQ,CAAC,KAAK,MAAM,gBAAgB,QAAQ,GACzD,QAAQ,KAAK,oKAAoK,CAExL,CACD,YAAYiV,EAAc,CAClB,KAAK,QAAUA,GACfqF,GAAY,KAAK,WAAW,EAEhC,KAAK,MAAQrF,CAChB,CACD,YAAa,CACT,MAAMrQ,EAAQ,KAAK,MACb5E,EAAO,KAAK,YACZ8a,EAAU,KAAK,aACfC,EAAW,CAACxa,EAAM7F,EAAGC,EAAG7H,IAAIyN,IAAS,IAAM7F,EAAI6F,IAAS,IAAMzN,EAAI6H,EAClEqgB,EAAMhb,EAAK,QAAU9I,EAAe4jB,EAAQ,QAASZ,GAAgBtV,EAAO,GAAG,CAAC,EAChFqW,EAAMjb,EAAK,QAAU9I,EAAe4jB,EAAQ,QAASZ,GAAgBtV,EAAO,GAAG,CAAC,EAChFsW,EAAMlb,EAAK,QAAU9I,EAAe4jB,EAAQ,QAASZ,GAAgBtV,EAAO,GAAG,CAAC,EAChF0H,EAAYtM,EAAK,UACjBmb,EAAMnb,EAAK,QAAU+a,EAASzO,EAAW0O,EAAKC,EAAKC,CAAG,EACtDE,EAAMpb,EAAK,QAAU+a,EAASzO,EAAW2O,EAAKD,EAAKE,CAAG,EAC5Dlb,EAAK,OAAS,KAAK,cAAcgb,CAAG,EACpChb,EAAK,OAAS,KAAK,cAAcib,CAAG,EACpCjb,EAAK,OAAS,KAAK,cAAckb,CAAG,EACpClb,EAAK,OAAS,KAAK,cAAcmb,CAAG,EACpCnb,EAAK,OAAS,KAAK,cAAcob,CAAG,CACvC,CACD,YAAa,CACT,OAAO,KAAK,MAAM,KAAK,SAAS,KAAK,KAAK,CAC7C,CACD,SAAU,CACN,OAAO,KAAK,MAAM,eAAe,KAAK,KAAK,CAC9C,CACJ,cAAcC,EAAS,CAChB,OAAO,KAAK,MAAM,OAAOA,CAAO,CACnC,CACJ,eAAexD,EAAO,CACf,MAAM7X,EAAO,KAAK,YAClB,OAAO6X,IAAU7X,EAAK,OAASA,EAAK,OAASA,EAAK,MACrD,CACD,OAAQ,CACJ,KAAK,QAAQ,OAAO,CACvB,CACJ,UAAW,CACJ,MAAMA,EAAO,KAAK,YACd,KAAK,OACLrB,GAAoB,KAAK,MAAO,IAAI,EAEpCqB,EAAK,UACLsa,GAAYta,CAAI,CAEvB,CACJ,YAAa,CACN,MAAM8a,EAAU,KAAK,aACfxW,EAAOwW,EAAQ,OAASA,EAAQ,KAAO,CAAA,GACvCQ,EAAQ,KAAK,MACnB,GAAIxkB,EAASwN,CAAI,EAAG,CAChB,MAAMtE,EAAO,KAAK,YAClB,KAAK,MAAQyY,GAAyBnU,EAAMtE,CAAI,CAC5D,SAAmBsb,IAAUhX,EAAM,CACvB,GAAIgX,EAAO,CACP3c,GAAoB2c,EAAO,IAAI,EAC/B,MAAMtb,EAAO,KAAK,YAClBsa,GAAYta,CAAI,EAChBA,EAAK,QAAU,EAClB,CACGsE,GAAQ,OAAO,aAAaA,CAAI,GAChCjG,GAAkBiG,EAAM,IAAI,EAEhC,KAAK,UAAY,GACjB,KAAK,MAAQA,CAChB,CACJ,CACD,aAAc,CACV,MAAMtE,EAAO,KAAK,YAClB,KAAK,WAAU,EACX,KAAK,qBACLA,EAAK,QAAU,IAAI,KAAK,mBAE/B,CACD,sBAAsBub,EAAkB,CACpC,MAAMvb,EAAO,KAAK,YACZ8a,EAAU,KAAK,aACrB,IAAIU,EAAe,GACnB,KAAK,WAAU,EACf,MAAMC,EAAazb,EAAK,SACxBA,EAAK,SAAW8Y,GAAU9Y,EAAK,OAAQA,CAAI,EACvCA,EAAK,QAAU8a,EAAQ,QACvBU,EAAe,GACflB,GAAYta,CAAI,EAChBA,EAAK,MAAQ8a,EAAQ,OAEzB,KAAK,gBAAgBS,CAAgB,GACjCC,GAAgBC,IAAezb,EAAK,WACpC2Z,GAAa,KAAM3Z,EAAK,OAAO,CAEtC,CACJ,WAAY,CACL,MAAMgX,EAAS,KAAK,MAAM,OACpB0E,EAAY1E,EAAO,iBAAiB,KAAK,KAAK,EAC9CzN,EAASyN,EAAO,gBAAgB,KAAK,aAAc0E,EAAW,EAAI,EACxE,KAAK,QAAU1E,EAAO,eAAezN,EAAQ,KAAK,WAAU,CAAE,EAC9D,KAAK,SAAW,KAAK,QAAQ,QAC7B,KAAK,gBAAkB,EAC1B,CACJ,MAAM1M,EAAOuD,EAAO,CACb,KAAM,CAAE,YAAaJ,EAAO,MAAOsE,CAAI,EAAM,KACvC,CAAE,OAAAjE,EAAS,SAAAsb,CAAW,EAAG3b,EACzB8Z,EAAQzZ,EAAO,KACrB,IAAIub,EAAS/e,IAAU,GAAKuD,IAAUkE,EAAK,OAAS,GAAOtE,EAAK,QAC5D4O,EAAO/R,EAAQ,GAAKmD,EAAK,QAAQnD,EAAQ,CAAC,EAC1CjK,EAAG4hB,EAAKqF,EACZ,GAAI,KAAK,WAAa,GAClB7Z,EAAK,QAAUsE,EACftE,EAAK,QAAU,GACf6Z,EAASvV,MACN,CACCzN,EAAQyN,EAAKzH,CAAK,CAAC,EACnBgd,EAAS,KAAK,eAAe7Z,EAAMsE,EAAMzH,EAAOuD,CAAK,EAC9CtJ,EAASwN,EAAKzH,CAAK,CAAC,EAC3Bgd,EAAS,KAAK,gBAAgB7Z,EAAMsE,EAAMzH,EAAOuD,CAAK,EAEtDyZ,EAAS,KAAK,mBAAmB7Z,EAAMsE,EAAMzH,EAAOuD,CAAK,EAE7D,MAAMyb,EAA6B,IAAIrH,EAAIsF,CAAK,IAAM,MAAQlL,GAAQ4F,EAAIsF,CAAK,EAAIlL,EAAKkL,CAAK,EAC7F,IAAIlnB,EAAI,EAAGA,EAAIwN,EAAO,EAAExN,EACpBoN,EAAK,QAAQpN,EAAIiK,CAAK,EAAI2X,EAAMqF,EAAOjnB,CAAC,EACpCgpB,IACIC,EAA0B,IAC1BD,EAAS,IAEbhN,EAAO4F,GAGfxU,EAAK,QAAU4b,CAClB,CACGD,GACAhC,GAAa,KAAME,CAAM,CAEhC,CACJ,mBAAmB7Z,EAAMsE,EAAMzH,EAAOuD,EAAO,CACtC,KAAM,CAAE,OAAAC,EAAS,OAAAqY,CAAS,EAAG1Y,EACvB8Z,EAAQzZ,EAAO,KACf0Z,EAAQrB,EAAO,KACfoD,EAASzb,EAAO,YAChB0b,EAAc1b,IAAWqY,EACzBmB,EAAS,IAAI,MAAMzZ,CAAK,EAC9B,IAAIxN,EAAGmF,EAAM2F,EACb,IAAI9K,EAAI,EAAGmF,EAAOqI,EAAOxN,EAAImF,EAAM,EAAEnF,EACjC8K,EAAQ9K,EAAIiK,EACZgd,EAAOjnB,CAAC,EAAI,CACR,CAACknB,CAAK,EAAGiC,GAAe1b,EAAO,MAAMyb,EAAOpe,CAAK,EAAGA,CAAK,EACzD,CAACqc,CAAK,EAAGrB,EAAO,MAAMpU,EAAK5G,CAAK,EAAGA,CAAK,CACxD,EAEQ,OAAOmc,CACV,CACJ,eAAe7Z,EAAMsE,EAAMzH,EAAOuD,EAAO,CAClC,KAAM,CAAE,OAAAO,EAAS,OAAAC,CAAS,EAAGZ,EACvB6Z,EAAS,IAAI,MAAMzZ,CAAK,EAC9B,IAAIxN,EAAGmF,EAAM2F,EAAO9D,EACpB,IAAIhH,EAAI,EAAGmF,EAAOqI,EAAOxN,EAAImF,EAAM,EAAEnF,EACjC8K,EAAQ9K,EAAIiK,EACZjD,EAAO0K,EAAK5G,CAAK,EACjBmc,EAAOjnB,CAAC,EAAI,CACR,EAAG+N,EAAO,MAAM/G,EAAK,CAAC,EAAG8D,CAAK,EAC9B,EAAGkD,EAAO,MAAMhH,EAAK,CAAC,EAAG8D,CAAK,CAC9C,EAEQ,OAAOmc,CACV,CACJ,gBAAgB7Z,EAAMsE,EAAMzH,EAAOuD,EAAO,CACnC,KAAM,CAAE,OAAAO,EAAS,OAAAC,CAAS,EAAGZ,EACvB,CAAE,SAAAgc,EAAU,IAAM,SAAAC,EAAU,GAAM,EAAG,KAAK,SAC1CpC,EAAS,IAAI,MAAMzZ,CAAK,EAC9B,IAAIxN,EAAGmF,EAAM2F,EAAO9D,EACpB,IAAIhH,EAAI,EAAGmF,EAAOqI,EAAOxN,EAAImF,EAAM,EAAEnF,EACjC8K,EAAQ9K,EAAIiK,EACZjD,EAAO0K,EAAK5G,CAAK,EACjBmc,EAAOjnB,CAAC,EAAI,CACR,EAAG+N,EAAO,MAAMpH,GAAiBK,EAAMoiB,CAAQ,EAAGte,CAAK,EACvD,EAAGkD,EAAO,MAAMrH,GAAiBK,EAAMqiB,CAAQ,EAAGve,CAAK,CACvE,EAEQ,OAAOmc,CACV,CACJ,UAAUnc,EAAO,CACV,OAAO,KAAK,YAAY,QAAQA,CAAK,CACxC,CACJ,eAAeA,EAAO,CACf,OAAO,KAAK,YAAY,KAAKA,CAAK,CACrC,CACJ,WAAWma,EAAOgC,EAAQrT,EAAM,CACzB,MAAM5B,EAAQ,KAAK,MACb5E,EAAO,KAAK,YACZpJ,EAAQijB,EAAOhC,EAAM,IAAI,EACzBQ,EAAQ,CACV,KAAMJ,GAAwBrT,EAAO,EAAI,EACzC,OAAQiV,EAAO,QAAQhC,EAAM,IAAI,EAAE,aAC/C,EACQ,OAAOO,GAAWC,EAAOzhB,EAAOoJ,EAAK,MAAO,CACxC,KAAAwG,CACZ,CAAS,CACJ,CACJ,sBAAsB1L,EAAO+c,EAAOgC,EAAQxB,EAAO,CAC5C,MAAM6D,EAAcrC,EAAOhC,EAAM,IAAI,EACrC,IAAIjhB,EAAQslB,IAAgB,KAAO,IAAMA,EACzC,MAAM/d,EAASka,GAASwB,EAAO,QAAQhC,EAAM,IAAI,EAC7CQ,GAASla,IACTka,EAAM,OAASla,EACfvH,EAAQwhB,GAAWC,EAAO6D,EAAa,KAAK,YAAY,KAAK,GAEjEphB,EAAM,IAAM,KAAK,IAAIA,EAAM,IAAKlE,CAAK,EACrCkE,EAAM,IAAM,KAAK,IAAIA,EAAM,IAAKlE,CAAK,CACxC,CACJ,UAAUihB,EAAO+C,EAAU,CACpB,MAAM5a,EAAO,KAAK,YACZM,EAAUN,EAAK,QACf4b,EAAS5b,EAAK,SAAW6X,IAAU7X,EAAK,OACxCjI,EAAOuI,EAAQ,OACf6b,EAAa,KAAK,eAAetE,CAAK,EACtCQ,EAAQsC,GAAYC,EAAU5a,EAAM,KAAK,KAAK,EAC9ClF,EAAQ,CACV,IAAK,OAAO,kBACZ,IAAK,OAAO,iBACxB,EACc,CAAE,IAAKshB,EAAW,IAAKC,GAAclD,GAAcgD,CAAU,EACnE,IAAIvpB,EAAGinB,EACP,SAASyC,GAAQ,CACbzC,EAASvZ,EAAQ1N,CAAC,EAClB,MAAM4lB,EAAaqB,EAAOsC,EAAW,IAAI,EACzC,MAAO,CAACplB,EAAe8iB,EAAOhC,EAAM,IAAI,CAAC,GAAKuE,EAAW5D,GAAc6D,EAAW7D,CACrF,CACD,IAAI5lB,EAAI,EAAGA,EAAImF,GACP,GAAAukB,EAAK,IAGT,KAAK,sBAAsBxhB,EAAO+c,EAAOgC,EAAQxB,CAAK,EAClDuD,IALa,EAAEhpB,EACnB,CAQJ,GAAIgpB,GACA,IAAIhpB,EAAImF,EAAO,EAAGnF,GAAK,EAAG,EAAEA,EACxB,GAAI,CAAA0pB,EAAK,EAGT,MAAK,sBAAsBxhB,EAAO+c,EAAOgC,EAAQxB,CAAK,EACtD,OAGR,OAAOvd,CACV,CACD,mBAAmB+c,EAAO,CACtB,MAAMgC,EAAS,KAAK,YAAY,QAC1B1b,EAAS,CAAA,EACf,IAAIvL,EAAGmF,EAAMnB,EACb,IAAIhE,EAAI,EAAGmF,EAAO8hB,EAAO,OAAQjnB,EAAImF,EAAM,EAAEnF,EACzCgE,EAAQijB,EAAOjnB,CAAC,EAAEilB,EAAM,IAAI,EACxB9gB,EAAeH,CAAK,GACpBuH,EAAO,KAAKvH,CAAK,EAGzB,OAAOuH,CACV,CACJ,gBAAiB,CACV,MAAO,EACV,CACJ,iBAAiBT,EAAO,CACjB,MAAMsC,EAAO,KAAK,YACZK,EAASL,EAAK,OACd0Y,EAAS1Y,EAAK,OACd6Z,EAAS,KAAK,UAAUnc,CAAK,EACnC,MAAO,CACH,MAAO2C,EAAS,GAAKA,EAAO,iBAAiBwZ,EAAOxZ,EAAO,IAAI,CAAC,EAAI,GACpE,MAAOqY,EAAS,GAAKA,EAAO,iBAAiBmB,EAAOnB,EAAO,IAAI,CAAC,EAAI,EAChF,CACK,CACJ,QAAQlS,EAAM,CACP,MAAMxG,EAAO,KAAK,YAClB,KAAK,OAAOwG,GAAQ,SAAS,EAC7BxG,EAAK,MAAQgY,GAAO9gB,EAAe,KAAK,QAAQ,KAAM6gB,GAAY/X,EAAK,OAAQA,EAAK,OAAQ,KAAK,eAAc,CAAE,CAAC,CAAC,CACtH,CACJ,OAAOwG,EAAM,CAAE,CACZ,MAAO,CACH,MAAM9C,EAAM,KAAK,KACXkB,EAAQ,KAAK,MACb5E,EAAO,KAAK,YACZuc,EAAWvc,EAAK,MAAQ,GACxBiG,EAAOrB,EAAM,UACb4X,EAAS,CAAA,EACT3f,EAAQ,KAAK,YAAc,EAC3BuD,EAAQ,KAAK,YAAcmc,EAAS,OAAS1f,EAC7C4f,EAA0B,KAAK,QAAQ,wBAC7C,IAAI7pB,EAIJ,IAHIoN,EAAK,SACLA,EAAK,QAAQ,KAAK0D,EAAKuC,EAAMpJ,EAAOuD,CAAK,EAEzCxN,EAAIiK,EAAOjK,EAAIiK,EAAQuD,EAAO,EAAExN,EAAE,CAClC,MAAMyc,EAAUkN,EAAS3pB,CAAC,EACtByc,EAAQ,SAGRA,EAAQ,QAAUoN,EAClBD,EAAO,KAAKnN,CAAO,EAEnBA,EAAQ,KAAK3L,EAAKuC,CAAI,EAE7B,CACD,IAAIrT,EAAI,EAAGA,EAAI4pB,EAAO,OAAQ,EAAE5pB,EAC5B4pB,EAAO5pB,CAAC,EAAE,KAAK8Q,EAAKuC,CAAI,CAE/B,CACJ,SAASvI,EAAO8e,EAAQ,CACjB,MAAMhW,EAAOgW,EAAS,SAAW,UACjC,OAAO9e,IAAU,QAAa,KAAK,YAAY,QAAU,KAAK,6BAA6B8I,CAAI,EAAI,KAAK,0BAA0B9I,GAAS,EAAG8I,CAAI,CACrJ,CACJ,WAAW9I,EAAO8e,EAAQhW,EAAM,CACzB,MAAMsU,EAAU,KAAK,aACrB,IAAIrX,EACJ,GAAI/F,GAAS,GAAKA,EAAQ,KAAK,YAAY,KAAK,OAAQ,CACpD,MAAM2R,EAAU,KAAK,YAAY,KAAK3R,CAAK,EAC3C+F,EAAU4L,EAAQ,WAAaA,EAAQ,SAAWgL,GAAkB,KAAK,WAAY,EAAE3c,EAAO2R,CAAO,GACrG5L,EAAQ,OAAS,KAAK,UAAU/F,CAAK,EACrC+F,EAAQ,IAAMqX,EAAQ,KAAKpd,CAAK,EAChC+F,EAAQ,MAAQA,EAAQ,UAAY/F,CAChD,MACY+F,EAAU,KAAK,WAAa,KAAK,SAAW2W,GAAqB,KAAK,MAAM,WAAY,EAAE,KAAK,KAAK,GACpG3W,EAAQ,QAAUqX,EAClBrX,EAAQ,MAAQA,EAAQ,aAAe,KAAK,MAEhD,OAAAA,EAAQ,OAAS,CAAC,CAAC+Y,EACnB/Y,EAAQ,KAAO+C,EACR/C,CACV,CACJ,6BAA6B+C,EAAM,CAC5B,OAAO,KAAK,uBAAuB,KAAK,mBAAmB,GAAIA,CAAI,CACtE,CACJ,0BAA0B9I,EAAO8I,EAAM,CAChC,OAAO,KAAK,uBAAuB,KAAK,gBAAgB,GAAIA,EAAM9I,CAAK,CAC1E,CACJ,uBAAuBgf,EAAalW,EAAO,UAAW9I,EAAO,CACtD,MAAM8e,EAAShW,IAAS,SAClBqD,EAAQ,KAAK,gBACb9H,EAAW2a,EAAc,IAAMlW,EAC/BiU,EAAS5Q,EAAM9H,CAAQ,EACvB4a,EAAU,KAAK,qBAAuBljB,GAAQiE,CAAK,EACzD,GAAI+c,EACA,OAAOD,GAAiBC,EAAQkC,CAAO,EAE3C,MAAM3F,EAAS,KAAK,MAAM,OACpB0E,EAAY1E,EAAO,wBAAwB,KAAK,MAAO0F,CAAW,EAClElT,EAAWgT,EAAS,CACtB,GAAGE,CAAW,QACd,QACAA,EACA,EACZ,EAAY,CACAA,EACA,EACZ,EACcnT,EAASyN,EAAO,gBAAgB,KAAK,WAAU,EAAI0E,CAAS,EAC5DhnB,EAAQ,OAAO,KAAK+M,EAAS,SAASib,CAAW,CAAC,EAClDjZ,EAAU,IAAI,KAAK,WAAW/F,EAAO8e,EAAQhW,CAAI,EACjDrI,EAAS6Y,EAAO,oBAAoBzN,EAAQ7U,EAAO+O,EAAS+F,CAAQ,EAC1E,OAAIrL,EAAO,UACPA,EAAO,QAAUwe,EACjB9S,EAAM9H,CAAQ,EAAI,OAAO,OAAOyY,GAAiBrc,EAAQwe,CAAO,CAAC,GAE9Dxe,CACV,CACJ,mBAAmBT,EAAOkf,EAAYJ,EAAQ,CACvC,MAAM5X,EAAQ,KAAK,MACbiF,EAAQ,KAAK,gBACb9H,EAAW,aAAa6a,CAAU,GAClCnC,EAAS5Q,EAAM9H,CAAQ,EAC7B,GAAI0Y,EACA,OAAOA,EAEX,IAAIjiB,EACJ,GAAIoM,EAAM,QAAQ,YAAc,GAAO,CACnC,MAAMoS,EAAS,KAAK,MAAM,OACpB0E,EAAY1E,EAAO,0BAA0B,KAAK,MAAO4F,CAAU,EACnErT,EAASyN,EAAO,gBAAgB,KAAK,WAAU,EAAI0E,CAAS,EAClEljB,EAAUwe,EAAO,eAAezN,EAAQ,KAAK,WAAW7L,EAAO8e,EAAQI,CAAU,CAAC,CACrF,CACD,MAAMtF,EAAa,IAAIP,GAAWnS,EAAOpM,GAAWA,EAAQ,UAAU,EACtE,OAAIA,GAAWA,EAAQ,aACnBqR,EAAM9H,CAAQ,EAAI,OAAO,OAAOuV,CAAU,GAEvCA,CACV,CACJ,iBAAiB9e,EAAS,CACnB,GAAKA,EAAQ,QAGb,OAAO,KAAK,iBAAmB,KAAK,eAAiB,OAAO,OAAO,CAAA,EAAIA,CAAO,EACjF,CACJ,eAAegO,EAAMqW,EAAe,CAC7B,MAAO,CAACA,GAAiBtC,GAAmB/T,CAAI,GAAK,KAAK,MAAM,mBACnE,CACJ,kBAAkB3J,EAAO2J,EAAM,CACxB,MAAMsW,EAAY,KAAK,0BAA0BjgB,EAAO2J,CAAI,EACtDuW,EAA0B,KAAK,eAC/BF,EAAgB,KAAK,iBAAiBC,CAAS,EAC/CE,EAAiB,KAAK,eAAexW,EAAMqW,CAAa,GAAKA,IAAkBE,EACrF,YAAK,oBAAoBF,EAAerW,EAAMsW,CAAS,EAChD,CACH,cAAAD,EACA,eAAAG,CACZ,CACK,CACJ,cAAc3N,EAAS3R,EAAOga,EAAYlR,EAAM,CACrC+T,GAAmB/T,CAAI,EACvB,OAAO,OAAO6I,EAASqI,CAAU,EAEjC,KAAK,mBAAmBha,EAAO8I,CAAI,EAAE,OAAO6I,EAASqI,CAAU,CAEtE,CACJ,oBAAoBmF,EAAerW,EAAM4Q,EAAY,CAC1CyF,GAAiB,CAACtC,GAAmB/T,CAAI,GACzC,KAAK,mBAAmB,OAAWA,CAAI,EAAE,OAAOqW,EAAezF,CAAU,CAEhF,CACJ,UAAU/H,EAAS3R,EAAO8I,EAAMgW,EAAQ,CACjCnN,EAAQ,OAASmN,EACjB,MAAMhkB,EAAU,KAAK,SAASkF,EAAO8e,CAAM,EAC3C,KAAK,mBAAmB9e,EAAO8I,EAAMgW,CAAM,EAAE,OAAOnN,EAAS,CACzD,QAAS,CAACmN,GAAU,KAAK,iBAAiBhkB,CAAO,GAAKA,CAClE,CAAS,CACJ,CACD,iBAAiB6W,EAAS4F,EAAcvX,EAAO,CAC3C,KAAK,UAAU2R,EAAS3R,EAAO,SAAU,EAAK,CACjD,CACD,cAAc2R,EAAS4F,EAAcvX,EAAO,CACxC,KAAK,UAAU2R,EAAS3R,EAAO,SAAU,EAAI,CAChD,CACJ,0BAA2B,CACpB,MAAM2R,EAAU,KAAK,YAAY,QAC7BA,GACA,KAAK,UAAUA,EAAS,OAAW,SAAU,EAAK,CAEzD,CACJ,uBAAwB,CACjB,MAAMA,EAAU,KAAK,YAAY,QAC7BA,GACA,KAAK,UAAUA,EAAS,OAAW,SAAU,EAAI,CAExD,CACJ,gBAAgBkM,EAAkB,CAC3B,MAAMjX,EAAO,KAAK,MACZiY,EAAW,KAAK,YAAY,KAClC,SAAW,CAAChe,EAAQ0e,EAAMC,CAAI,IAAK,KAAK,UACpC,KAAK3e,CAAM,EAAE0e,EAAMC,CAAI,EAE3B,KAAK,UAAY,GACjB,MAAMC,EAAUZ,EAAS,OACnBa,EAAU9Y,EAAK,OACflE,EAAQ,KAAK,IAAIgd,EAASD,CAAO,EACnC/c,GACA,KAAK,MAAM,EAAGA,CAAK,EAEnBgd,EAAUD,EACV,KAAK,gBAAgBA,EAASC,EAAUD,EAAS5B,CAAgB,EAC1D6B,EAAUD,GACjB,KAAK,gBAAgBC,EAASD,EAAUC,CAAO,CAEtD,CACJ,gBAAgBvgB,EAAOuD,EAAOmb,EAAmB,GAAM,CAChD,MAAMvb,EAAO,KAAK,YACZsE,EAAOtE,EAAK,KACZlD,EAAMD,EAAQuD,EACpB,IAAIxN,EACJ,MAAMyqB,EAAQ9R,GAAM,CAEhB,IADAA,EAAI,QAAUnL,EACVxN,EAAI2Y,EAAI,OAAS,EAAG3Y,GAAKkK,EAAKlK,IAC9B2Y,EAAI3Y,CAAC,EAAI2Y,EAAI3Y,EAAIwN,CAAK,CAEtC,EAEQ,IADAid,EAAK/Y,CAAI,EACL1R,EAAIiK,EAAOjK,EAAIkK,EAAK,EAAElK,EACtB0R,EAAK1R,CAAC,EAAI,IAAI,KAAK,gBAEnB,KAAK,UACLyqB,EAAKrd,EAAK,OAAO,EAErB,KAAK,MAAMnD,EAAOuD,CAAK,EACnBmb,GACA,KAAK,eAAejX,EAAMzH,EAAOuD,EAAO,OAAO,CAEtD,CACD,eAAeiP,EAASxS,EAAOuD,EAAOoG,EAAM,CAAE,CACjD,gBAAgB3J,EAAOuD,EAAO,CACvB,MAAMJ,EAAO,KAAK,YAClB,GAAI,KAAK,SAAU,CACf,MAAMsd,EAAUtd,EAAK,QAAQ,OAAOnD,EAAOuD,CAAK,EAC5CJ,EAAK,UACLsa,GAAYta,EAAMsd,CAAO,CAEhC,CACDtd,EAAK,KAAK,OAAOnD,EAAOuD,CAAK,CAChC,CACJ,MAAM7I,EAAM,CACL,GAAI,KAAK,SACL,KAAK,UAAU,KAAKA,CAAI,MACrB,CACH,KAAM,CAACgH,EAAQ0e,EAAMC,CAAI,EAAI3lB,EAC7B,KAAKgH,CAAM,EAAE0e,EAAMC,CAAI,CAC1B,CACD,KAAK,MAAM,aAAa,KAAK,CACzB,KAAK,MACL,GAAG3lB,CACf,CAAS,CACJ,CACD,aAAc,CACV,MAAM6I,EAAQ,UAAU,OACxB,KAAK,MAAM,CACP,kBACA,KAAK,WAAU,EAAG,KAAK,OAASA,EAChCA,CACZ,CAAS,CACJ,CACD,YAAa,CACT,KAAK,MAAM,CACP,kBACA,KAAK,YAAY,KAAK,OAAS,EAC/B,CACZ,CAAS,CACJ,CACD,cAAe,CACX,KAAK,MAAM,CACP,kBACA,EACA,CACZ,CAAS,CACJ,CACD,cAAcvD,EAAOuD,EAAO,CACpBA,GACA,KAAK,MAAM,CACP,kBACAvD,EACAuD,CAChB,CAAa,EAEL,MAAMmd,EAAW,UAAU,OAAS,EAChCA,GACA,KAAK,MAAM,CACP,kBACA1gB,EACA0gB,CAChB,CAAa,CAER,CACD,gBAAiB,CACb,KAAK,MAAM,CACP,kBACA,EACA,UAAU,MACtB,CAAS,CACJ,CACL,CAEA,SAASC,GAAkB3F,EAAO/hB,EAAM,CACpC,GAAI,CAAC+hB,EAAM,OAAO,KAAM,CACpB,MAAM4F,EAAe5F,EAAM,wBAAwB/hB,CAAI,EACvD,IAAIqI,EAAS,CAAA,EACb,QAAQvL,EAAI,EAAGmF,EAAO0lB,EAAa,OAAQ7qB,EAAImF,EAAMnF,IACjDuL,EAASA,EAAO,OAAOsf,EAAa7qB,CAAC,EAAE,WAAW,mBAAmBilB,CAAK,CAAC,EAE/EA,EAAM,OAAO,KAAO/Y,GAAaX,EAAO,KAAK,CAACnM,EAAGT,IAAIS,EAAIT,CAAC,CAAC,CAC9D,CACD,OAAOsmB,EAAM,OAAO,IACxB,CACC,SAAS6F,GAAqB1d,EAAM,CACjC,MAAM6X,EAAQ7X,EAAK,OACb7B,EAASqf,GAAkB3F,EAAO7X,EAAK,IAAI,EACjD,IAAI7M,EAAM0kB,EAAM,QACZjlB,EAAGmF,EAAM4lB,EAAM/O,EACnB,MAAMgP,EAAmB,IAAI,CACrBD,IAAS,OAASA,IAAS,SAG3BlkB,GAAQmV,CAAI,IACZzb,EAAM,KAAK,IAAIA,EAAK,KAAK,IAAIwqB,EAAO/O,CAAI,GAAKzb,CAAG,GAEpDyb,EAAO+O,EACf,EACI,IAAI/qB,EAAI,EAAGmF,EAAOoG,EAAO,OAAQvL,EAAImF,EAAM,EAAEnF,EACzC+qB,EAAO9F,EAAM,iBAAiB1Z,EAAOvL,CAAC,CAAC,EACvCgrB,IAGJ,IADAhP,EAAO,OACHhc,EAAI,EAAGmF,EAAO8f,EAAM,MAAM,OAAQjlB,EAAImF,EAAM,EAAEnF,EAC9C+qB,EAAO9F,EAAM,gBAAgBjlB,CAAC,EAC9BgrB,IAEJ,OAAOzqB,CACX,CACC,SAAS0qB,GAAyBngB,EAAOogB,EAAOtlB,EAASulB,EAAY,CAClE,MAAMC,EAAYxlB,EAAQ,aAC1B,IAAI+M,EAAMjQ,EACV,OAAIqB,EAAcqnB,CAAS,GACvBzY,EAAOuY,EAAM,IAAMtlB,EAAQ,mBAC3BlD,EAAQkD,EAAQ,gBAEhB+M,EAAOyY,EAAYD,EACnBzoB,EAAQ,GAEL,CACH,MAAOiQ,EAAOwY,EACd,MAAAzoB,EACA,MAAOwoB,EAAM,OAAOpgB,CAAK,EAAI6H,EAAO,CAC5C,CACA,CACC,SAAS0Y,GAA0BvgB,EAAOogB,EAAOtlB,EAASulB,EAAY,CACnE,MAAMG,EAASJ,EAAM,OACfH,EAAOO,EAAOxgB,CAAK,EACzB,IAAIkR,EAAOlR,EAAQ,EAAIwgB,EAAOxgB,EAAQ,CAAC,EAAI,KACvCiP,EAAOjP,EAAQwgB,EAAO,OAAS,EAAIA,EAAOxgB,EAAQ,CAAC,EAAI,KAC3D,MAAMygB,EAAU3lB,EAAQ,mBACpBoW,IAAS,OACTA,EAAO+O,GAAQhR,IAAS,KAAOmR,EAAM,IAAMA,EAAM,MAAQnR,EAAOgR,IAEhEhR,IAAS,OACTA,EAAOgR,EAAOA,EAAO/O,GAEzB,MAAM/R,EAAQ8gB,GAAQA,EAAO,KAAK,IAAI/O,EAAMjC,CAAI,GAAK,EAAIwR,EAEzD,MAAO,CACH,MAFS,KAAK,IAAIxR,EAAOiC,CAAI,EAAI,EAAIuP,EAEvBJ,EACd,MAAOvlB,EAAQ,cACf,MAAAqE,CACR,CACA,CACA,SAASuhB,GAAcC,EAAOzkB,EAAM8e,EAAQ9lB,EAAG,CAC3C,MAAM0rB,EAAa5F,EAAO,MAAM2F,EAAM,CAAC,EAAGzrB,CAAC,EACrC2rB,EAAW7F,EAAO,MAAM2F,EAAM,CAAC,EAAGzrB,CAAC,EACnCO,EAAM,KAAK,IAAImrB,EAAYC,CAAQ,EACnCtrB,EAAM,KAAK,IAAIqrB,EAAYC,CAAQ,EACzC,IAAIC,EAAWrrB,EACXsrB,EAASxrB,EACT,KAAK,IAAIE,CAAG,EAAI,KAAK,IAAIF,CAAG,IAC5BurB,EAAWvrB,EACXwrB,EAAStrB,GAEbyG,EAAK8e,EAAO,IAAI,EAAI+F,EACpB7kB,EAAK,QAAU,CACX,SAAA4kB,EACA,OAAAC,EACA,MAAOH,EACP,IAAKC,EACL,IAAAprB,EACA,IAAAF,CACR,CACA,CACA,SAASyrB,GAAWL,EAAOzkB,EAAM8e,EAAQ9lB,EAAG,CACxC,OAAIiE,EAAQwnB,CAAK,EACbD,GAAcC,EAAOzkB,EAAM8e,EAAQ9lB,CAAC,EAEpCgH,EAAK8e,EAAO,IAAI,EAAIA,EAAO,MAAM2F,EAAOzrB,CAAC,EAEtCgH,CACX,CACA,SAAS+kB,GAAsB3e,EAAMsE,EAAMzH,EAAOuD,EAAO,CACrD,MAAMC,EAASL,EAAK,OACd0Y,EAAS1Y,EAAK,OACd8b,EAASzb,EAAO,YAChB0b,EAAc1b,IAAWqY,EACzBmB,EAAS,CAAA,EACf,IAAIjnB,EAAGmF,EAAM6B,EAAMykB,EACnB,IAAIzrB,EAAIiK,EAAO9E,EAAO8E,EAAQuD,EAAOxN,EAAImF,EAAM,EAAEnF,EAC7CyrB,EAAQ/Z,EAAK1R,CAAC,EACdgH,EAAO,CAAA,EACPA,EAAKyG,EAAO,IAAI,EAAI0b,GAAe1b,EAAO,MAAMyb,EAAOlpB,CAAC,EAAGA,CAAC,EAC5DinB,EAAO,KAAK6E,GAAWL,EAAOzkB,EAAM8e,EAAQ9lB,CAAC,CAAC,EAElD,OAAOinB,CACX,CACA,SAAS+E,GAAWC,EAAQ,CACxB,OAAOA,GAAUA,EAAO,WAAa,QAAaA,EAAO,SAAW,MACxE,CACA,SAASC,GAAQvZ,EAAMmT,EAAQqG,EAAY,CACvC,OAAIxZ,IAAS,EACF/K,GAAK+K,CAAI,GAEZmT,EAAO,aAAc,EAAG,EAAI,KAAOA,EAAO,KAAOqG,EAAa,EAAI,GAC9E,CACA,SAASC,GAAYtH,EAAY,CAC7B,IAAI/f,EAASkF,EAAOC,EAAKkK,EAAKC,EAC9B,OAAIyQ,EAAW,YACX/f,EAAU+f,EAAW,KAAOA,EAAW,EACvC7a,EAAQ,OACRC,EAAM,UAENnF,EAAU+f,EAAW,KAAOA,EAAW,EACvC7a,EAAQ,SACRC,EAAM,OAENnF,GACAqP,EAAM,MACNC,EAAS,UAETD,EAAM,QACNC,EAAS,OAEN,CACH,MAAApK,EACA,IAAAC,EACA,QAAAnF,EACA,IAAAqP,EACA,OAAAC,CACR,CACA,CACA,SAASgY,GAAiBvH,EAAYlf,EAAS6f,EAAO3a,EAAO,CACzD,IAAIwhB,EAAO1mB,EAAQ,cACnB,MAAMiG,EAAM,CAAA,EACZ,GAAI,CAACygB,EAAM,CACPxH,EAAW,cAAgBjZ,EAC3B,MACH,CACD,GAAIygB,IAAS,GAAM,CACfxH,EAAW,cAAgB,CACvB,IAAK,GACL,MAAO,GACP,OAAQ,GACR,KAAM,EAClB,EACQ,MACH,CACD,KAAM,CAAE,MAAA7a,EAAQ,IAAAC,EAAM,QAAAnF,EAAU,IAAAqP,EAAM,OAAAC,CAAS,EAAG+X,GAAYtH,CAAU,EACpEwH,IAAS,UAAY7G,IACrBX,EAAW,mBAAqB,IAC3BW,EAAM,MAAQ,KAAO3a,EACtBwhB,EAAOlY,GACCqR,EAAM,SAAW,KAAO3a,EAChCwhB,EAAOjY,GAEPxI,EAAI0gB,GAAUlY,EAAQpK,EAAOC,EAAKnF,CAAO,CAAC,EAAI,GAC9CunB,EAAOlY,IAGfvI,EAAI0gB,GAAUD,EAAMriB,EAAOC,EAAKnF,CAAO,CAAC,EAAI,GAC5C+f,EAAW,cAAgBjZ,CAC/B,CACA,SAAS0gB,GAAUD,EAAMltB,EAAGT,EAAGoG,EAAS,CACpC,OAAIA,GACAunB,EAAOE,GAAKF,EAAMltB,EAAGT,CAAC,EACtB2tB,EAAOG,GAASH,EAAM3tB,EAAGS,CAAC,GAE1BktB,EAAOG,GAASH,EAAMltB,EAAGT,CAAC,EAEvB2tB,CACX,CACA,SAASE,GAAKE,EAAMrnB,EAAIsnB,EAAI,CACxB,OAAOD,IAASrnB,EAAKsnB,EAAKD,IAASC,EAAKtnB,EAAKqnB,CACjD,CACA,SAASD,GAASzuB,EAAGiM,EAAOC,EAAK,CAC7B,OAAOlM,IAAM,QAAUiM,EAAQjM,IAAM,MAAQkM,EAAMlM,CACvD,CACA,SAAS4uB,GAAiB9H,EAAY,CAAE,cAAA+H,CAAa,EAAKnqB,EAAO,CAC7DoiB,EAAW,cAAgB+H,IAAkB,OAASnqB,IAAU,EAAI,IAAO,EAAImqB,CACnF,CACA,MAAMC,WAAsB7E,EAAkB,CAC1C,OAAO,GAAK,MACf,OAAO,SAAW,CACX,mBAAoB,GACpB,gBAAiB,MACjB,mBAAoB,GACpB,cAAe,GACf,QAAS,GACT,WAAY,CACR,QAAS,CACL,KAAM,SACN,WAAY,CACR,IACA,IACA,OACA,QACA,QACH,CACJ,CACJ,CACT,EACC,OAAO,UAAY,CACZ,OAAQ,CACJ,QAAS,CACL,KAAM,WACN,OAAQ,GACR,KAAM,CACF,OAAQ,EACX,CACJ,EACD,QAAS,CACL,KAAM,SACN,YAAa,EAChB,CACJ,CACT,EACC,mBAAmB7a,EAAMsE,EAAMzH,EAAOuD,EAAO,CACtC,OAAOue,GAAsB3e,EAAMsE,EAAMzH,EAAOuD,CAAK,CACxD,CACJ,eAAeJ,EAAMsE,EAAMzH,EAAOuD,EAAO,CAClC,OAAOue,GAAsB3e,EAAMsE,EAAMzH,EAAOuD,CAAK,CACxD,CACJ,gBAAgBJ,EAAMsE,EAAMzH,EAAOuD,EAAO,CACnC,KAAM,CAAE,OAAAC,EAAS,OAAAqY,CAAS,EAAG1Y,EACvB,CAAE,SAAAgc,EAAU,IAAM,SAAAC,EAAU,GAAM,EAAG,KAAK,SAC1CtD,EAAWtY,EAAO,OAAS,IAAM2b,EAAWC,EAC5CrD,EAAWF,EAAO,OAAS,IAAMsD,EAAWC,EAC5CpC,EAAS,CAAA,EACf,IAAIjnB,EAAGmF,EAAM6B,EAAM7D,EACnB,IAAInD,EAAIiK,EAAO9E,EAAO8E,EAAQuD,EAAOxN,EAAImF,EAAM,EAAEnF,EAC7CmD,EAAMuO,EAAK1R,CAAC,EACZgH,EAAO,CAAA,EACPA,EAAKyG,EAAO,IAAI,EAAIA,EAAO,MAAM9G,GAAiBxD,EAAK4iB,CAAQ,EAAG/lB,CAAC,EACnEinB,EAAO,KAAK6E,GAAWnlB,GAAiBxD,EAAK6iB,CAAQ,EAAGhf,EAAM8e,EAAQ9lB,CAAC,CAAC,EAE5E,OAAOinB,CACV,CACJ,sBAAsB/e,EAAO+c,EAAOgC,EAAQxB,EAAO,CAC5C,MAAM,sBAAsBvd,EAAO+c,EAAOgC,EAAQxB,CAAK,EACvD,MAAMwG,EAAShF,EAAO,QAClBgF,GAAUhH,IAAU,KAAK,YAAY,SACrC/c,EAAM,IAAM,KAAK,IAAIA,EAAM,IAAK+jB,EAAO,GAAG,EAC1C/jB,EAAM,IAAM,KAAK,IAAIA,EAAM,IAAK+jB,EAAO,GAAG,EAEjD,CACJ,gBAAiB,CACV,MAAO,EACV,CACJ,iBAAiBnhB,EAAO,CACjB,MAAMsC,EAAO,KAAK,YACZ,CAAE,OAAAK,EAAS,OAAAqY,CAAS,EAAG1Y,EACvB6Z,EAAS,KAAK,UAAUnc,CAAK,EAC7BmhB,EAAShF,EAAO,QAChBjjB,EAAQgoB,GAAWC,CAAM,EAAI,IAAMA,EAAO,MAAQ,KAAOA,EAAO,IAAM,IAAM,GAAKnG,EAAO,iBAAiBmB,EAAOnB,EAAO,IAAI,CAAC,EAClI,MAAO,CACH,MAAO,GAAKrY,EAAO,iBAAiBwZ,EAAOxZ,EAAO,IAAI,CAAC,EACvD,MAAAzJ,CACZ,CACK,CACD,YAAa,CACT,KAAK,oBAAsB,GAC3B,MAAM,WAAU,EAChB,MAAMoJ,EAAO,KAAK,YAClBA,EAAK,MAAQ,KAAK,WAAU,EAAG,KAClC,CACD,OAAOwG,EAAM,CACT,MAAMxG,EAAO,KAAK,YAClB,KAAK,eAAeA,EAAK,KAAM,EAAGA,EAAK,KAAK,OAAQwG,CAAI,CAC3D,CACD,eAAemZ,EAAM9iB,EAAOuD,EAAOoG,EAAM,CACrC,MAAMoZ,EAAQpZ,IAAS,QACjB,CAAE,MAAA9I,EAAQ,YAAa,CAAE,OAAAgb,CAAS,CAAA,EAAM,KACxCla,EAAOka,EAAO,eACdmH,EAAanH,EAAO,eACpBoF,EAAQ,KAAK,YACb,CAAE,cAAAjB,EAAgB,eAAAG,CAAiB,EAAG,KAAK,kBAAkBngB,EAAO2J,CAAI,EAC9E,QAAQ5T,EAAIiK,EAAOjK,EAAIiK,EAAQuD,EAAOxN,IAAI,CACtC,MAAMinB,EAAS,KAAK,UAAUjnB,CAAC,EACzBktB,EAAUF,GAASjpB,EAAckjB,EAAOnB,EAAO,IAAI,CAAC,EAAI,CAC1D,KAAAla,EACA,KAAMA,CACtB,EAAgB,KAAK,yBAAyB5L,CAAC,EAC7BmtB,EAAU,KAAK,yBAAyBntB,EAAGkrB,CAAK,EAChDzF,GAASwB,EAAO,SAAW,CAAA,GAAInB,EAAO,IAAI,EAC1ChB,EAAa,CACf,WAAAmI,EACA,KAAMC,EAAQ,KACd,mBAAoB,CAACzH,GAASuG,GAAW/E,EAAO,OAAO,GAAKnc,IAAU2a,EAAM,MAAQ3a,IAAU2a,EAAM,QACpG,EAAGwH,EAAaC,EAAQ,KAAOC,EAAQ,OACvC,EAAGF,EAAaE,EAAQ,OAASD,EAAQ,KACzC,OAAQD,EAAaE,EAAQ,KAAO,KAAK,IAAID,EAAQ,IAAI,EACzD,MAAOD,EAAa,KAAK,IAAIC,EAAQ,IAAI,EAAIC,EAAQ,IACrE,EACgB/C,IACAtF,EAAW,QAAUmF,GAAiB,KAAK,0BAA0BjqB,EAAG+sB,EAAK/sB,CAAC,EAAE,OAAS,SAAW4T,CAAI,GAE5G,MAAMhO,EAAUkf,EAAW,SAAWiI,EAAK/sB,CAAC,EAAE,QAC9CqsB,GAAiBvH,EAAYlf,EAAS6f,EAAO3a,CAAK,EAClD8hB,GAAiB9H,EAAYlf,EAASslB,EAAM,KAAK,EACjD,KAAK,cAAc6B,EAAK/sB,CAAC,EAAGA,EAAG8kB,EAAYlR,CAAI,CAClD,CACJ,CACJ,WAAWzI,EAAMiiB,EAAW,CACrB,KAAM,CAAE,OAAA3f,CAAM,EAAM,KAAK,YACnB8X,EAAW9X,EAAO,wBAAwB,KAAK,KAAK,EAAE,OAAQL,GAAOA,EAAK,WAAW,QAAQ,OAAO,EACpG+Y,EAAU1Y,EAAO,QAAQ,QACzBgZ,EAAS,CAAA,EACT4G,EAAgB,KAAK,YAAY,WAAW,UAAUD,CAAS,EAC/DE,EAAcD,GAAiBA,EAAc5f,EAAO,IAAI,EACxD8f,EAAYngB,GAAO,CACrB,MAAM6Z,EAAS7Z,EAAK,QAAQ,KAAMpG,GAAOA,EAAKyG,EAAO,IAAI,IAAM6f,CAAW,EACpE3pB,EAAMsjB,GAAUA,EAAO7Z,EAAK,OAAO,IAAI,EAC7C,GAAIrJ,EAAcJ,CAAG,GAAK,MAAMA,CAAG,EAC/B,MAAO,EAEvB,EACQ,UAAWyJ,KAAQmY,EACf,GAAI,EAAA6H,IAAc,QAAaG,EAASngB,CAAI,MAGxC+Y,IAAY,IAASM,EAAO,QAAQrZ,EAAK,KAAK,IAAM,IAAM+Y,IAAY,QAAa/Y,EAAK,QAAU,SAClGqZ,EAAO,KAAKrZ,EAAK,KAAK,EAEtBA,EAAK,QAAUjC,GACf,MAGR,OAAKsb,EAAO,QACRA,EAAO,KAAK,MAAS,EAElBA,CACV,CACJ,eAAe3b,EAAO,CACf,OAAO,KAAK,WAAW,OAAWA,CAAK,EAAE,MAC5C,CACJ,eAAeuX,EAAcvT,EAAMse,EAAW,CACvC,MAAM3G,EAAS,KAAK,WAAWpE,EAAc+K,CAAS,EAChDtiB,EAAQgE,IAAS,OAAY2X,EAAO,QAAQ3X,CAAI,EAAI,GAC1D,OAAOhE,IAAU,GAAK2b,EAAO,OAAS,EAAI3b,CAC7C,CACJ,WAAY,CACL,MAAMkJ,EAAO,KAAK,QACZ5G,EAAO,KAAK,YACZK,EAASL,EAAK,OACdke,EAAS,CAAA,EACf,IAAItrB,EAAGmF,EACP,IAAInF,EAAI,EAAGmF,EAAOiI,EAAK,KAAK,OAAQpN,EAAImF,EAAM,EAAEnF,EAC5CsrB,EAAO,KAAK7d,EAAO,iBAAiB,KAAK,UAAUzN,CAAC,EAAEyN,EAAO,IAAI,EAAGzN,CAAC,CAAC,EAE1E,MAAMwtB,EAAexZ,EAAK,aAE1B,MAAO,CACH,IAFQwZ,GAAgB1C,GAAqB1d,CAAI,EAGjD,OAAAke,EACA,MAAO7d,EAAO,YACd,IAAKA,EAAO,UACZ,WAAY,KAAK,eAAgB,EACjC,MAAOA,EACP,QAASuG,EAAK,QACd,MAAOwZ,EAAe,EAAIxZ,EAAK,mBAAqBA,EAAK,aACrE,CACK,CACJ,yBAAyBlJ,EAAO,CACzB,KAAM,CAAE,YAAa,CAAE,OAAAgb,EAAS,SAAAiD,EAAW,MAAO1G,CAAY,EAAM,QAAS,CAAE,KAAMoL,EAAY,aAAAC,CAAe,CAAA,EAAM,KAChHvB,EAAasB,GAAa,EAC1BxG,EAAS,KAAK,UAAUnc,CAAK,EAC7BmhB,EAAShF,EAAO,QAChB0G,EAAW3B,GAAWC,CAAM,EAClC,IAAIjoB,EAAQijB,EAAOnB,EAAO,IAAI,EAC1B7b,EAAQ,EACR2jB,EAAS7E,EAAW,KAAK,WAAWjD,EAAQmB,EAAQ8B,CAAQ,EAAI/kB,EAChE6pB,EAAMlb,EACNib,IAAW5pB,IACXiG,EAAQ2jB,EAAS5pB,EACjB4pB,EAAS5pB,GAET2pB,IACA3pB,EAAQioB,EAAO,SACf2B,EAAS3B,EAAO,OAASA,EAAO,SAC5BjoB,IAAU,GAAK4D,GAAK5D,CAAK,IAAM4D,GAAKqkB,EAAO,MAAM,IACjDhiB,EAAQ,GAEZA,GAASjG,GAEb,MAAM0nB,EAAa,CAAC3nB,EAAc0pB,CAAS,GAAK,CAACE,EAAWF,EAAYxjB,EACxE,IAAI2B,EAAOka,EAAO,iBAAiB4F,CAAU,EAO7C,GANI,KAAK,MAAM,kBAAkB5gB,CAAK,EAClC+iB,EAAO/H,EAAO,iBAAiB7b,EAAQ2jB,CAAM,EAE7CC,EAAOjiB,EAEX+G,EAAOkb,EAAOjiB,EACV,KAAK,IAAI+G,CAAI,EAAI+a,EAAc,CAC/B/a,EAAOuZ,GAAQvZ,EAAMmT,EAAQqG,CAAU,EAAIuB,EACvC1pB,IAAUmoB,IACVvgB,GAAQ+G,EAAO,GAEnB,MAAMmb,EAAahI,EAAO,mBAAmB,CAAC,EACxCiI,EAAWjI,EAAO,mBAAmB,CAAC,EACtCvlB,EAAM,KAAK,IAAIutB,EAAYC,CAAQ,EACnC1tB,EAAM,KAAK,IAAIytB,EAAYC,CAAQ,EACzCniB,EAAO,KAAK,IAAI,KAAK,IAAIA,EAAMvL,CAAG,EAAGE,CAAG,EACxCstB,EAAOjiB,EAAO+G,EACVoW,GAAY,CAAC4E,IACb1G,EAAO,QAAQnB,EAAO,IAAI,EAAE,cAAczD,CAAY,EAAIyD,EAAO,iBAAiB+H,CAAI,EAAI/H,EAAO,iBAAiBla,CAAI,EAE7H,CACD,GAAIA,IAASka,EAAO,iBAAiBqG,CAAU,EAAG,CAC9C,MAAM6B,EAAWpmB,GAAK+K,CAAI,EAAImT,EAAO,qBAAqBqG,CAAU,EAAI,EACxEvgB,GAAQoiB,EACRrb,GAAQqb,CACX,CACD,MAAO,CACH,KAAArb,EACA,KAAA/G,EACA,KAAAiiB,EACA,OAAQA,EAAOlb,EAAO,CAClC,CACK,CACJ,yBAAyB7H,EAAOogB,EAAO,CAChC,MAAMjG,EAAQiG,EAAM,MACdtlB,EAAU,KAAK,QACf2nB,EAAW3nB,EAAQ,SACnBqoB,EAAkB3pB,EAAesB,EAAQ,gBAAiB,GAAQ,EACxE,IAAIsoB,EAAQvb,EACZ,GAAIuY,EAAM,QAAS,CACf,MAAMC,EAAaoC,EAAW,KAAK,eAAeziB,CAAK,EAAIogB,EAAM,WAC3DhjB,EAAQtC,EAAQ,eAAiB,OAASylB,GAA0BvgB,EAAOogB,EAAOtlB,EAASulB,CAAU,EAAIF,GAAyBngB,EAAOogB,EAAOtlB,EAASulB,CAAU,EACnKgD,EAAa,KAAK,eAAe,KAAK,MAAO,KAAK,YAAY,MAAOZ,EAAWziB,EAAQ,MAAS,EACvGojB,EAAShmB,EAAM,MAAQA,EAAM,MAAQimB,EAAajmB,EAAM,MAAQ,EAChEyK,EAAO,KAAK,IAAIsb,EAAiB/lB,EAAM,MAAQA,EAAM,KAAK,CACtE,MACYgmB,EAASjJ,EAAM,iBAAiB,KAAK,UAAUna,CAAK,EAAEma,EAAM,IAAI,EAAGna,CAAK,EACxE6H,EAAO,KAAK,IAAIsb,EAAiB/C,EAAM,IAAMA,EAAM,KAAK,EAE5D,MAAO,CACH,KAAMgD,EAASvb,EAAO,EACtB,KAAMub,EAASvb,EAAO,EACtB,OAAAub,EACA,KAAAvb,CACZ,CACK,CACD,MAAO,CACH,MAAMvF,EAAO,KAAK,YACZ0Y,EAAS1Y,EAAK,OACdghB,EAAQhhB,EAAK,KACbjI,EAAOipB,EAAM,OACnB,IAAIpuB,EAAI,EACR,KAAMA,EAAImF,EAAM,EAAEnF,EACV,KAAK,UAAUA,CAAC,EAAE8lB,EAAO,IAAI,IAAM,MAAQ,CAACsI,EAAMpuB,CAAC,EAAE,QACrDouB,EAAMpuB,CAAC,EAAE,KAAK,KAAK,IAAI,CAGlC,CACL,CAmaA,MAAMquB,WAAuBpG,EAAkB,CAC3C,OAAO,GAAK,OACf,OAAO,SAAW,CACX,mBAAoB,OACpB,gBAAiB,QACjB,SAAU,GACV,SAAU,EAClB,EACC,OAAO,UAAY,CACZ,OAAQ,CACJ,QAAS,CACL,KAAM,UACT,EACD,QAAS,CACL,KAAM,QACT,CACJ,CACT,EACI,YAAa,CACT,KAAK,oBAAsB,GAC3B,KAAK,mBAAqB,GAC1B,MAAM,WAAU,CACnB,CACD,OAAOrU,EAAM,CACT,MAAMxG,EAAO,KAAK,YACZ,CAAE,QAAS8G,EAAO,KAAM7G,EAAS,GAAK,SAAAihB,CAAW,EAAGlhB,EACpDE,EAAqB,KAAK,MAAM,oBACtC,GAAI,CAAE,MAAArD,EAAQ,MAAAuD,CAAQ,EAAGL,GAAiCC,EAAMC,EAAQC,CAAkB,EAC1F,KAAK,WAAarD,EAClB,KAAK,WAAauD,EACdM,GAAoBV,CAAI,IACxBnD,EAAQ,EACRuD,EAAQH,EAAO,QAEnB6G,EAAK,OAAS,KAAK,MACnBA,EAAK,cAAgB,KAAK,MAC1BA,EAAK,WAAa,CAAC,CAACoa,EAAS,WAC7Bpa,EAAK,OAAS7G,EACd,MAAMzH,EAAU,KAAK,6BAA6BgO,CAAI,EACjD,KAAK,QAAQ,WACdhO,EAAQ,YAAc,GAE1BA,EAAQ,QAAU,KAAK,QAAQ,QAC/B,KAAK,cAAcsO,EAAM,OAAW,CAChC,SAAU,CAAC5G,EACX,QAAA1H,CACH,EAAEgO,CAAI,EACP,KAAK,eAAevG,EAAQpD,EAAOuD,EAAOoG,CAAI,CACjD,CACD,eAAevG,EAAQpD,EAAOuD,EAAOoG,EAAM,CACvC,MAAMoZ,EAAQpZ,IAAS,QACjB,CAAE,OAAAnG,EAAS,OAAAqY,EAAS,SAAAiD,EAAW,SAAAuF,CAAW,EAAG,KAAK,YAClD,CAAE,cAAArE,EAAgB,eAAAG,CAAiB,EAAG,KAAK,kBAAkBngB,EAAO2J,CAAI,EACxEsT,EAAQzZ,EAAO,KACf0Z,EAAQrB,EAAO,KACf,CAAE,SAAApE,EAAW,QAAAnB,GAAa,KAAK,QAC/BgO,EAAe9lB,GAASiZ,CAAQ,EAAIA,EAAW,OAAO,kBACtD8M,EAAe,KAAK,MAAM,qBAAuBxB,GAASpZ,IAAS,OACnE1J,EAAMD,EAAQuD,EACdihB,EAAcphB,EAAO,OAC3B,IAAIqhB,EAAazkB,EAAQ,GAAK,KAAK,UAAUA,EAAQ,CAAC,EACtD,QAAQjK,EAAI,EAAGA,EAAIyuB,EAAa,EAAEzuB,EAAE,CAChC,MAAMoT,EAAQ/F,EAAOrN,CAAC,EAChB8kB,EAAa0J,EAAepb,EAAQ,GAC1C,GAAIpT,EAAIiK,GAASjK,GAAKkK,EAAK,CACvB4a,EAAW,KAAO,GAClB,QACH,CACD,MAAMmC,EAAS,KAAK,UAAUjnB,CAAC,EACzB2uB,EAAW5qB,EAAckjB,EAAOE,CAAK,CAAC,EACtChM,EAAS2J,EAAWoC,CAAK,EAAIzZ,EAAO,iBAAiBwZ,EAAOC,CAAK,EAAGlnB,CAAC,EACrEob,EAAS0J,EAAWqC,CAAK,EAAI6F,GAAS2B,EAAW7I,EAAO,aAAc,EAAGA,EAAO,iBAAiBiD,EAAW,KAAK,WAAWjD,EAAQmB,EAAQ8B,CAAQ,EAAI9B,EAAOE,CAAK,EAAGnnB,CAAC,EAC9K8kB,EAAW,KAAO,MAAM3J,CAAM,GAAK,MAAMC,CAAM,GAAKuT,EACpD7J,EAAW,KAAO9kB,EAAI,GAAK,KAAK,IAAIinB,EAAOC,CAAK,EAAIwH,EAAWxH,CAAK,CAAC,EAAIqH,EACrEhO,IACAuE,EAAW,OAASmC,EACpBnC,EAAW,IAAMwJ,EAAS,KAAKtuB,CAAC,GAEhCoqB,IACAtF,EAAW,QAAUmF,GAAiB,KAAK,0BAA0BjqB,EAAGoT,EAAM,OAAS,SAAWQ,CAAI,GAErG4a,GACD,KAAK,cAAcpb,EAAOpT,EAAG8kB,EAAYlR,CAAI,EAEjD8a,EAAazH,CAChB,CACJ,CACJ,gBAAiB,CACV,MAAM7Z,EAAO,KAAK,YACZ8a,EAAU9a,EAAK,QACfwhB,EAAS1G,EAAQ,SAAWA,EAAQ,QAAQ,aAAe,EAC3DxW,EAAOtE,EAAK,MAAQ,GAC1B,GAAI,CAACsE,EAAK,OACN,OAAOkd,EAEX,MAAMhV,EAAalI,EAAK,CAAC,EAAE,KAAK,KAAK,0BAA0B,CAAC,CAAC,EAC3Dmd,EAAYnd,EAAKA,EAAK,OAAS,CAAC,EAAE,KAAK,KAAK,0BAA0BA,EAAK,OAAS,CAAC,CAAC,EAC5F,OAAO,KAAK,IAAIkd,EAAQhV,EAAYiV,CAAS,EAAI,CACpD,CACD,MAAO,CACH,MAAMzhB,EAAO,KAAK,YAClBA,EAAK,QAAQ,oBAAoB,KAAK,MAAM,UAAWA,EAAK,OAAO,IAAI,EACvE,MAAM,KAAI,CACb,CACL,CA4ZI,SAAS0hB,IAAW,CACpB,MAAM,IAAI,MAAM,iFAAiF,CACrG,CAMI,MAAMC,EAAgB,CAUpB,OAAO,SAASC,EAAS,CACvB,OAAO,OAAOD,GAAgB,UAAWC,CAAO,CACnD,CACD,QACA,YAAYppB,EAAQ,CAChB,KAAK,QAAUA,GAAW,EAC7B,CAED,MAAO,CAAE,CACT,SAAU,CACN,OAAOkpB,GAAQ,CAClB,CACD,OAAQ,CACJ,OAAOA,GAAQ,CAClB,CACD,QAAS,CACL,OAAOA,GAAQ,CAClB,CACD,KAAM,CACF,OAAOA,GAAQ,CAClB,CACD,MAAO,CACH,OAAOA,GAAQ,CAClB,CACD,SAAU,CACN,OAAOA,GAAQ,CAClB,CACD,OAAQ,CACJ,OAAOA,GAAQ,CAClB,CACL,CACA,IAAIG,GAAW,CACX,MAAOF,EACX,EAEA,SAASG,GAAaC,EAASxhB,EAAM3J,EAAOorB,EAAW,CACnD,KAAM,CAAE,WAAApI,EAAa,KAAAtV,EAAO,QAAA2d,CAAO,EAAMF,EACnC1hB,EAASuZ,EAAW,YAAY,OACtC,GAAIvZ,GAAUE,IAASF,EAAO,MAAQE,IAAS,KAAO0hB,GAAW3d,EAAK,OAAQ,CAC1E,MAAM4d,EAAe7hB,EAAO,eAAiBpC,GAAgBH,GAC7D,GAAKkkB,GAEE,GAAIpI,EAAW,eAAgB,CAClC,MAAMrK,EAAKjL,EAAK,CAAC,EACXxJ,EAAQ,OAAOyU,EAAG,UAAa,YAAcA,EAAG,SAAShP,CAAI,EACnE,GAAIzF,EAAO,CACP,MAAM+B,EAAQqlB,EAAa5d,EAAM/D,EAAM3J,EAAQkE,CAAK,EAC9CgC,EAAMolB,EAAa5d,EAAM/D,EAAM3J,EAAQkE,CAAK,EAClD,MAAO,CACH,GAAI+B,EAAM,GACV,GAAIC,EAAI,EAC5B,CACa,CACJ,MAZG,QAAOolB,EAAa5d,EAAM/D,EAAM3J,CAAK,CAa5C,CACD,MAAO,CACH,GAAI,EACJ,GAAI0N,EAAK,OAAS,CAC1B,CACA,CACC,SAAS6d,GAAyBvd,EAAOrE,EAAM6hB,EAAUC,EAASL,EAAW,CAC1E,MAAM7J,EAAWvT,EAAM,+BACjBhO,EAAQwrB,EAAS7hB,CAAI,EAC3B,QAAQ3N,EAAI,EAAGmF,EAAOogB,EAAS,OAAQvlB,EAAImF,EAAM,EAAEnF,EAAE,CACjD,KAAM,CAAE,MAAA8K,EAAQ,KAAA4G,CAAO,EAAG6T,EAASvlB,CAAC,EAC9B,CAAE,GAAAgL,EAAK,GAAAD,CAAK,EAAGmkB,GAAa3J,EAASvlB,CAAC,EAAG2N,EAAM3J,EAAOorB,CAAS,EACrE,QAAQztB,EAAIqJ,EAAIrJ,GAAKoJ,EAAI,EAAEpJ,EAAE,CACzB,MAAM8a,EAAU/K,EAAK/P,CAAC,EACjB8a,EAAQ,MACTgT,EAAQhT,EAAS3R,EAAOnJ,CAAC,CAEhC,CACJ,CACL,CACC,SAAS+tB,GAAyB/hB,EAAM,CACrC,MAAMgiB,EAAOhiB,EAAK,QAAQ,GAAG,IAAM,GAC7BiiB,EAAOjiB,EAAK,QAAQ,GAAG,IAAM,GACnC,OAAO,SAAS/D,EAAKC,EAAK,CACtB,MAAMgmB,EAASF,EAAO,KAAK,IAAI/lB,EAAI,EAAIC,EAAI,CAAC,EAAI,EAC1CimB,EAASF,EAAO,KAAK,IAAIhmB,EAAI,EAAIC,EAAI,CAAC,EAAI,EAChD,OAAO,KAAK,KAAK,KAAK,IAAIgmB,EAAQ,CAAC,EAAI,KAAK,IAAIC,EAAQ,CAAC,CAAC,CAClE,CACA,CACC,SAASC,GAAkB/d,EAAOwd,EAAU7hB,EAAMqiB,EAAkBC,EAAkB,CACnF,MAAM9jB,EAAQ,CAAA,EACd,MAAI,CAAC8jB,GAAoB,CAACje,EAAM,cAAcwd,CAAQ,GAetDD,GAAyBvd,EAAOrE,EAAM6hB,EAZf,SAAS/S,EAAS4F,EAAcvX,EAAO,CACtD,CAACmlB,GAAoB,CAAC9c,GAAesJ,EAASzK,EAAM,UAAW,CAAC,GAGhEyK,EAAQ,QAAQ+S,EAAS,EAAGA,EAAS,EAAGQ,CAAgB,GACxD7jB,EAAM,KAAK,CACP,QAAAsQ,EACA,aAAA4F,EACA,MAAAvX,CAChB,CAAa,CAEb,EACoE,EAAI,EAC7DqB,CACX,CACC,SAAS+jB,GAAsBle,EAAOwd,EAAU7hB,EAAMqiB,EAAkB,CACrE,IAAI7jB,EAAQ,CAAA,EACZ,SAASgkB,EAAe1T,EAAS4F,EAAcvX,EAAO,CAClD,KAAM,CAAE,WAAAslB,EAAa,SAAAC,GAAc5T,EAAQ,SAAS,CAChD,aACA,UACH,EAAEuT,CAAgB,EACb,CAAE,MAAAtmB,CAAK,EAAMN,GAAkBqT,EAAS,CAC1C,EAAG+S,EAAS,EACZ,EAAGA,EAAS,CACxB,CAAS,EACGxlB,GAAcN,EAAO0mB,EAAYC,CAAQ,GACzClkB,EAAM,KAAK,CACP,QAAAsQ,EACA,aAAA4F,EACA,MAAAvX,CAChB,CAAa,CAER,CACD,OAAAykB,GAAyBvd,EAAOrE,EAAM6hB,EAAUW,CAAc,EACvDhkB,CACX,CACC,SAASmkB,GAAyBte,EAAOwd,EAAU7hB,EAAMyhB,EAAWY,EAAkBC,EAAkB,CACrG,IAAI9jB,EAAQ,CAAA,EACZ,MAAMokB,EAAiBb,GAAyB/hB,CAAI,EACpD,IAAI6iB,EAAc,OAAO,kBACzB,SAASL,EAAe1T,EAAS4F,EAAcvX,EAAO,CAClD,MAAM2lB,EAAUhU,EAAQ,QAAQ+S,EAAS,EAAGA,EAAS,EAAGQ,CAAgB,EACxE,GAAIZ,GAAa,CAACqB,EACd,OAEJ,MAAMvC,EAASzR,EAAQ,eAAeuT,CAAgB,EAEtD,GAAI,EADgB,CAAC,CAACC,GAAoBje,EAAM,cAAckc,CAAM,IAChD,CAACuC,EACjB,OAEJ,MAAMC,EAAWH,EAAef,EAAUtB,CAAM,EAC5CwC,EAAWF,GACXrkB,EAAQ,CACJ,CACI,QAAAsQ,EACA,aAAA4F,EACA,MAAAvX,CACH,CACjB,EACY0lB,EAAcE,GACPA,IAAaF,GACpBrkB,EAAM,KAAK,CACP,QAAAsQ,EACA,aAAA4F,EACA,MAAAvX,CAChB,CAAa,CAER,CACD,OAAAykB,GAAyBvd,EAAOrE,EAAM6hB,EAAUW,CAAc,EACvDhkB,CACX,CACC,SAASwkB,GAAgB3e,EAAOwd,EAAU7hB,EAAMyhB,EAAWY,EAAkBC,EAAkB,CAC5F,MAAI,CAACA,GAAoB,CAACje,EAAM,cAAcwd,CAAQ,EAC3C,GAEJ7hB,IAAS,KAAO,CAACyhB,EAAYc,GAAsBle,EAAOwd,EAAU7hB,EAAMqiB,CAAgB,EAAIM,GAAyBte,EAAOwd,EAAU7hB,EAAMyhB,EAAWY,EAAkBC,CAAgB,CACtM,CACC,SAASW,GAAa5e,EAAOwd,EAAU7hB,EAAMyhB,EAAWY,EAAkB,CACvE,MAAM7jB,EAAQ,CAAA,EACR0kB,EAAcljB,IAAS,IAAM,WAAa,WAChD,IAAImjB,EAAiB,GAWrB,OAVAvB,GAAyBvd,EAAOrE,EAAM6hB,EAAU,CAAC/S,EAAS4F,EAAcvX,IAAQ,CACxE2R,EAAQoU,CAAW,GAAKpU,EAAQoU,CAAW,EAAErB,EAAS7hB,CAAI,EAAGqiB,CAAgB,IAC7E7jB,EAAM,KAAK,CACP,QAAAsQ,EACA,aAAA4F,EACA,MAAAvX,CAChB,CAAa,EACDgmB,EAAiBA,GAAkBrU,EAAQ,QAAQ+S,EAAS,EAAGA,EAAS,EAAGQ,CAAgB,EAEvG,CAAK,EACGZ,GAAa,CAAC0B,EACP,GAEJ3kB,CACX,CACC,IAAI4kB,GAAc,CACf,yBAAAxB,GACA,MAAO,CACV,MAAOvd,EAAO9K,EAAGtB,EAASoqB,EAAkB,CACjC,MAAMR,EAAWjS,GAAoBrW,EAAG8K,CAAK,EACvCrE,EAAO/H,EAAQ,MAAQ,IACvBqqB,EAAmBrqB,EAAQ,kBAAoB,GAC/CuG,EAAQvG,EAAQ,UAAYmqB,GAAkB/d,EAAOwd,EAAU7hB,EAAMqiB,EAAkBC,CAAgB,EAAIU,GAAgB3e,EAAOwd,EAAU7hB,EAAM,GAAOqiB,EAAkBC,CAAgB,EAC3LtG,EAAW,CAAA,EACjB,OAAKxd,EAAM,QAGX6F,EAAM,6BAA4B,EAAG,QAAS5E,GAAO,CACjD,MAAMtC,EAAQqB,EAAM,CAAC,EAAE,MACjBsQ,EAAUrP,EAAK,KAAKtC,CAAK,EAC3B2R,GAAW,CAACA,EAAQ,MACpBkN,EAAS,KAAK,CACV,QAAAlN,EACA,aAAcrP,EAAK,MACnB,MAAAtC,CACxB,CAAqB,CAErB,CAAa,EACM6e,GAbI,EAcd,EACR,QAAS3X,EAAO9K,EAAGtB,EAASoqB,EAAkB,CACnC,MAAMR,EAAWjS,GAAoBrW,EAAG8K,CAAK,EACvCrE,EAAO/H,EAAQ,MAAQ,KACvBqqB,EAAmBrqB,EAAQ,kBAAoB,GACrD,IAAIuG,EAAQvG,EAAQ,UAAYmqB,GAAkB/d,EAAOwd,EAAU7hB,EAAMqiB,EAAkBC,CAAgB,EAAIU,GAAgB3e,EAAOwd,EAAU7hB,EAAM,GAAOqiB,EAAkBC,CAAgB,EAC/L,GAAI9jB,EAAM,OAAS,EAAG,CAClB,MAAMkW,EAAelW,EAAM,CAAC,EAAE,aACxBuF,EAAOM,EAAM,eAAeqQ,CAAY,EAAE,KAChDlW,EAAQ,CAAA,EACR,QAAQnM,EAAI,EAAGA,EAAI0R,EAAK,OAAQ,EAAE1R,EAC9BmM,EAAM,KAAK,CACP,QAASuF,EAAK1R,CAAC,EACf,aAAAqiB,EACA,MAAOriB,CAC/B,CAAqB,CAER,CACD,OAAOmM,CACV,EACR,MAAO6F,EAAO9K,EAAGtB,EAASoqB,EAAkB,CACjC,MAAMR,EAAWjS,GAAoBrW,EAAG8K,CAAK,EACvCrE,EAAO/H,EAAQ,MAAQ,KACvBqqB,EAAmBrqB,EAAQ,kBAAoB,GACrD,OAAOmqB,GAAkB/d,EAAOwd,EAAU7hB,EAAMqiB,EAAkBC,CAAgB,CACrF,EACR,QAASje,EAAO9K,EAAGtB,EAASoqB,EAAkB,CACnC,MAAMR,EAAWjS,GAAoBrW,EAAG8K,CAAK,EACvCrE,EAAO/H,EAAQ,MAAQ,KACvBqqB,EAAmBrqB,EAAQ,kBAAoB,GACrD,OAAO+qB,GAAgB3e,EAAOwd,EAAU7hB,EAAM/H,EAAQ,UAAWoqB,EAAkBC,CAAgB,CACtG,EACR,EAAGje,EAAO9K,EAAGtB,EAASoqB,EAAkB,CAC7B,MAAMR,EAAWjS,GAAoBrW,EAAG8K,CAAK,EAC7C,OAAO4e,GAAa5e,EAAOwd,EAAU,IAAK5pB,EAAQ,UAAWoqB,CAAgB,CAChF,EACR,EAAGhe,EAAO9K,EAAGtB,EAASoqB,EAAkB,CAC7B,MAAMR,EAAWjS,GAAoBrW,EAAG8K,CAAK,EAC7C,OAAO4e,GAAa5e,EAAOwd,EAAU,IAAK5pB,EAAQ,UAAWoqB,CAAgB,CAChF,CACJ,CACL,EAEA,MAAMgB,GAAmB,CACrB,OACA,MACA,QACA,QACJ,EACA,SAASC,GAAiBpoB,EAAO2mB,EAAU,CACvC,OAAO3mB,EAAM,OAAQ7K,GAAIA,EAAE,MAAQwxB,CAAQ,CAC/C,CACA,SAAS0B,GAA4BroB,EAAO8E,EAAM,CAC9C,OAAO9E,EAAM,OAAQ7K,GAAIgzB,GAAiB,QAAQhzB,EAAE,GAAG,IAAM,IAAMA,EAAE,IAAI,OAAS2P,CAAI,CAC1F,CACA,SAASwjB,GAAatoB,EAAO9D,EAAS,CAClC,OAAO8D,EAAM,KAAK,CAACzJ,EAAGT,IAAI,CACtB,MAAMyG,EAAKL,EAAUpG,EAAIS,EACnBiG,EAAKN,EAAU3F,EAAIT,EACzB,OAAOyG,EAAG,SAAWC,EAAG,OAASD,EAAG,MAAQC,EAAG,MAAQD,EAAG,OAASC,EAAG,MAC9E,CAAK,CACL,CACA,SAAS+rB,GAAUC,EAAO,CACtB,MAAMC,EAAc,CAAA,EACpB,IAAItxB,EAAGmF,EAAMmY,EAAKN,EAAKyI,EAAO8L,EAC9B,IAAIvxB,EAAI,EAAGmF,GAAQksB,GAAS,IAAI,OAAQrxB,EAAImF,EAAM,EAAEnF,EAChDsd,EAAM+T,EAAMrxB,CAAC,EACZ,CAAE,SAAUgd,EAAM,QAAS,CAAE,MAAAyI,EAAQ,YAAA8L,EAAa,EAAO,EAAGjU,EAC7DgU,EAAY,KAAK,CACb,MAAOtxB,EACP,IAAAsd,EACA,IAAAN,EACA,WAAYM,EAAI,aAAc,EAC9B,OAAQA,EAAI,OACZ,MAAOmI,GAASzI,EAAMyI,EACtB,YAAA8L,CACZ,CAAS,EAEL,OAAOD,CACX,CACA,SAASE,GAAYC,EAAS,CAC1B,MAAMhL,EAAS,CAAA,EACf,UAAWiL,KAAQD,EAAQ,CACvB,KAAM,CAAE,MAAAhM,EAAQ,IAAAzI,EAAM,YAAAuU,CAAW,EAAMG,EACvC,GAAI,CAACjM,GAAS,CAACuL,GAAiB,SAAShU,CAAG,EACxC,SAEJ,MAAMxE,EAASiO,EAAOhB,CAAK,IAAMgB,EAAOhB,CAAK,EAAI,CAC7C,MAAO,EACP,OAAQ,EACR,OAAQ,EACR,KAAM,CAClB,GACQjN,EAAO,QACPA,EAAO,QAAU+Y,CACpB,CACD,OAAO9K,CACX,CACC,SAASkL,GAAcF,EAASG,EAAQ,CACrC,MAAMnL,EAAS+K,GAAYC,CAAO,EAC5B,CAAE,aAAAI,EAAe,cAAAC,CAAgB,EAAGF,EAC1C,IAAI5xB,EAAGmF,EAAM4sB,EACb,IAAI/xB,EAAI,EAAGmF,EAAOssB,EAAQ,OAAQzxB,EAAImF,EAAM,EAAEnF,EAAE,CAC5C+xB,EAASN,EAAQzxB,CAAC,EAClB,KAAM,CAAE,SAAAgyB,CAAQ,EAAMD,EAAO,IACvBtM,EAAQgB,EAAOsL,EAAO,KAAK,EAC3BtO,EAASgC,GAASsM,EAAO,YAActM,EAAM,OAC/CsM,EAAO,YACPA,EAAO,MAAQtO,EAASA,EAASoO,EAAeG,GAAYJ,EAAO,eACnEG,EAAO,OAASD,IAEhBC,EAAO,MAAQF,EACfE,EAAO,OAAStO,EAASA,EAASqO,EAAgBE,GAAYJ,EAAO,gBAE5E,CACD,OAAOnL,CACX,CACA,SAASwL,GAAiBZ,EAAO,CAC7B,MAAMC,EAAcF,GAAUC,CAAK,EAC7BW,EAAWb,GAAaG,EAAY,OAAQI,GAAOA,EAAK,IAAI,QAAQ,EAAG,EAAI,EAC3E1kB,EAAOmkB,GAAaF,GAAiBK,EAAa,MAAM,EAAG,EAAI,EAC/DrkB,EAAQkkB,GAAaF,GAAiBK,EAAa,OAAO,CAAC,EAC3Dld,EAAM+c,GAAaF,GAAiBK,EAAa,KAAK,EAAG,EAAI,EAC7Djd,EAAS8c,GAAaF,GAAiBK,EAAa,QAAQ,CAAC,EAC7DY,EAAmBhB,GAA4BI,EAAa,GAAG,EAC/Da,EAAiBjB,GAA4BI,EAAa,GAAG,EACnE,MAAO,CACH,SAAAU,EACA,WAAYhlB,EAAK,OAAOoH,CAAG,EAC3B,eAAgBnH,EAAM,OAAOklB,CAAc,EAAE,OAAO9d,CAAM,EAAE,OAAO6d,CAAgB,EACnF,UAAWjB,GAAiBK,EAAa,WAAW,EACpD,SAAUtkB,EAAK,OAAOC,CAAK,EAAE,OAAOklB,CAAc,EAClD,WAAY/d,EAAI,OAAOC,CAAM,EAAE,OAAO6d,CAAgB,CAC9D,CACA,CACA,SAASE,GAAeC,EAAYC,EAAWlzB,EAAGT,EAAG,CACjD,OAAO,KAAK,IAAI0zB,EAAWjzB,CAAC,EAAGkzB,EAAUlzB,CAAC,CAAC,EAAI,KAAK,IAAIizB,EAAW1zB,CAAC,EAAG2zB,EAAU3zB,CAAC,CAAC,CACvF,CACA,SAAS4zB,GAAiBF,EAAYG,EAAY,CAC9CH,EAAW,IAAM,KAAK,IAAIA,EAAW,IAAKG,EAAW,GAAG,EACxDH,EAAW,KAAO,KAAK,IAAIA,EAAW,KAAMG,EAAW,IAAI,EAC3DH,EAAW,OAAS,KAAK,IAAIA,EAAW,OAAQG,EAAW,MAAM,EACjEH,EAAW,MAAQ,KAAK,IAAIA,EAAW,MAAOG,EAAW,KAAK,CAClE,CACA,SAASC,GAAWH,EAAWV,EAAQG,EAAQtL,EAAQ,CACnD,KAAM,CAAE,IAAAzJ,EAAM,IAAAM,CAAM,EAAGyU,EACjBM,EAAaC,EAAU,WAC7B,GAAI,CAACpuB,EAAS8Y,CAAG,EAAG,CACZ+U,EAAO,OACPO,EAAUtV,CAAG,GAAK+U,EAAO,MAE7B,MAAMtM,EAAQgB,EAAOsL,EAAO,KAAK,GAAK,CAClC,KAAM,EACN,MAAO,CACnB,EACQtM,EAAM,KAAO,KAAK,IAAIA,EAAM,KAAMsM,EAAO,WAAazU,EAAI,OAASA,EAAI,KAAK,EAC5EyU,EAAO,KAAOtM,EAAM,KAAOA,EAAM,MACjC6M,EAAUtV,CAAG,GAAK+U,EAAO,IAC5B,CACGzU,EAAI,YACJiV,GAAiBF,EAAY/U,EAAI,WAAY,CAAA,EAEjD,MAAMoV,EAAW,KAAK,IAAI,EAAGd,EAAO,WAAaQ,GAAeC,EAAYC,EAAW,OAAQ,OAAO,CAAC,EACjGK,EAAY,KAAK,IAAI,EAAGf,EAAO,YAAcQ,GAAeC,EAAYC,EAAW,MAAO,QAAQ,CAAC,EACnGM,EAAeF,IAAaJ,EAAU,EACtCO,EAAgBF,IAAcL,EAAU,EAC9C,OAAAA,EAAU,EAAII,EACdJ,EAAU,EAAIK,EACPZ,EAAO,WAAa,CACvB,KAAMa,EACN,MAAOC,CACf,EAAQ,CACA,KAAMA,EACN,MAAOD,CACf,CACA,CACA,SAASE,GAAiBR,EAAW,CACjC,MAAMD,EAAaC,EAAU,WAC7B,SAASS,EAAU/V,EAAK,CACpB,MAAM3G,EAAS,KAAK,IAAIgc,EAAWrV,CAAG,EAAIsV,EAAUtV,CAAG,EAAG,CAAC,EAC3D,OAAAsV,EAAUtV,CAAG,GAAK3G,EACXA,CACV,CACDic,EAAU,GAAKS,EAAU,KAAK,EAC9BT,EAAU,GAAKS,EAAU,MAAM,EAC/BA,EAAU,OAAO,EACjBA,EAAU,QAAQ,CACtB,CACA,SAASC,GAAW/F,EAAYqF,EAAW,CACvC,MAAMD,EAAaC,EAAU,WAC7B,SAASW,EAAmBrW,EAAW,CACnC,MAAMtJ,EAAS,CACX,KAAM,EACN,IAAK,EACL,MAAO,EACP,OAAQ,CACpB,EACQ,OAAAsJ,EAAU,QAASI,GAAM,CACrB1J,EAAO0J,CAAG,EAAI,KAAK,IAAIsV,EAAUtV,CAAG,EAAGqV,EAAWrV,CAAG,CAAC,CAClE,CAAS,EACM1J,CACV,CACD,OAAoB2f,EAAbhG,EAAgC,CACnC,OACA,OACH,EAAuB,CACpB,MACA,QACR,CAHK,CAIL,CACA,SAASiG,GAAS7B,EAAOiB,EAAWV,EAAQnL,EAAQ,CAChD,MAAM0M,EAAa,CAAA,EACnB,IAAInzB,EAAGmF,EAAM4sB,EAAQzU,EAAK8V,EAAOjlB,EACjC,IAAInO,EAAI,EAAGmF,EAAOksB,EAAM,OAAQ+B,EAAQ,EAAGpzB,EAAImF,EAAM,EAAEnF,EAAE,CACrD+xB,EAASV,EAAMrxB,CAAC,EAChBsd,EAAMyU,EAAO,IACbzU,EAAI,OAAOyU,EAAO,OAASO,EAAU,EAAGP,EAAO,QAAUO,EAAU,EAAGU,GAAWjB,EAAO,WAAYO,CAAS,CAAC,EAC9G,KAAM,CAAE,KAAAe,EAAO,MAAAC,GAAWb,GAAWH,EAAWV,EAAQG,EAAQtL,CAAM,EACtE2M,GAASC,GAAQF,EAAW,OAC5BhlB,EAAUA,GAAWmlB,EAChBhW,EAAI,UACL6V,EAAW,KAAKpB,CAAM,CAE7B,CACD,OAAOqB,GAASF,GAASC,EAAYb,EAAWV,EAAQnL,CAAM,GAAKtY,CACvE,CACA,SAASolB,GAAWjW,EAAKtQ,EAAMoH,EAAKlC,EAAO2L,EAAQ,CAC/CP,EAAI,IAAMlJ,EACVkJ,EAAI,KAAOtQ,EACXsQ,EAAI,MAAQtQ,EAAOkF,EACnBoL,EAAI,OAASlJ,EAAMyJ,EACnBP,EAAI,MAAQpL,EACZoL,EAAI,OAASO,CACjB,CACA,SAAS2V,GAAWnC,EAAOiB,EAAWV,EAAQnL,EAAQ,CAClD,MAAMgN,EAAc7B,EAAO,QAC3B,GAAI,CAAE,EAAA9pB,EAAI,EAAAC,CAAI,EAAGuqB,EACjB,UAAWP,KAAUV,EAAM,CACvB,MAAM/T,EAAMyU,EAAO,IACbtM,EAAQgB,EAAOsL,EAAO,KAAK,GAAK,CAClC,MAAO,EACP,OAAQ,EACR,OAAQ,CACpB,EACc1uB,EAAS0uB,EAAO,YAActM,EAAM,QAAU,EACpD,GAAIsM,EAAO,WAAY,CACnB,MAAM7f,EAAQogB,EAAU,EAAIjvB,EACtBwa,EAAS4H,EAAM,MAAQnI,EAAI,OAC7BzW,GAAQ4e,EAAM,KAAK,IACnB1d,EAAI0d,EAAM,OAEVnI,EAAI,SACJiW,GAAWjW,EAAKmW,EAAY,KAAM1rB,EAAG6pB,EAAO,WAAa6B,EAAY,MAAQA,EAAY,KAAM5V,CAAM,EAErG0V,GAAWjW,EAAKgV,EAAU,KAAO7M,EAAM,OAAQ1d,EAAGmK,EAAO2L,CAAM,EAEnE4H,EAAM,MAAQ1d,EACd0d,EAAM,QAAUvT,EAChBnK,EAAIuV,EAAI,MACpB,KAAe,CACH,MAAMO,EAASyU,EAAU,EAAIjvB,EACvB6O,EAAQuT,EAAM,MAAQnI,EAAI,MAC5BzW,GAAQ4e,EAAM,KAAK,IACnB3d,EAAI2d,EAAM,OAEVnI,EAAI,SACJiW,GAAWjW,EAAKxV,EAAG2rB,EAAY,IAAKvhB,EAAO0f,EAAO,YAAc6B,EAAY,OAASA,EAAY,GAAG,EAEpGF,GAAWjW,EAAKxV,EAAGwqB,EAAU,IAAM7M,EAAM,OAAQvT,EAAO2L,CAAM,EAElE4H,EAAM,MAAQ3d,EACd2d,EAAM,QAAU5H,EAChB/V,EAAIwV,EAAI,KACX,CACJ,CACDgV,EAAU,EAAIxqB,EACdwqB,EAAU,EAAIvqB,CAClB,CACA,IAAI0pB,EAAU,CACb,OAAQzf,EAAOhL,EAAM,CACTgL,EAAM,QACPA,EAAM,MAAQ,IAElBhL,EAAK,SAAWA,EAAK,UAAY,GACjCA,EAAK,SAAWA,EAAK,UAAY,MACjCA,EAAK,OAASA,EAAK,QAAU,EAC7BA,EAAK,QAAUA,EAAK,SAAW,UAAW,CACtC,MAAO,CACH,CACI,EAAG,EACH,KAAMsrB,EAAW,CACbtrB,EAAK,KAAKsrB,CAAS,CACtB,CACJ,CACjB,CACA,EACQtgB,EAAM,MAAM,KAAKhL,CAAI,CACxB,EACJ,UAAWgL,EAAO0hB,EAAY,CACvB,MAAM5oB,EAAQkH,EAAM,MAAQA,EAAM,MAAM,QAAQ0hB,CAAU,EAAI,GAC1D5oB,IAAU,IACVkH,EAAM,MAAM,OAAOlH,EAAO,CAAC,CAElC,EACJ,UAAWkH,EAAOhL,EAAMpB,EAAS,CAC1BoB,EAAK,SAAWpB,EAAQ,SACxBoB,EAAK,SAAWpB,EAAQ,SACxBoB,EAAK,OAASpB,EAAQ,MACzB,EACJ,OAAQoM,EAAOE,EAAO2L,EAAQ8V,EAAY,CACnC,GAAI,CAAC3hB,EACD,OAEJ,MAAM4hB,EAAUje,EAAU3D,EAAM,QAAQ,OAAO,OAAO,EAChD6hB,EAAiB,KAAK,IAAI3hB,EAAQ0hB,EAAQ,MAAO,CAAC,EAClDE,EAAkB,KAAK,IAAIjW,EAAS+V,EAAQ,OAAQ,CAAC,EACrDvC,EAAQY,GAAiBjgB,EAAM,KAAK,EACpC+hB,EAAgB1C,EAAM,SACtB2C,EAAkB3C,EAAM,WAC9BxsB,EAAKmN,EAAM,MAAQsL,GAAM,CACjB,OAAOA,EAAI,cAAiB,YAC5BA,EAAI,aAAY,CAEhC,CAAS,EACD,MAAM2W,EAA0BF,EAAc,OAAO,CAACG,EAAOxC,IAAOA,EAAK,IAAI,SAAWA,EAAK,IAAI,QAAQ,UAAY,GAAQwC,EAAQA,EAAQ,EAAG,CAAC,GAAK,EAChJtC,EAAS,OAAO,OAAO,CACzB,WAAY1f,EACZ,YAAa2L,EACb,QAAA+V,EACA,eAAAC,EACA,gBAAAC,EACA,aAAcD,EAAiB,EAAII,EACnC,cAAeH,EAAkB,CAC7C,CAAS,EACKzB,EAAa,OAAO,OAAO,CAAE,EAAEuB,CAAO,EAC5CrB,GAAiBF,EAAY1c,EAAUge,CAAU,CAAC,EAClD,MAAMrB,EAAY,OAAO,OAAO,CAC5B,WAAAD,EACA,EAAGwB,EACH,EAAGC,EACH,EAAGF,EAAQ,KACX,EAAGA,EAAQ,GACd,EAAEA,CAAO,EACJnN,EAASkL,GAAcoC,EAAc,OAAOC,CAAe,EAAGpC,CAAM,EAC1EsB,GAAS7B,EAAM,SAAUiB,EAAWV,EAAQnL,CAAM,EAClDyM,GAASa,EAAezB,EAAWV,EAAQnL,CAAM,EAC7CyM,GAASc,EAAiB1B,EAAWV,EAAQnL,CAAM,GACnDyM,GAASa,EAAezB,EAAWV,EAAQnL,CAAM,EAErDqM,GAAiBR,CAAS,EAC1BkB,GAAWnC,EAAM,WAAYiB,EAAWV,EAAQnL,CAAM,EACtD6L,EAAU,GAAKA,EAAU,EACzBA,EAAU,GAAKA,EAAU,EACzBkB,GAAWnC,EAAM,eAAgBiB,EAAWV,EAAQnL,CAAM,EAC1DzU,EAAM,UAAY,CACd,KAAMsgB,EAAU,KAChB,IAAKA,EAAU,IACf,MAAOA,EAAU,KAAOA,EAAU,EAClC,OAAQA,EAAU,IAAMA,EAAU,EAClC,OAAQA,EAAU,EAClB,MAAOA,EAAU,CAC7B,EACQztB,EAAKwsB,EAAM,UAAYU,GAAS,CAC5B,MAAMzU,EAAMyU,EAAO,IACnB,OAAO,OAAOzU,EAAKtL,EAAM,SAAS,EAClCsL,EAAI,OAAOgV,EAAU,EAAGA,EAAU,EAAG,CACjC,KAAM,EACN,IAAK,EACL,MAAO,EACP,OAAQ,CACxB,CAAa,CACb,CAAS,CACJ,CACL,EAEA,MAAM6B,EAAa,CAClB,eAAe7hB,EAAQmM,EAAa,CAAE,CACtC,eAAe5N,EAAS,CACjB,MAAO,EACV,CACJ,iBAAiBmB,EAAO9O,EAAMwI,EAAU,CAAE,CAC1C,oBAAoBsG,EAAO9O,EAAMwI,EAAU,CAAE,CAC7C,qBAAsB,CACf,MAAO,EACV,CACJ,eAAe+Q,EAASvK,EAAO2L,EAAQY,EAAa,CAC7C,OAAAvM,EAAQ,KAAK,IAAI,EAAGA,GAASuK,EAAQ,KAAK,EAC1CoB,EAASA,GAAUpB,EAAQ,OACpB,CACH,MAAAvK,EACA,OAAQ,KAAK,IAAI,EAAGuM,EAAc,KAAK,MAAMvM,EAAQuM,CAAW,EAAIZ,CAAM,CACtF,CACK,CACJ,WAAWvL,EAAQ,CACZ,MAAO,EACV,CACJ,aAAa8R,EAAQ,CACjB,CACL,CAEA,MAAMgQ,WAAsBD,EAAa,CACrC,eAAentB,EAAM,CACjB,OAAOA,GAAQA,EAAK,YAAcA,EAAK,WAAW,IAAI,GAAK,IAC9D,CACD,aAAaod,EAAQ,CACjBA,EAAO,QAAQ,UAAY,EAC9B,CACL,CAEA,MAAMiQ,GAAc,WACbC,GAAc,CACjB,WAAY,YACZ,UAAW,YACX,SAAU,UACV,aAAc,aACd,YAAa,YACb,YAAa,YACb,UAAW,UACX,aAAc,WACd,WAAY,UAChB,EACMC,GAAiBvwB,GAAQA,IAAU,MAAQA,IAAU,GAC1D,SAASwwB,GAAWliB,EAAQmM,EAAa,CACtC,MAAM1L,EAAQT,EAAO,MACfmiB,EAAeniB,EAAO,aAAa,QAAQ,EAC3CoiB,EAAcpiB,EAAO,aAAa,OAAO,EAc/C,GAbAA,EAAO+hB,EAAW,EAAI,CAClB,QAAS,CACL,OAAQI,EACR,MAAOC,EACP,MAAO,CACH,QAAS3hB,EAAM,QACf,OAAQA,EAAM,OACd,MAAOA,EAAM,KAChB,CACJ,CACT,EACIA,EAAM,QAAUA,EAAM,SAAW,QACjCA,EAAM,UAAYA,EAAM,WAAa,aACjCwhB,GAAcG,CAAW,EAAG,CAC5B,MAAMC,EAAevV,GAAa9M,EAAQ,OAAO,EAC7CqiB,IAAiB,SACjBriB,EAAO,MAAQqiB,EAEtB,CACD,GAAIJ,GAAcE,CAAY,EAC1B,GAAIniB,EAAO,MAAM,SAAW,GACxBA,EAAO,OAASA,EAAO,OAASmM,GAAe,OAC5C,CACH,MAAMmW,EAAgBxV,GAAa9M,EAAQ,QAAQ,EAC/CsiB,IAAkB,SAClBtiB,EAAO,OAASsiB,EAEvB,CAEL,OAAOtiB,CACX,CACA,MAAMuiB,GAAuB3V,GAA+B,CACxD,QAAS,EACb,EAAI,GACJ,SAAS4V,GAAYvkB,EAAMrN,EAAMwI,EAAU,CACnC6E,GACAA,EAAK,iBAAiBrN,EAAMwI,EAAUmpB,EAAoB,CAElE,CACA,SAASE,GAAe/iB,EAAO9O,EAAMwI,EAAU,CACvCsG,GAASA,EAAM,QACfA,EAAM,OAAO,oBAAoB9O,EAAMwI,EAAUmpB,EAAoB,CAE7E,CACA,SAASG,GAAgBxX,EAAOxL,EAAO,CACnC,MAAM9O,EAAOoxB,GAAY9W,EAAM,IAAI,GAAKA,EAAM,KACxC,CAAE,EAAA1V,EAAI,EAAAC,CAAC,EAAMwV,GAAoBC,EAAOxL,CAAK,EACnD,MAAO,CACH,KAAA9O,EACA,MAAA8O,EACA,OAAQwL,EACR,EAAG1V,IAAM,OAAYA,EAAI,KACzB,EAAGC,IAAM,OAAYA,EAAI,IACjC,CACA,CACA,SAASktB,GAAiBC,EAAU5iB,EAAQ,CACxC,UAAW/B,KAAQ2kB,EACf,GAAI3kB,IAAS+B,GAAU/B,EAAK,SAAS+B,CAAM,EACvC,MAAO,EAGnB,CACA,SAAS6iB,GAAqBnjB,EAAO9O,EAAMwI,EAAU,CACjD,MAAM4G,EAASN,EAAM,OACfojB,EAAW,IAAI,iBAAkBC,GAAU,CAC7C,IAAIC,EAAU,GACd,UAAW7J,KAAS4J,EAChBC,EAAUA,GAAWL,GAAiBxJ,EAAM,WAAYnZ,CAAM,EAC9DgjB,EAAUA,GAAW,CAACL,GAAiBxJ,EAAM,aAAcnZ,CAAM,EAEjEgjB,GACA5pB,GAEZ,CAAK,EACD,OAAA0pB,EAAS,QAAQ,SAAU,CACvB,UAAW,GACX,QAAS,EACjB,CAAK,EACMA,CACX,CACA,SAASG,GAAqBvjB,EAAO9O,EAAMwI,EAAU,CACjD,MAAM4G,EAASN,EAAM,OACfojB,EAAW,IAAI,iBAAkBC,GAAU,CAC7C,IAAIC,EAAU,GACd,UAAW7J,KAAS4J,EAChBC,EAAUA,GAAWL,GAAiBxJ,EAAM,aAAcnZ,CAAM,EAChEgjB,EAAUA,GAAW,CAACL,GAAiBxJ,EAAM,WAAYnZ,CAAM,EAE/DgjB,GACA5pB,GAEZ,CAAK,EACD,OAAA0pB,EAAS,QAAQ,SAAU,CACvB,UAAW,GACX,QAAS,EACjB,CAAK,EACMA,CACX,CACA,MAAMI,GAAqB,IAAI,IAC/B,IAAIC,GAAsB,EAC1B,SAASC,IAAiB,CACtB,MAAMC,EAAM,OAAO,iBACfA,IAAQF,KAGZA,GAAsBE,EACtBH,GAAmB,QAAQ,CAACI,EAAQ5jB,IAAQ,CACpCA,EAAM,0BAA4B2jB,GAClCC,GAEZ,CAAK,EACL,CACA,SAASC,GAA8B7jB,EAAO4jB,EAAQ,CAC7CJ,GAAmB,MACpB,OAAO,iBAAiB,SAAUE,EAAc,EAEpDF,GAAmB,IAAIxjB,EAAO4jB,CAAM,CACxC,CACA,SAASE,GAAgC9jB,EAAO,CAC5CwjB,GAAmB,OAAOxjB,CAAK,EAC1BwjB,GAAmB,MACpB,OAAO,oBAAoB,SAAUE,EAAc,CAE3D,CACA,SAASK,GAAqB/jB,EAAO9O,EAAMwI,EAAU,CACjD,MAAM4G,EAASN,EAAM,OACfiM,EAAY3L,GAAU4J,GAAe5J,CAAM,EACjD,GAAI,CAAC2L,EACD,OAEJ,MAAM2X,EAAStpB,GAAU,CAAC4F,EAAO2L,IAAS,CACtC,MAAM/d,EAAIme,EAAU,YACpBvS,EAASwG,EAAO2L,CAAM,EAClB/d,EAAIme,EAAU,aACdvS,GAEP,EAAE,MAAM,EACH0pB,EAAW,IAAI,eAAgBC,GAAU,CAC3C,MAAM5J,EAAQ4J,EAAQ,CAAC,EACjBnjB,EAAQuZ,EAAM,YAAY,MAC1B5N,EAAS4N,EAAM,YAAY,OAC7BvZ,IAAU,GAAK2L,IAAW,GAG9B+X,EAAO1jB,EAAO2L,CAAM,CAC5B,CAAK,EACD,OAAAuX,EAAS,QAAQnX,CAAS,EAC1B4X,GAA8B7jB,EAAO4jB,CAAM,EACpCR,CACX,CACA,SAASY,GAAgBhkB,EAAO9O,EAAMkyB,EAAU,CACxCA,GACAA,EAAS,WAAU,EAEnBlyB,IAAS,UACT4yB,GAAgC9jB,CAAK,CAE7C,CACA,SAASikB,GAAqBjkB,EAAO9O,EAAMwI,EAAU,CACjD,MAAM4G,EAASN,EAAM,OACfuF,EAAQjL,GAAWkR,GAAQ,CACzBxL,EAAM,MAAQ,MACdtG,EAASspB,GAAgBxX,EAAOxL,CAAK,CAAC,CAE7C,EAAEA,CAAK,EACR,OAAA8iB,GAAYxiB,EAAQpP,EAAMqU,CAAK,EACxBA,CACX,CACC,MAAM2e,WAAoB/B,EAAa,CACvC,eAAe7hB,EAAQmM,EAAa,CAC7B,MAAM5N,EAAUyB,GAAUA,EAAO,YAAcA,EAAO,WAAW,IAAI,EACrE,OAAIzB,GAAWA,EAAQ,SAAWyB,GAC9BkiB,GAAWliB,EAAQmM,CAAW,EACvB5N,GAEJ,IACV,CACJ,eAAeA,EAAS,CACjB,MAAMyB,EAASzB,EAAQ,OACvB,GAAI,CAACyB,EAAO+hB,EAAW,EACnB,MAAO,GAEX,MAAM8B,EAAU7jB,EAAO+hB,EAAW,EAAE,QACpC,CACI,SACA,OACZ,EAAU,QAAS7e,GAAO,CACd,MAAMxR,EAAQmyB,EAAQ3gB,CAAI,EACtBzR,EAAcC,CAAK,EACnBsO,EAAO,gBAAgBkD,CAAI,EAE3BlD,EAAO,aAAakD,EAAMxR,CAAK,CAE/C,CAAS,EACD,MAAM+O,EAAQojB,EAAQ,OAAS,GAC/B,cAAO,KAAKpjB,CAAK,EAAE,QAASrN,GAAM,CAC9B4M,EAAO,MAAM5M,CAAG,EAAIqN,EAAMrN,CAAG,CACzC,CAAS,EACD4M,EAAO,MAAQA,EAAO,MACtB,OAAOA,EAAO+hB,EAAW,EAClB,EACV,CACJ,iBAAiBriB,EAAO9O,EAAMwI,EAAU,CACjC,KAAK,oBAAoBsG,EAAO9O,CAAI,EACpC,MAAMkzB,EAAUpkB,EAAM,WAAaA,EAAM,SAAW,CAAA,GAM9Cyd,EALW,CACb,OAAQ0F,GACR,OAAQI,GACR,OAAQQ,EACpB,EACiC7yB,CAAI,GAAK+yB,GAClCG,EAAQlzB,CAAI,EAAIusB,EAAQzd,EAAO9O,EAAMwI,CAAQ,CAChD,CACJ,oBAAoBsG,EAAO9O,EAAM,CAC1B,MAAMkzB,EAAUpkB,EAAM,WAAaA,EAAM,SAAW,CAAA,GAC9CuF,EAAQ6e,EAAQlzB,CAAI,EAC1B,GAAI,CAACqU,EACD,QAEa,CACb,OAAQye,GACR,OAAQA,GACR,OAAQA,EACpB,EACiC9yB,CAAI,GAAK6xB,IAC1B/iB,EAAO9O,EAAMqU,CAAK,EAC1B6e,EAAQlzB,CAAI,EAAI,MACnB,CACD,qBAAsB,CAClB,OAAO,OAAO,gBACjB,CACJ,eAAeoP,EAAQJ,EAAO2L,EAAQY,EAAa,CAC5C,OAAOH,GAAehM,EAAQJ,EAAO2L,EAAQY,CAAW,CAC3D,CACJ,WAAWnM,EAAQ,CACZ,MAAM2L,EAAY3L,GAAU4J,GAAe5J,CAAM,EACjD,MAAO,CAAC,EAAE2L,GAAaA,EAAU,YACpC,CACL,CAEA,SAASoY,GAAgB/jB,EAAQ,CAC7B,MAAI,CAAC2J,GAAe,GAAM,OAAO,gBAAoB,KAAe3J,aAAkB,gBAC3E8hB,GAEJ8B,EACX,CAEA,MAAMI,EAAQ,CACV,OAAO,SAAW,CAAA,EAClB,OAAO,cAAgB,OACvB,EACA,EACA,OAAS,GACT,QACA,YACA,gBAAgBtG,EAAkB,CAC9B,KAAM,CAAE,EAAAloB,EAAI,EAAAC,GAAO,KAAK,SAAS,CAC7B,IACA,GACH,EAAEioB,CAAgB,EACnB,MAAO,CACH,EAAAloB,EACA,EAAAC,CACZ,CACK,CACD,UAAW,CACP,OAAOU,GAAS,KAAK,CAAC,GAAKA,GAAS,KAAK,CAAC,CAC7C,CACD,SAAS4M,EAAOkhB,EAAO,CACnB,MAAM1T,EAAQ,KAAK,YACnB,GAAI,CAAC0T,GAAS,CAAC1T,EAEX,OAAO,KAEX,MAAM3jB,EAAM,CAAA,EACZ,OAAAmW,EAAM,QAASG,GAAO,CAClBtW,EAAIsW,CAAI,EAAIqN,EAAMrN,CAAI,GAAKqN,EAAMrN,CAAI,EAAE,OAAQ,EAAGqN,EAAMrN,CAAI,EAAE,IAAM,KAAKA,CAAI,CACzF,CAAS,EACMtW,CACV,CACL,CAEA,SAASs3B,GAASvR,EAAOxV,EAAO,CAC5B,MAAMgnB,EAAWxR,EAAM,QAAQ,MACzByR,EAAqBC,GAAkB1R,CAAK,EAC5C2R,EAAa,KAAK,IAAIH,EAAS,eAAiBC,EAAoBA,CAAkB,EACtFG,EAAeJ,EAAS,MAAM,QAAUK,GAAgBrnB,CAAK,EAAI,GACjEsnB,EAAkBF,EAAa,OAC/BG,EAAQH,EAAa,CAAC,EACtB1rB,EAAO0rB,EAAaE,EAAkB,CAAC,EACvCE,EAAW,CAAA,EACjB,GAAIF,EAAkBH,EAClB,OAAAM,GAAWznB,EAAOwnB,EAAUJ,EAAcE,EAAkBH,CAAU,EAC/DK,EAEX,MAAME,EAAUC,GAAiBP,EAAcpnB,EAAOmnB,CAAU,EAChE,GAAIG,EAAkB,EAAG,CACrB,IAAI/2B,EAAGmF,EACP,MAAMkyB,EAAkBN,EAAkB,EAAI,KAAK,OAAO5rB,EAAO6rB,IAAUD,EAAkB,EAAE,EAAI,KAEnG,IADAO,GAAK7nB,EAAOwnB,EAAUE,EAASpzB,EAAcszB,CAAe,EAAI,EAAIL,EAAQK,EAAiBL,CAAK,EAC9Fh3B,EAAI,EAAGmF,EAAO4xB,EAAkB,EAAG/2B,EAAImF,EAAMnF,IAC7Cs3B,GAAK7nB,EAAOwnB,EAAUE,EAASN,EAAa72B,CAAC,EAAG62B,EAAa72B,EAAI,CAAC,CAAC,EAEvE,OAAAs3B,GAAK7nB,EAAOwnB,EAAUE,EAAShsB,EAAMpH,EAAcszB,CAAe,EAAI5nB,EAAM,OAAStE,EAAOksB,CAAe,EACpGJ,CACV,CACD,OAAAK,GAAK7nB,EAAOwnB,EAAUE,CAAO,EACtBF,CACX,CACA,SAASN,GAAkB1R,EAAO,CAC9B,MAAMsS,EAAStS,EAAM,QAAQ,OACvBuS,EAAavS,EAAM,YACnBwS,EAAWxS,EAAM,QAAUuS,GAAcD,EAAS,EAAI,GACtDG,EAAWzS,EAAM,WAAauS,EACpC,OAAO,KAAK,MAAM,KAAK,IAAIC,EAAUC,CAAQ,CAAC,CAClD,CACC,SAASN,GAAiBP,EAAcpnB,EAAOmnB,EAAY,CACxD,MAAMe,EAAmBC,GAAef,CAAY,EAC9CM,EAAU1nB,EAAM,OAASmnB,EAC/B,GAAI,CAACe,EACD,OAAO,KAAK,IAAIR,EAAS,CAAC,EAE9B,MAAMU,EAAUvvB,GAAWqvB,CAAgB,EAC3C,QAAQ33B,EAAI,EAAGmF,EAAO0yB,EAAQ,OAAS,EAAG73B,EAAImF,EAAMnF,IAAI,CACpD,MAAMyjB,EAASoU,EAAQ73B,CAAC,EACxB,GAAIyjB,EAAS0T,EACT,OAAO1T,CAEd,CACD,OAAO,KAAK,IAAI0T,EAAS,CAAC,CAC9B,CACC,SAASL,GAAgBrnB,EAAO,CAC7B,MAAMlH,EAAS,CAAA,EACf,IAAIvI,EAAGmF,EACP,IAAInF,EAAI,EAAGmF,EAAOsK,EAAM,OAAQzP,EAAImF,EAAMnF,IAClCyP,EAAMzP,CAAC,EAAE,OACTuI,EAAO,KAAKvI,CAAC,EAGrB,OAAOuI,CACX,CACC,SAAS2uB,GAAWznB,EAAOwnB,EAAUJ,EAAcM,EAAS,CACzD,IAAI3pB,EAAQ,EACRuM,EAAO8c,EAAa,CAAC,EACrB72B,EAEJ,IADAm3B,EAAU,KAAK,KAAKA,CAAO,EACvBn3B,EAAI,EAAGA,EAAIyP,EAAM,OAAQzP,IACrBA,IAAM+Z,IACNkd,EAAS,KAAKxnB,EAAMzP,CAAC,CAAC,EACtBwN,IACAuM,EAAO8c,EAAarpB,EAAQ2pB,CAAO,EAG/C,CACC,SAASG,GAAK7nB,EAAOwnB,EAAUE,EAASW,EAAYC,EAAU,CAC3D,MAAM9tB,EAAQ3F,EAAewzB,EAAY,CAAC,EACpC5tB,EAAM,KAAK,IAAI5F,EAAeyzB,EAAUtoB,EAAM,MAAM,EAAGA,EAAM,MAAM,EACzE,IAAIjC,EAAQ,EACRogB,EAAQ5tB,EAAG+Z,EAOf,IANAod,EAAU,KAAK,KAAKA,CAAO,EACvBY,IACAnK,EAASmK,EAAWD,EACpBX,EAAUvJ,EAAS,KAAK,MAAMA,EAASuJ,CAAO,GAElDpd,EAAO9P,EACD8P,EAAO,GACTvM,IACAuM,EAAO,KAAK,MAAM9P,EAAQuD,EAAQ2pB,CAAO,EAE7C,IAAIn3B,EAAI,KAAK,IAAIiK,EAAO,CAAC,EAAGjK,EAAIkK,EAAKlK,IAC7BA,IAAM+Z,IACNkd,EAAS,KAAKxnB,EAAMzP,CAAC,CAAC,EACtBwN,IACAuM,EAAO,KAAK,MAAM9P,EAAQuD,EAAQ2pB,CAAO,EAGrD,CACC,SAASS,GAAejf,EAAK,CAC1B,MAAM1Z,EAAM0Z,EAAI,OAChB,IAAI3Y,EAAGg4B,EACP,GAAI/4B,EAAM,EACN,MAAO,GAEX,IAAI+4B,EAAOrf,EAAI,CAAC,EAAG3Y,EAAI,EAAGA,EAAIf,EAAK,EAAEe,EACjC,GAAI2Y,EAAI3Y,CAAC,EAAI2Y,EAAI3Y,EAAI,CAAC,IAAMg4B,EACxB,MAAO,GAGf,OAAOA,CACX,CAEA,MAAMC,GAAgBprB,GAAQA,IAAU,OAAS,QAAUA,IAAU,QAAU,OAASA,EAClFqrB,GAAiB,CAACjT,EAAOqH,EAAMiL,IAASjL,IAAS,OAASA,IAAS,OAASrH,EAAMqH,CAAI,EAAIiL,EAAStS,EAAMqH,CAAI,EAAIiL,EACjHY,GAAgB,CAACC,EAAaC,IAAgB,KAAK,IAAIA,GAAiBD,EAAaA,CAAW,EACrG,SAASE,GAAO3f,EAAK4f,EAAU,CAC5B,MAAMhwB,EAAS,CAAA,EACTiwB,EAAY7f,EAAI,OAAS4f,EACzBt5B,EAAM0Z,EAAI,OAChB,IAAI3Y,EAAI,EACR,KAAMA,EAAIf,EAAKe,GAAKw4B,EAChBjwB,EAAO,KAAKoQ,EAAI,KAAK,MAAM3Y,CAAC,CAAC,CAAC,EAElC,OAAOuI,CACX,CACC,SAASkwB,GAAoBxT,EAAOna,EAAO4tB,EAAiB,CACzD,MAAM9K,EAAS3I,EAAM,MAAM,OACrB0T,EAAa,KAAK,IAAI7tB,EAAO8iB,EAAS,CAAC,EACvC3jB,EAAQgb,EAAM,YACd/a,EAAM+a,EAAM,UACZjd,EAAU,KAChB,IAAI4wB,EAAY3T,EAAM,gBAAgB0T,CAAU,EAC5CpB,EACJ,GAAI,EAAAmB,IACI9K,IAAW,EACX2J,EAAS,KAAK,IAAIqB,EAAY3uB,EAAOC,EAAM0uB,CAAS,EAC7C9tB,IAAU,EACjBysB,GAAUtS,EAAM,gBAAgB,CAAC,EAAI2T,GAAa,EAElDrB,GAAUqB,EAAY3T,EAAM,gBAAgB0T,EAAa,CAAC,GAAK,EAEnEC,GAAaD,EAAa7tB,EAAQysB,EAAS,CAACA,EACxCqB,EAAY3uB,EAAQjC,GAAW4wB,EAAY1uB,EAAMlC,IAIzD,OAAO4wB,CACX,CACC,SAASC,GAAeC,EAAQlL,EAAQ,CACrC/oB,EAAKi0B,EAAS7hB,GAAQ,CAClB,MAAMtF,EAAKsF,EAAM,GACX8hB,EAAQpnB,EAAG,OAAS,EAC1B,IAAI3R,EACJ,GAAI+4B,EAAQnL,EAAQ,CAChB,IAAI5tB,EAAI,EAAGA,EAAI+4B,EAAO,EAAE/4B,EACpB,OAAOiX,EAAM,KAAKtF,EAAG3R,CAAC,CAAC,EAE3B2R,EAAG,OAAO,EAAGonB,CAAK,CACrB,CACT,CAAK,CACL,CACC,SAASC,GAAkBpzB,EAAS,CACjC,OAAOA,EAAQ,UAAYA,EAAQ,WAAa,CACpD,CACC,SAASqzB,GAAerzB,EAASiQ,EAAU,CACxC,GAAI,CAACjQ,EAAQ,QACT,MAAO,GAEX,MAAM4L,EAAOoE,EAAOhQ,EAAQ,KAAMiQ,CAAQ,EACpC+d,EAAUje,EAAU/P,EAAQ,OAAO,EAEzC,OADc3B,EAAQ2B,EAAQ,IAAI,EAAIA,EAAQ,KAAK,OAAS,GAC7C4L,EAAK,WAAaoiB,EAAQ,MAC7C,CACA,SAASsF,GAAmBngB,EAAQkM,EAAO,CACvC,OAAOzO,GAAcuC,EAAQ,CACzB,MAAAkM,EACA,KAAM,OACd,CAAK,CACL,CACA,SAASkU,GAAkBpgB,EAAQjO,EAAOsuB,EAAM,CAC5C,OAAO5iB,GAAcuC,EAAQ,CACzB,KAAAqgB,EACA,MAAAtuB,EACA,KAAM,MACd,CAAK,CACL,CACA,SAASuuB,GAAWxsB,EAAO2iB,EAAUzqB,EAAS,CACzC,IAAI7F,EAAM0N,GAAmBC,CAAK,EACnC,OAAI9H,GAAWyqB,IAAa,SAAW,CAACzqB,GAAWyqB,IAAa,WAC5DtwB,EAAM+4B,GAAa/4B,CAAG,GAEnBA,CACX,CACA,SAASo6B,GAAUrU,EAAOsS,EAAQ/H,EAAU3iB,EAAO,CAC/C,KAAM,CAAE,IAAAuH,EAAM,KAAApH,EAAO,OAAAqH,EAAS,MAAApH,EAAQ,MAAA+E,CAAQ,EAAGiT,EAC3C,CAAE,UAAAqN,EAAY,OAAA/K,CAAS,EAAGvV,EAChC,IAAIgB,EAAW,EACX+K,EAAUwb,EAAQC,EACtB,MAAM3b,EAASxJ,EAASD,EAClBlC,EAAQjF,EAAQD,EACtB,GAAIiY,EAAM,eAAgB,CAEtB,GADAsU,EAASzsB,EAAeD,EAAOG,EAAMC,CAAK,EACtC/I,EAASsrB,CAAQ,EAAG,CACpB,MAAMiK,EAAiB,OAAO,KAAKjK,CAAQ,EAAE,CAAC,EACxCxrB,EAAQwrB,EAASiK,CAAc,EACrCD,EAASjS,EAAOkS,CAAc,EAAE,iBAAiBz1B,CAAK,EAAI6Z,EAAS0Z,CAC/E,MAAmB/H,IAAa,SACpBgK,GAAUlH,EAAU,OAASA,EAAU,KAAO,EAAIzU,EAAS0Z,EAE3DiC,EAAStB,GAAejT,EAAOuK,EAAU+H,CAAM,EAEnDxZ,EAAW9Q,EAAQD,CAC3B,KAAW,CACH,GAAI9I,EAASsrB,CAAQ,EAAG,CACpB,MAAMiK,EAAiB,OAAO,KAAKjK,CAAQ,EAAE,CAAC,EACxCxrB,EAAQwrB,EAASiK,CAAc,EACrCF,EAAShS,EAAOkS,CAAc,EAAE,iBAAiBz1B,CAAK,EAAIkO,EAAQqlB,CAC9E,MAAmB/H,IAAa,SACpB+J,GAAUjH,EAAU,KAAOA,EAAU,OAAS,EAAIpgB,EAAQqlB,EAE1DgC,EAASrB,GAAejT,EAAOuK,EAAU+H,CAAM,EAEnDiC,EAAS1sB,EAAeD,EAAOwH,EAAQD,CAAG,EAC1CpB,EAAWwc,IAAa,OAAS,CAAChoB,EAAUA,CAC/C,CACD,MAAO,CACH,OAAA+xB,EACA,OAAAC,EACA,SAAAzb,EACA,SAAA/K,CACR,CACA,CACA,MAAM0mB,WAAcpD,EAAQ,CACxB,YAAY1S,EAAI,CACZ,QACC,KAAK,GAAKA,EAAI,GACd,KAAK,KAAOA,EAAI,KAChB,KAAK,QAAU,OACf,KAAK,IAAMA,EAAI,IACf,KAAK,MAAQA,EAAI,MACjB,KAAK,IAAM,OACX,KAAK,OAAS,OACd,KAAK,KAAO,OACZ,KAAK,MAAQ,OACb,KAAK,MAAQ,OACb,KAAK,OAAS,OACf,KAAK,SAAW,CACZ,KAAM,EACN,MAAO,EACP,IAAK,EACL,OAAQ,CACpB,EACS,KAAK,SAAW,OAChB,KAAK,UAAY,OACjB,KAAK,WAAa,OAClB,KAAK,cAAgB,OACrB,KAAK,YAAc,OACnB,KAAK,aAAe,OACpB,KAAK,KAAO,OACZ,KAAK,cAAgB,OACtB,KAAK,IAAM,OACX,KAAK,IAAM,OACX,KAAK,OAAS,OACb,KAAK,MAAQ,GACb,KAAK,eAAiB,KACtB,KAAK,YAAc,KACnB,KAAK,YAAc,KACpB,KAAK,QAAU,EACf,KAAK,WAAa,EAClB,KAAK,kBAAoB,GACxB,KAAK,YAAc,OACnB,KAAK,UAAY,OAClB,KAAK,eAAiB,GACtB,KAAK,SAAW,OAChB,KAAK,SAAW,OAChB,KAAK,cAAgB,OACrB,KAAK,cAAgB,OACrB,KAAK,aAAe,EACpB,KAAK,aAAe,EACpB,KAAK,OAAS,GACd,KAAK,kBAAoB,GACzB,KAAK,SAAW,MACnB,CACJ,KAAKhe,EAAS,CACP,KAAK,QAAUA,EAAQ,WAAW,KAAK,WAAU,CAAE,EACnD,KAAK,KAAOA,EAAQ,KACpB,KAAK,SAAW,KAAK,MAAMA,EAAQ,GAAG,EACtC,KAAK,SAAW,KAAK,MAAMA,EAAQ,GAAG,EACtC,KAAK,cAAgB,KAAK,MAAMA,EAAQ,YAAY,EACpD,KAAK,cAAgB,KAAK,MAAMA,EAAQ,YAAY,CACvD,CACJ,MAAM+zB,EAAK7uB,EAAO,CACX,OAAO6uB,CACV,CACJ,eAAgB,CACT,GAAI,CAAE,SAAAC,EAAW,SAAAC,EAAW,cAAAC,EAAgB,cAAAC,CAAa,EAAM,KAC/D,OAAAH,EAAWx1B,EAAgBw1B,EAAU,OAAO,iBAAiB,EAC7DC,EAAWz1B,EAAgBy1B,EAAU,OAAO,iBAAiB,EAC7DC,EAAgB11B,EAAgB01B,EAAe,OAAO,iBAAiB,EACvEC,EAAgB31B,EAAgB21B,EAAe,OAAO,iBAAiB,EAChE,CACH,IAAK31B,EAAgBw1B,EAAUE,CAAa,EAC5C,IAAK11B,EAAgBy1B,EAAUE,CAAa,EAC5C,WAAY51B,EAAey1B,CAAQ,EACnC,WAAYz1B,EAAe01B,CAAQ,CAC/C,CACK,CACJ,UAAU7R,EAAU,CACb,GAAI,CAAE,IAAAznB,EAAM,IAAAF,EAAM,WAAAuN,EAAa,WAAAC,GAAgB,KAAK,gBAChD3F,EACJ,GAAI0F,GAAcC,EACd,MAAO,CACH,IAAAtN,EACA,IAAAF,CAChB,EAEQ,MAAM25B,EAAQ,KAAK,0BACnB,QAAQh6B,EAAI,EAAGmF,EAAO60B,EAAM,OAAQh6B,EAAImF,EAAM,EAAEnF,EAC5CkI,EAAQ8xB,EAAMh6B,CAAC,EAAE,WAAW,UAAU,KAAMgoB,CAAQ,EAC/Cpa,IACDrN,EAAM,KAAK,IAAIA,EAAK2H,EAAM,GAAG,GAE5B2F,IACDxN,EAAM,KAAK,IAAIA,EAAK6H,EAAM,GAAG,GAGrC,OAAA3H,EAAMsN,GAActN,EAAMF,EAAMA,EAAME,EACtCF,EAAMuN,GAAcrN,EAAMF,EAAME,EAAMF,EAC/B,CACH,IAAK+D,EAAgB7D,EAAK6D,EAAgB/D,EAAKE,CAAG,CAAC,EACnD,IAAK6D,EAAgB/D,EAAK+D,EAAgB7D,EAAKF,CAAG,CAAC,CAC/D,CACK,CACJ,YAAa,CACN,MAAO,CACH,KAAM,KAAK,aAAe,EAC1B,IAAK,KAAK,YAAc,EACxB,MAAO,KAAK,cAAgB,EAC5B,OAAQ,KAAK,eAAiB,CAC1C,CACK,CACJ,UAAW,CACJ,OAAO,KAAK,KACf,CACJ,WAAY,CACL,MAAMqR,EAAO,KAAK,MAAM,KACxB,OAAO,KAAK,QAAQ,SAAW,KAAK,aAAY,EAAKA,EAAK,QAAUA,EAAK,UAAYA,EAAK,QAAU,CAAA,CACvG,CACJ,cAAc4gB,EAAY,KAAK,MAAM,UAAW,CAEzC,OADc,KAAK,cAAgB,KAAK,YAAc,KAAK,mBAAmBA,CAAS,EAE1F,CACD,cAAe,CACX,KAAK,OAAS,GACd,KAAK,kBAAoB,EAC5B,CACD,cAAe,CACX7tB,EAAS,KAAK,QAAQ,aAAc,CAChC,IACZ,CAAS,CACJ,CACJ,OAAOsZ,EAAUC,EAAWU,EAAS,CAC9B,KAAM,CAAE,YAAAtI,EAAc,MAAAD,EAAQ,MAAOsgB,CAAW,EAAG,KAAK,QAClDwD,EAAaxD,EAAS,WAC5B,KAAK,aAAY,EACjB,KAAK,SAAW1Y,EAChB,KAAK,UAAYC,EACjB,KAAK,SAAWU,EAAU,OAAO,OAAO,CACpC,KAAM,EACN,MAAO,EACP,IAAK,EACL,OAAQ,CACX,EAAEA,CAAO,EACV,KAAK,MAAQ,KACb,KAAK,YAAc,KACnB,KAAK,eAAiB,KACtB,KAAK,YAAc,KACnB,KAAK,oBAAmB,EACxB,KAAK,cAAa,EAClB,KAAK,mBAAkB,EACvB,KAAK,WAAa,KAAK,aAAc,EAAG,KAAK,MAAQA,EAAQ,KAAOA,EAAQ,MAAQ,KAAK,OAASA,EAAQ,IAAMA,EAAQ,OACnH,KAAK,oBACN,KAAK,iBAAgB,EACrB,KAAK,oBAAmB,EACxB,KAAK,gBAAe,EACpB,KAAK,OAASzI,GAAU,KAAME,EAAOC,CAAW,EAChD,KAAK,kBAAoB,IAE7B,KAAK,iBAAgB,EACrB,KAAK,MAAQ,KAAK,WAAU,GAAM,CAAA,EAClC,KAAK,gBAAe,EACpB,MAAM8jB,EAAkBD,EAAa,KAAK,MAAM,OAChD,KAAK,sBAAsBC,EAAkB5B,GAAO,KAAK,MAAO2B,CAAU,EAAI,KAAK,KAAK,EACxF,KAAK,UAAS,EACd,KAAK,6BAA4B,EACjC,KAAK,uBAAsB,EAC3B,KAAK,4BAA2B,EAC5BxD,EAAS,UAAYA,EAAS,UAAYA,EAAS,SAAW,UAC9D,KAAK,MAAQD,GAAS,KAAM,KAAK,KAAK,EACtC,KAAK,YAAc,KACnB,KAAK,cAAa,GAElB0D,GACA,KAAK,sBAAsB,KAAK,KAAK,EAEzC,KAAK,UAAS,EACd,KAAK,IAAG,EACR,KAAK,SAAQ,EACb,KAAK,YAAW,CACnB,CACJ,WAAY,CACL,IAAIC,EAAgB,KAAK,QAAQ,QAC7BrM,EAAYC,EACZ,KAAK,gBACLD,EAAa,KAAK,KAClBC,EAAW,KAAK,QAEhBD,EAAa,KAAK,IAClBC,EAAW,KAAK,OAChBoM,EAAgB,CAACA,GAErB,KAAK,YAAcrM,EACnB,KAAK,UAAYC,EACjB,KAAK,eAAiBoM,EACtB,KAAK,QAAUpM,EAAWD,EAC1B,KAAK,eAAiB,KAAK,QAAQ,aACtC,CACD,aAAc,CACVrpB,EAAS,KAAK,QAAQ,YAAa,CAC/B,IACZ,CAAS,CACJ,CACD,qBAAsB,CAClBA,EAAS,KAAK,QAAQ,oBAAqB,CACvC,IACZ,CAAS,CACJ,CACD,eAAgB,CACR,KAAK,gBACL,KAAK,MAAQ,KAAK,SAClB,KAAK,KAAO,EACZ,KAAK,MAAQ,KAAK,QAElB,KAAK,OAAS,KAAK,UACnB,KAAK,IAAM,EACX,KAAK,OAAS,KAAK,QAEvB,KAAK,YAAc,EACnB,KAAK,WAAa,EAClB,KAAK,aAAe,EACpB,KAAK,cAAgB,CACxB,CACD,oBAAqB,CACjBA,EAAS,KAAK,QAAQ,mBAAoB,CACtC,IACZ,CAAS,CACJ,CACD,WAAWqK,EAAM,CACb,KAAK,MAAM,cAAcA,EAAM,KAAK,WAAU,CAAE,EAChDrK,EAAS,KAAK,QAAQqK,CAAI,EAAG,CACzB,IACZ,CAAS,CACJ,CACD,kBAAmB,CACf,KAAK,WAAW,kBAAkB,CACrC,CACD,qBAAsB,CAAE,CACxB,iBAAkB,CACd,KAAK,WAAW,iBAAiB,CACpC,CACD,kBAAmB,CACf,KAAK,WAAW,kBAAkB,CACrC,CACJ,YAAa,CACN,MAAO,EACV,CACD,iBAAkB,CACd,KAAK,WAAW,iBAAiB,CACpC,CACD,6BAA8B,CAC1BrK,EAAS,KAAK,QAAQ,4BAA6B,CAC/C,IACZ,CAAS,CACJ,CACJ,mBAAmBgL,EAAO,CACnB,MAAMgnB,EAAW,KAAK,QAAQ,MAC9B,IAAIz2B,EAAGmF,EAAMi0B,EACb,IAAIp5B,EAAI,EAAGmF,EAAOsK,EAAM,OAAQzP,EAAImF,EAAMnF,IACtCo5B,EAAO3pB,EAAMzP,CAAC,EACdo5B,EAAK,MAAQ30B,EAASgyB,EAAS,SAAU,CACrC2C,EAAK,MACLp5B,EACAyP,CACH,EAAE,IAAI,CAEd,CACD,4BAA6B,CACzBhL,EAAS,KAAK,QAAQ,2BAA4B,CAC9C,IACZ,CAAS,CACJ,CACD,8BAA+B,CAC3BA,EAAS,KAAK,QAAQ,6BAA8B,CAChD,IACZ,CAAS,CACJ,CACD,wBAAyB,CACrB,MAAMmB,EAAU,KAAK,QACf6wB,EAAW7wB,EAAQ,MACnBw0B,EAAWjC,GAAc,KAAK,MAAM,OAAQvyB,EAAQ,MAAM,aAAa,EACvEy0B,EAAc5D,EAAS,aAAe,EACtC6D,EAAc7D,EAAS,YAC7B,IAAI8D,EAAgBF,EAChBG,EAAWxc,EAAWyc,EAC1B,GAAI,CAAC,KAAK,cAAgB,CAAChE,EAAS,SAAW4D,GAAeC,GAAeF,GAAY,GAAK,CAAC,KAAK,aAAY,EAAI,CAChH,KAAK,cAAgBC,EACrB,MACH,CACD,MAAMK,EAAa,KAAK,iBAClBC,EAAgBD,EAAW,OAAO,MAClCE,EAAiBF,EAAW,QAAQ,OACpC3c,EAAWvT,EAAY,KAAK,MAAM,MAAQmwB,EAAe,EAAG,KAAK,QAAQ,EAC/EH,EAAY50B,EAAQ,OAAS,KAAK,SAAWw0B,EAAWrc,GAAYqc,EAAW,GAC3EO,EAAgB,EAAIH,IACpBA,EAAYzc,GAAYqc,GAAYx0B,EAAQ,OAAS,GAAM,IAC3DoY,EAAY,KAAK,UAAYgb,GAAkBpzB,EAAQ,IAAI,EAAI6wB,EAAS,QAAUwC,GAAerzB,EAAQ,MAAO,KAAK,MAAM,QAAQ,IAAI,EACvI60B,EAAmB,KAAK,KAAKE,EAAgBA,EAAgBC,EAAiBA,CAAc,EAC5FL,EAAgBtxB,GAAU,KAAK,IAAI,KAAK,KAAKuB,GAAakwB,EAAW,QAAQ,OAAS,GAAKF,EAAW,GAAI,CAAC,CAAC,EAAG,KAAK,KAAKhwB,EAAYwT,EAAYyc,EAAkB,GAAI,CAAC,CAAC,EAAI,KAAK,KAAKjwB,EAAYowB,EAAiBH,EAAkB,GAAI,CAAC,CAAC,CAAC,CAAC,EAC9OF,EAAgB,KAAK,IAAIF,EAAa,KAAK,IAAIC,EAAaC,CAAa,CAAC,GAE9E,KAAK,cAAgBA,CACxB,CACD,6BAA8B,CAC1B91B,EAAS,KAAK,QAAQ,4BAA6B,CAC/C,IACZ,CAAS,CACJ,CACD,eAAgB,CAAE,CAClB,WAAY,CACRA,EAAS,KAAK,QAAQ,UAAW,CAC7B,IACZ,CAAS,CACJ,CACD,KAAM,CACF,MAAMo2B,EAAU,CACZ,MAAO,EACP,OAAQ,CACpB,EACc,CAAE,MAAA7oB,EAAQ,QAAS,CAAE,MAAOykB,EAAW,MAAOqE,EAAY,KAAMC,CAAW,CAAA,EAAM,KACjFC,EAAU,KAAK,aACfC,EAAe,KAAK,eAC1B,GAAID,EAAS,CACT,MAAME,EAAcjC,GAAe6B,EAAW9oB,EAAM,QAAQ,IAAI,EAQhE,GAPIipB,GACAJ,EAAQ,MAAQ,KAAK,SACrBA,EAAQ,OAAS7B,GAAkB+B,CAAQ,EAAIG,IAE/CL,EAAQ,OAAS,KAAK,UACtBA,EAAQ,MAAQ7B,GAAkB+B,CAAQ,EAAIG,GAE9CzE,EAAS,SAAW,KAAK,MAAM,OAAQ,CACvC,KAAM,CAAE,MAAAO,EAAQ,KAAA7rB,EAAO,OAAAgwB,EAAS,QAAAC,GAAa,KAAK,iBAC5CC,EAAc5E,EAAS,QAAU,EACjC6E,EAAevyB,GAAU,KAAK,aAAa,EAC3CwyB,EAAM,KAAK,IAAID,CAAY,EAC3BE,EAAM,KAAK,IAAIF,CAAY,EACjC,GAAIL,EAAc,CACd,MAAMQ,EAAchF,EAAS,OAAS,EAAI+E,EAAML,EAAO,MAAQI,EAAMH,EAAQ,OAC7EP,EAAQ,OAAS,KAAK,IAAI,KAAK,UAAWA,EAAQ,OAASY,EAAcJ,CAAW,CACxG,KAAuB,CACH,MAAMK,EAAajF,EAAS,OAAS,EAAI8E,EAAMJ,EAAO,MAAQK,EAAMJ,EAAQ,OAC5EP,EAAQ,MAAQ,KAAK,IAAI,KAAK,SAAUA,EAAQ,MAAQa,EAAaL,CAAW,CACnF,CACD,KAAK,kBAAkBrE,EAAO7rB,EAAMqwB,EAAKD,CAAG,CAC/C,CACJ,CACD,KAAK,eAAc,EACfN,GACA,KAAK,MAAQ,KAAK,QAAUjpB,EAAM,MAAQ,KAAK,SAAS,KAAO,KAAK,SAAS,MAC7E,KAAK,OAAS6oB,EAAQ,SAEtB,KAAK,MAAQA,EAAQ,MACrB,KAAK,OAAS,KAAK,QAAU7oB,EAAM,OAAS,KAAK,SAAS,IAAM,KAAK,SAAS,OAErF,CACD,kBAAkBglB,EAAO7rB,EAAMqwB,EAAKD,EAAK,CACrC,KAAM,CAAE,MAAO,CAAE,MAAA1uB,EAAQ,QAAA+mB,CAAU,EAAG,SAAApE,CAAW,EAAG,KAAK,QACnDmM,EAAY,KAAK,gBAAkB,EACnCC,EAAmBpM,IAAa,OAAS,KAAK,OAAS,IAC7D,GAAI,KAAK,eAAgB,CACrB,MAAMqM,EAAa,KAAK,gBAAgB,CAAC,EAAI,KAAK,KAC5CC,EAAc,KAAK,MAAQ,KAAK,gBAAgB,KAAK,MAAM,OAAS,CAAC,EAC3E,IAAIC,EAAc,EACdC,EAAe,EACfL,EACIC,GACAG,EAAcR,EAAMvE,EAAM,MAC1BgF,EAAeR,EAAMrwB,EAAK,SAE1B4wB,EAAcP,EAAMxE,EAAM,OAC1BgF,EAAeT,EAAMpwB,EAAK,OAEvB0B,IAAU,QACjBmvB,EAAe7wB,EAAK,MACb0B,IAAU,MACjBkvB,EAAc/E,EAAM,MACbnqB,IAAU,UACjBkvB,EAAc/E,EAAM,MAAQ,EAC5BgF,EAAe7wB,EAAK,MAAQ,GAEhC,KAAK,YAAc,KAAK,KAAK4wB,EAAcF,EAAajI,GAAW,KAAK,OAAS,KAAK,MAAQiI,GAAa,CAAC,EAC5G,KAAK,aAAe,KAAK,KAAKG,EAAeF,EAAclI,GAAW,KAAK,OAAS,KAAK,MAAQkI,GAAc,CAAC,CAC5H,KAAe,CACH,IAAIG,EAAa9wB,EAAK,OAAS,EAC3B+wB,EAAgBlF,EAAM,OAAS,EAC/BnqB,IAAU,SACVovB,EAAa,EACbC,EAAgBlF,EAAM,QACfnqB,IAAU,QACjBovB,EAAa9wB,EAAK,OAClB+wB,EAAgB,GAEpB,KAAK,WAAaD,EAAarI,EAC/B,KAAK,cAAgBsI,EAAgBtI,CACxC,CACJ,CACJ,gBAAiB,CACN,KAAK,WACL,KAAK,SAAS,KAAO,KAAK,IAAI,KAAK,YAAa,KAAK,SAAS,IAAI,EAClE,KAAK,SAAS,IAAM,KAAK,IAAI,KAAK,WAAY,KAAK,SAAS,GAAG,EAC/D,KAAK,SAAS,MAAQ,KAAK,IAAI,KAAK,aAAc,KAAK,SAAS,KAAK,EACrE,KAAK,SAAS,OAAS,KAAK,IAAI,KAAK,cAAe,KAAK,SAAS,MAAM,EAE/E,CACD,UAAW,CACPnvB,EAAS,KAAK,QAAQ,SAAU,CAC5B,IACZ,CAAS,CACJ,CACJ,cAAe,CACR,KAAM,CAAE,KAAAkJ,EAAO,SAAA6hB,GAAc,KAAK,QAClC,OAAOA,IAAa,OAASA,IAAa,UAAY7hB,IAAS,GAClE,CACJ,YAAa,CACN,OAAO,KAAK,QAAQ,QACvB,CACJ,sBAAsB8B,EAAO,CACtB,KAAK,4BAA2B,EAChC,KAAK,mBAAmBA,CAAK,EAC7B,IAAIzP,EAAGmF,EACP,IAAInF,EAAI,EAAGmF,EAAOsK,EAAM,OAAQzP,EAAImF,EAAMnF,IAClC+D,EAAc0L,EAAMzP,CAAC,EAAE,KAAK,IAC5ByP,EAAM,OAAOzP,EAAG,CAAC,EACjBmF,IACAnF,KAGR,KAAK,2BAA0B,CAClC,CACJ,gBAAiB,CACV,IAAI06B,EAAa,KAAK,YACtB,GAAI,CAACA,EAAY,CACb,MAAMT,EAAa,KAAK,QAAQ,MAAM,WACtC,IAAIxqB,EAAQ,KAAK,MACbwqB,EAAaxqB,EAAM,SACnBA,EAAQ6oB,GAAO7oB,EAAOwqB,CAAU,GAEpC,KAAK,YAAcS,EAAa,KAAK,mBAAmBjrB,EAAOA,EAAM,OAAQ,KAAK,QAAQ,MAAM,aAAa,CAChH,CACD,OAAOirB,CACV,CACJ,mBAAmBjrB,EAAOme,EAAQyK,EAAe,CAC1C,KAAM,CAAE,IAAAvnB,EAAM,kBAAmBgoB,CAAM,EAAM,KACvCqD,EAAS,CAAA,EACTC,EAAU,CAAA,EACV5D,EAAY,KAAK,MAAM5K,EAASuK,GAAcvK,EAAQyK,CAAa,CAAC,EAC1E,IAAIgE,EAAkB,EAClBC,EAAmB,EACnBt8B,EAAG2B,EAAG46B,EAAMC,EAAOC,EAAUC,EAAYzlB,EAAO0lB,EAAYzqB,EAAO2L,EAAQ+e,EAC/E,IAAI58B,EAAI,EAAGA,EAAI4tB,EAAQ5tB,GAAKw4B,EAAU,CAUlC,GATAgE,EAAQ/sB,EAAMzP,CAAC,EAAE,MACjBy8B,EAAW,KAAK,wBAAwBz8B,CAAC,EACzC8Q,EAAI,KAAO4rB,EAAaD,EAAS,OACjCxlB,EAAQ6hB,EAAO4D,CAAU,EAAI5D,EAAO4D,CAAU,GAAK,CAC/C,KAAM,CAAE,EACR,GAAI,CAAE,CACtB,EACYC,EAAaF,EAAS,WACtBvqB,EAAQ2L,EAAS,EACb,CAAC9Z,EAAcy4B,CAAK,GAAK,CAACv4B,EAAQu4B,CAAK,EACvCtqB,EAAQT,GAAaX,EAAKmG,EAAM,KAAMA,EAAM,GAAI/E,EAAOsqB,CAAK,EAC5D3e,EAAS8e,UACF14B,EAAQu4B,CAAK,EACpB,IAAI76B,EAAI,EAAG46B,EAAOC,EAAM,OAAQ76B,EAAI46B,EAAM,EAAE56B,EACxCi7B,EAAeJ,EAAM76B,CAAC,EAClB,CAACoC,EAAc64B,CAAW,GAAK,CAAC34B,EAAQ24B,CAAW,IACnD1qB,EAAQT,GAAaX,EAAKmG,EAAM,KAAMA,EAAM,GAAI/E,EAAO0qB,CAAW,EAClE/e,GAAU8e,GAItBR,EAAO,KAAKjqB,CAAK,EACjBkqB,EAAQ,KAAKve,CAAM,EACnBwe,EAAkB,KAAK,IAAInqB,EAAOmqB,CAAe,EACjDC,EAAmB,KAAK,IAAIze,EAAQye,CAAgB,CACvD,CACDzD,GAAeC,EAAQlL,CAAM,EAC7B,MAAMuN,EAASgB,EAAO,QAAQE,CAAe,EACvCjB,EAAUgB,EAAQ,QAAQE,CAAgB,EAC1CO,EAAWC,IAAO,CAChB,MAAOX,EAAOW,CAAG,GAAK,EACtB,OAAQV,EAAQU,CAAG,GAAK,CACxC,GACQ,MAAO,CACH,MAAOD,EAAQ,CAAC,EAChB,KAAMA,EAAQjP,EAAS,CAAC,EACxB,OAAQiP,EAAQ1B,CAAM,EACtB,QAAS0B,EAAQzB,CAAO,EACxB,OAAAe,EACA,QAAAC,CACZ,CACK,CACJ,iBAAiBp4B,EAAO,CACjB,OAAOA,CACV,CACJ,iBAAiBA,EAAO8G,EAAO,CACxB,MAAO,IACV,CACJ,iBAAiBmH,EAAO,CAAE,CAC1B,gBAAgBnH,EAAO,CAChB,MAAM2E,EAAQ,KAAK,MACnB,OAAI3E,EAAQ,GAAKA,EAAQ2E,EAAM,OAAS,EAC7B,KAEJ,KAAK,iBAAiBA,EAAM3E,CAAK,EAAE,KAAK,CAClD,CACJ,mBAAmBiyB,EAAS,CACjB,KAAK,iBACLA,EAAU,EAAIA,GAElB,MAAM9qB,EAAQ,KAAK,YAAc8qB,EAAU,KAAK,QAChD,OAAOtyB,GAAY,KAAK,eAAiBsH,GAAY,KAAK,MAAOE,EAAO,CAAC,EAAIA,CAAK,CACrF,CACJ,mBAAmBA,EAAO,CACnB,MAAM8qB,GAAW9qB,EAAQ,KAAK,aAAe,KAAK,QAClD,OAAO,KAAK,eAAiB,EAAI8qB,EAAUA,CAC9C,CACJ,cAAe,CACR,OAAO,KAAK,iBAAiB,KAAK,aAAc,CAAA,CACnD,CACJ,cAAe,CACR,KAAM,CAAE,IAAAx8B,EAAM,IAAAF,CAAM,EAAG,KACvB,OAAOE,EAAM,GAAKF,EAAM,EAAIA,EAAME,EAAM,GAAKF,EAAM,EAAIE,EAAM,CAChE,CACJ,WAAWuK,EAAO,CACX,MAAM2E,EAAQ,KAAK,OAAS,GAC5B,GAAI3E,GAAS,GAAKA,EAAQ2E,EAAM,OAAQ,CACpC,MAAM2pB,EAAO3pB,EAAM3E,CAAK,EACxB,OAAOsuB,EAAK,WAAaA,EAAK,SAAWD,GAAkB,KAAK,WAAY,EAAEruB,EAAOsuB,CAAI,EAC5F,CACD,OAAO,KAAK,WAAa,KAAK,SAAWF,GAAmB,KAAK,MAAM,aAAc,IAAI,EAC5F,CACJ,WAAY,CACL,MAAM8D,EAAc,KAAK,QAAQ,MAC3BC,EAAMl0B,GAAU,KAAK,aAAa,EAClCwyB,EAAM,KAAK,IAAI,KAAK,IAAI0B,CAAG,CAAC,EAC5BzB,EAAM,KAAK,IAAI,KAAK,IAAIyB,CAAG,CAAC,EAC5BvC,EAAa,KAAK,iBAClB9G,EAAUoJ,EAAY,iBAAmB,EACzCl9B,EAAI46B,EAAaA,EAAW,OAAO,MAAQ9G,EAAU,EACrDz1B,EAAIu8B,EAAaA,EAAW,QAAQ,OAAS9G,EAAU,EAC7D,OAAO,KAAK,aAAY,EAAKz1B,EAAIo9B,EAAMz7B,EAAI07B,EAAM17B,EAAIy7B,EAAMp9B,EAAIq9B,EAAMr9B,EAAIq9B,EAAM17B,EAAIy7B,EAAMp9B,EAAIo9B,EAAMz7B,EAAI07B,CAC1G,CACJ,YAAa,CACN,MAAMR,EAAU,KAAK,QAAQ,QAC7B,OAAIA,IAAY,OACL,CAAC,CAACA,EAEN,KAAK,0BAA0B,OAAS,CAClD,CACJ,sBAAsB1I,EAAW,CAC1B,MAAM3kB,EAAO,KAAK,KACZqE,EAAQ,KAAK,MACbpM,EAAU,KAAK,QACf,CAAE,KAAAs3B,EAAO,SAAA1N,EAAW,OAAAZ,CAAM,EAAMhpB,EAChC2xB,EAAS2F,EAAK,OACdjC,EAAe,KAAK,eAEpB7C,EADQ,KAAK,MACO,QAAUb,EAAS,EAAI,GAC3C4F,EAAKnE,GAAkBkE,CAAI,EAC3B/wB,EAAQ,CAAA,EACRixB,EAAaxO,EAAO,WAAW,KAAK,WAAY,CAAA,EAChDyO,EAAYD,EAAW,QAAUA,EAAW,MAAQ,EACpDE,EAAgBD,EAAY,EAC5BE,EAAmB,SAAStrB,EAAO,CACrC,OAAOF,GAAYC,EAAOC,EAAOorB,CAAS,CACtD,EACQ,IAAIG,EAAax9B,EAAG44B,EAAW6E,EAC3BC,EAAKC,EAAKC,EAAKC,EAAKC,EAAIC,EAAIC,EAAIC,EACpC,GAAIzO,IAAa,MACbgO,EAAcD,EAAiB,KAAK,MAAM,EAC1CI,EAAM,KAAK,OAASR,EACpBU,EAAML,EAAcF,EACpBS,EAAKR,EAAiBjL,EAAU,GAAG,EAAIgL,EACvCW,EAAK3L,EAAU,eACR9C,IAAa,SACpBgO,EAAcD,EAAiB,KAAK,GAAG,EACvCQ,EAAKzL,EAAU,IACf2L,EAAKV,EAAiBjL,EAAU,MAAM,EAAIgL,EAC1CK,EAAMH,EAAcF,EACpBO,EAAM,KAAK,IAAMV,UACV3N,IAAa,OACpBgO,EAAcD,EAAiB,KAAK,KAAK,EACzCG,EAAM,KAAK,MAAQP,EACnBS,EAAMJ,EAAcF,EACpBQ,EAAKP,EAAiBjL,EAAU,IAAI,EAAIgL,EACxCU,EAAK1L,EAAU,cACR9C,IAAa,QACpBgO,EAAcD,EAAiB,KAAK,IAAI,EACxCO,EAAKxL,EAAU,KACf0L,EAAKT,EAAiBjL,EAAU,KAAK,EAAIgL,EACzCI,EAAMF,EAAcF,EACpBM,EAAM,KAAK,KAAOT,UACXxvB,IAAS,IAAK,CACrB,GAAI6hB,IAAa,SACbgO,EAAcD,GAAkBjL,EAAU,IAAMA,EAAU,QAAU,EAAI,EAAG,UACpEpuB,EAASsrB,CAAQ,EAAG,CAC3B,MAAMiK,EAAiB,OAAO,KAAKjK,CAAQ,EAAE,CAAC,EACxCxrB,EAAQwrB,EAASiK,CAAc,EACrC+D,EAAcD,EAAiB,KAAK,MAAM,OAAO9D,CAAc,EAAE,iBAAiBz1B,CAAK,CAAC,CAC3F,CACD+5B,EAAKzL,EAAU,IACf2L,EAAK3L,EAAU,OACfqL,EAAMH,EAAcF,EACpBO,EAAMF,EAAMR,CACxB,SAAmBxvB,IAAS,IAAK,CACrB,GAAI6hB,IAAa,SACbgO,EAAcD,GAAkBjL,EAAU,KAAOA,EAAU,OAAS,CAAC,UAC9DpuB,EAASsrB,CAAQ,EAAG,CAC3B,MAAMiK,EAAiB,OAAO,KAAKjK,CAAQ,EAAE,CAAC,EACxCxrB,EAAQwrB,EAASiK,CAAc,EACrC+D,EAAcD,EAAiB,KAAK,MAAM,OAAO9D,CAAc,EAAE,iBAAiBz1B,CAAK,CAAC,CAC3F,CACD05B,EAAMF,EAAcF,EACpBM,EAAMF,EAAMP,EACZW,EAAKxL,EAAU,KACf0L,EAAK1L,EAAU,KAClB,CACD,MAAM4L,EAAQ55B,EAAesB,EAAQ,MAAM,cAAewyB,CAAW,EAC/D+F,EAAO,KAAK,IAAI,EAAG,KAAK,KAAK/F,EAAc8F,CAAK,CAAC,EACvD,IAAIl+B,EAAI,EAAGA,EAAIo4B,EAAap4B,GAAKm+B,EAAK,CAClC,MAAMttB,EAAU,KAAK,WAAW7Q,CAAC,EAC3Bo+B,EAAclB,EAAK,WAAWrsB,CAAO,EACrCwtB,GAAoBzP,EAAO,WAAW/d,CAAO,EAC7CytB,GAAYF,EAAY,UACxBG,GAAYH,EAAY,MACxBI,GAAaH,GAAkB,MAAQ,GACvCI,GAAmBJ,GAAkB,WACrC7D,GAAY4D,EAAY,UACxBM,GAAYN,EAAY,UACxBO,GAAiBP,EAAY,gBAAkB,GAC/CQ,GAAuBR,EAAY,qBACzCxF,EAAYH,GAAoB,KAAMz4B,EAAGu3B,CAAM,EAC3CqB,IAAc,SAGlB6E,EAAmB1rB,GAAYC,EAAO4mB,EAAW0F,EAAS,EACtDrD,EACAyC,EAAME,EAAME,EAAKE,EAAKP,EAEtBE,EAAME,EAAME,EAAKE,EAAKR,EAE1BtxB,EAAM,KAAK,CACP,IAAAuxB,EACA,IAAAC,EACA,IAAAC,EACA,IAAAC,EACA,GAAAC,EACA,GAAAC,EACA,GAAAC,EACA,GAAAC,EACA,MAAOK,GACP,MAAOC,GACP,WAAAC,GACA,iBAAAC,GACA,UAAAjE,GACA,UAAAkE,GACA,eAAAC,GACA,qBAAAC,EAChB,CAAa,EACJ,CACD,YAAK,aAAexG,EACpB,KAAK,aAAeoF,EACbrxB,CACV,CACJ,mBAAmBmmB,EAAW,CACvB,MAAM3kB,EAAO,KAAK,KACZ/H,EAAU,KAAK,QACf,CAAE,SAAA4pB,EAAW,MAAOwN,CAAW,EAAMp3B,EACrCq1B,EAAe,KAAK,eACpBxrB,EAAQ,KAAK,MACb,CAAE,MAAA5C,EAAQ,WAAAgyB,EAAa,QAAAjL,EAAU,OAAAkL,CAAM,EAAM9B,EAC7CG,EAAKnE,GAAkBpzB,EAAQ,IAAI,EACnCm5B,EAAiB5B,EAAKvJ,EACtBoL,EAAkBF,EAAS,CAAClL,EAAUmL,EACtC/rB,EAAW,CAACjK,GAAU,KAAK,aAAa,EACxCoD,EAAQ,CAAA,EACd,IAAInM,EAAGmF,EAAMi0B,EAAMoD,EAAO,EAAGz0B,EAAGk3B,EAAWhtB,EAAOT,EAAMmrB,EAAYuC,EAAWC,EAC3EC,EAAe,SACnB,GAAI5P,IAAa,MACbznB,EAAI,KAAK,OAASi3B,EAClBC,EAAY,KAAK,kCACVzP,IAAa,SACpBznB,EAAI,KAAK,IAAMi3B,EACfC,EAAY,KAAK,kCACVzP,IAAa,OAAQ,CAC5B,MAAMtwB,EAAM,KAAK,wBAAwBi+B,CAAE,EAC3C8B,EAAY//B,EAAI,UAChB,EAAIA,EAAI,CACpB,SAAmBswB,IAAa,QAAS,CAC7B,MAAMtwB,EAAM,KAAK,wBAAwBi+B,CAAE,EAC3C8B,EAAY//B,EAAI,UAChB,EAAIA,EAAI,CACpB,SAAmByO,IAAS,IAAK,CACrB,GAAI6hB,IAAa,SACbznB,GAAKuqB,EAAU,IAAMA,EAAU,QAAU,EAAIyM,UACtC76B,EAASsrB,CAAQ,EAAG,CAC3B,MAAMiK,EAAiB,OAAO,KAAKjK,CAAQ,EAAE,CAAC,EACxCxrB,EAAQwrB,EAASiK,CAAc,EACrC1xB,EAAI,KAAK,MAAM,OAAO0xB,CAAc,EAAE,iBAAiBz1B,CAAK,EAAI+6B,CACnE,CACDE,EAAY,KAAK,yBAC7B,SAAmBtxB,IAAS,IAAK,CACrB,GAAI6hB,IAAa,SACb,GAAK8C,EAAU,KAAOA,EAAU,OAAS,EAAIyM,UACtC76B,EAASsrB,CAAQ,EAAG,CAC3B,MAAMiK,EAAiB,OAAO,KAAKjK,CAAQ,EAAE,CAAC,EACxCxrB,EAAQwrB,EAASiK,CAAc,EACrC,EAAI,KAAK,MAAM,OAAOA,CAAc,EAAE,iBAAiBz1B,CAAK,CAC/D,CACDi7B,EAAY,KAAK,wBAAwB9B,CAAE,EAAE,SAChD,CACGxvB,IAAS,MACLd,IAAU,QACVuyB,EAAe,MACRvyB,IAAU,QACjBuyB,EAAe,WAGvB,MAAM1E,EAAa,KAAK,iBACxB,IAAI16B,EAAI,EAAGmF,EAAOsK,EAAM,OAAQzP,EAAImF,EAAM,EAAEnF,EAAE,CAC1Co5B,EAAO3pB,EAAMzP,CAAC,EACdw8B,EAAQpD,EAAK,MACb,MAAMgF,EAAcpB,EAAY,WAAW,KAAK,WAAWh9B,CAAC,CAAC,EAC7DiS,EAAQ,KAAK,gBAAgBjS,CAAC,EAAIg9B,EAAY,YAC9CxrB,EAAO,KAAK,wBAAwBxR,CAAC,EACrC28B,EAAanrB,EAAK,WAClB0tB,EAAYj7B,EAAQu4B,CAAK,EAAIA,EAAM,OAAS,EAC5C,MAAM6C,EAAYH,EAAY,EACxB97B,EAAQg7B,EAAY,MACpBkB,GAAclB,EAAY,gBAC1BmB,GAAcnB,EAAY,gBAChC,IAAIoB,GAAgBP,EAChBhE,GACA,EAAIhpB,EACAgtB,IAAc,UACVj/B,IAAMmF,EAAO,EACbq6B,GAAiB,KAAK,QAAQ,QAAoB,OAAV,QACjCx/B,IAAM,EACbw/B,GAAiB,KAAK,QAAQ,QAAmB,QAAT,OAExCA,GAAgB,UAGpBhQ,IAAa,MACTqP,IAAe,QAAU7rB,IAAa,EACtCmsB,EAAa,CAACD,EAAYvC,EAAaA,EAAa,EAC7CkC,IAAe,SACtBM,EAAa,CAACzE,EAAW,QAAQ,OAAS,EAAI2E,EAAY1C,EAAaA,EAEvEwC,EAAa,CAACzE,EAAW,QAAQ,OAASiC,EAAa,EAGvDkC,IAAe,QAAU7rB,IAAa,EACtCmsB,EAAaxC,EAAa,EACnBkC,IAAe,SACtBM,EAAazE,EAAW,QAAQ,OAAS,EAAI2E,EAAY1C,EAEzDwC,EAAazE,EAAW,QAAQ,OAASwE,EAAYvC,EAGzDmC,IACAK,GAAc,IAEdnsB,IAAa,GAAK,CAACorB,EAAY,oBAC/B,GAAKzB,EAAa,EAAI,KAAK,IAAI3pB,CAAQ,KAG3CjL,EAAIkK,EACJktB,GAAc,EAAID,GAAavC,EAAa,GAEhD,IAAI8C,GACJ,GAAIrB,EAAY,kBAAmB,CAC/B,MAAMsB,GAAe/pB,EAAUyoB,EAAY,eAAe,EACpDvgB,GAAS6c,EAAW,QAAQ16B,CAAC,EAC7BkS,GAAQwoB,EAAW,OAAO16B,CAAC,EACjC,IAAIoU,GAAM+qB,EAAaO,GAAa,IAChC1yB,GAAO,EAAI0yB,GAAa,KAC5B,OAAON,EAAY,CACf,IAAK,SACDhrB,IAAOyJ,GAAS,EAChB,MACJ,IAAK,SACDzJ,IAAOyJ,GACP,KACP,CACD,OAAOohB,EAAS,CACZ,IAAK,SACDjyB,IAAQkF,GAAQ,EAChB,MACJ,IAAK,QACDlF,IAAQkF,GACR,MACJ,IAAK,QACGlS,IAAMmF,EAAO,EACb6H,IAAQkF,GACDlS,EAAI,IACXgN,IAAQkF,GAAQ,GAEpB,KACP,CACDutB,GAAW,CACP,KAAAzyB,GACA,IAAAoH,GACA,MAAOlC,GAAQwtB,GAAa,MAC5B,OAAQ7hB,GAAS6hB,GAAa,OAC9B,MAAOtB,EAAY,aACvC,CACa,CACDjyB,EAAM,KAAK,CACP,MAAAqwB,EACA,KAAAhrB,EACA,WAAA2tB,EACA,QAAS,CACL,SAAAnsB,EACA,MAAA5P,EACA,YAAAk8B,GACA,YAAAC,GACA,UAAWC,GACX,aAAAJ,EACA,YAAa,CACT,EACAr3B,CACH,EACD,SAAA03B,EACH,CACjB,CAAa,CACJ,CACD,OAAOtzB,CACV,CACD,yBAA0B,CACtB,KAAM,CAAE,SAAAqjB,EAAW,MAAA/f,GAAW,KAAK,QAEnC,GADiB,CAAC1G,GAAU,KAAK,aAAa,EAE1C,OAAOymB,IAAa,MAAQ,OAAS,QAEzC,IAAI3iB,EAAQ,SACZ,OAAI4C,EAAM,QAAU,QAChB5C,EAAQ,OACD4C,EAAM,QAAU,MACvB5C,EAAQ,QACD4C,EAAM,QAAU,UACvB5C,EAAQ,SAELA,CACV,CACD,wBAAwBswB,EAAI,CACxB,KAAM,CAAE,SAAA3N,EAAW,MAAO,CAAE,WAAAqP,EAAa,OAAAC,EAAS,QAAAlL,CAAU,CAAA,EAAM,KAAK,QACjE8G,EAAa,KAAK,iBAClBqE,EAAiB5B,EAAKvJ,EACtBuH,EAAST,EAAW,OAAO,MACjC,IAAIuE,EACAn3B,EACJ,OAAI0nB,IAAa,OACTsP,GACAh3B,EAAI,KAAK,MAAQ8rB,EACbiL,IAAe,OACfI,EAAY,OACLJ,IAAe,UACtBI,EAAY,SACZn3B,GAAKqzB,EAAS,IAEd8D,EAAY,QACZn3B,GAAKqzB,KAGTrzB,EAAI,KAAK,MAAQi3B,EACbF,IAAe,OACfI,EAAY,QACLJ,IAAe,UACtBI,EAAY,SACZn3B,GAAKqzB,EAAS,IAEd8D,EAAY,OACZn3B,EAAI,KAAK,OAGV0nB,IAAa,QAChBsP,GACAh3B,EAAI,KAAK,KAAO8rB,EACZiL,IAAe,OACfI,EAAY,QACLJ,IAAe,UACtBI,EAAY,SACZn3B,GAAKqzB,EAAS,IAEd8D,EAAY,OACZn3B,GAAKqzB,KAGTrzB,EAAI,KAAK,KAAOi3B,EACZF,IAAe,OACfI,EAAY,OACLJ,IAAe,UACtBI,EAAY,SACZn3B,GAAKqzB,EAAS,IAEd8D,EAAY,QACZn3B,EAAI,KAAK,QAIjBm3B,EAAY,QAET,CACH,UAAAA,EACA,EAAAn3B,CACZ,CACK,CACJ,mBAAoB,CACb,GAAI,KAAK,QAAQ,MAAM,OACnB,OAEJ,MAAMkK,EAAQ,KAAK,MACbwd,EAAW,KAAK,QAAQ,SAC9B,GAAIA,IAAa,QAAUA,IAAa,QACpC,MAAO,CACH,IAAK,EACL,KAAM,KAAK,KACX,OAAQxd,EAAM,OACd,MAAO,KAAK,KAC5B,EAEQ,GAAIwd,IAAa,OAASA,IAAa,SACnC,MAAO,CACH,IAAK,KAAK,IACV,KAAM,EACN,OAAQ,KAAK,OACb,MAAOxd,EAAM,KAC7B,CAEK,CACJ,gBAAiB,CACV,KAAM,CAAE,IAAAlB,EAAM,QAAS,CAAE,gBAAA6uB,CAAkB,EAAG,KAAA3yB,EAAO,IAAAoH,EAAM,MAAAlC,EAAQ,OAAA2L,CAAS,EAAG,KAC3E8hB,IACA7uB,EAAI,KAAI,EACRA,EAAI,UAAY6uB,EAChB7uB,EAAI,SAAS9D,EAAMoH,EAAKlC,EAAO2L,CAAM,EACrC/M,EAAI,QAAO,EAElB,CACD,qBAAqB9M,EAAO,CACxB,MAAMk5B,EAAO,KAAK,QAAQ,KAC1B,GAAI,CAAC,KAAK,WAAY,GAAI,CAACA,EAAK,QAC5B,MAAO,GAGX,MAAMpyB,EADQ,KAAK,MACC,UAAWtI,GAAIA,EAAE,QAAUwB,CAAK,EACpD,OAAI8G,GAAS,EACIoyB,EAAK,WAAW,KAAK,WAAWpyB,CAAK,CAAC,EACvC,UAET,CACV,CACJ,SAASwnB,EAAW,CACb,MAAM4K,EAAO,KAAK,QAAQ,KACpBpsB,EAAM,KAAK,IACX3E,EAAQ,KAAK,iBAAmB,KAAK,eAAiB,KAAK,sBAAsBmmB,CAAS,GAChG,IAAItyB,EAAGmF,EACP,MAAMy6B,EAAW,CAAC5+B,EAAIC,EAAI8R,IAAQ,CAC1B,CAACA,EAAM,OAAS,CAACA,EAAM,QAG3BjC,EAAI,KAAI,EACRA,EAAI,UAAYiC,EAAM,MACtBjC,EAAI,YAAciC,EAAM,MACxBjC,EAAI,YAAYiC,EAAM,YAAc,CAAE,CAAA,EACtCjC,EAAI,eAAiBiC,EAAM,iBAC3BjC,EAAI,UAAS,EACbA,EAAI,OAAO9P,EAAG,EAAGA,EAAG,CAAC,EACrB8P,EAAI,OAAO7P,EAAG,EAAGA,EAAG,CAAC,EACrB6P,EAAI,OAAM,EACVA,EAAI,QAAO,EACvB,EACQ,GAAIosB,EAAK,QACL,IAAIl9B,EAAI,EAAGmF,EAAOgH,EAAM,OAAQnM,EAAImF,EAAM,EAAEnF,EAAE,CAC1C,MAAMgH,EAAOmF,EAAMnM,CAAC,EAChBk9B,EAAK,iBACL0C,EAAS,CACL,EAAG54B,EAAK,GACR,EAAGA,EAAK,EAChC,EAAuB,CACC,EAAGA,EAAK,GACR,EAAGA,EAAK,EACX,EAAEA,CAAI,EAEPk2B,EAAK,WACL0C,EAAS,CACL,EAAG54B,EAAK,IACR,EAAGA,EAAK,GAChC,EAAuB,CACC,EAAGA,EAAK,IACR,EAAGA,EAAK,GAChC,EAAuB,CACC,MAAOA,EAAK,UACZ,MAAOA,EAAK,UACZ,WAAYA,EAAK,eACjB,iBAAkBA,EAAK,oBAC/C,CAAqB,CAER,CAER,CACJ,YAAa,CACN,KAAM,CAAE,MAAAgL,EAAQ,IAAAlB,EAAM,QAAS,CAAE,OAAA8d,EAAS,KAAAsO,CAAI,CAAM,EAAG,KACjDE,EAAaxO,EAAO,WAAW,KAAK,WAAY,CAAA,EAChDyO,EAAYzO,EAAO,QAAUwO,EAAW,MAAQ,EACtD,GAAI,CAACC,EACD,OAEJ,MAAMwC,EAAgB3C,EAAK,WAAW,KAAK,WAAW,CAAC,CAAC,EAAE,UACpDM,EAAc,KAAK,aACzB,IAAIM,EAAIE,EAAID,EAAIE,EACZ,KAAK,gBACLH,EAAK/rB,GAAYC,EAAO,KAAK,KAAMqrB,CAAS,EAAIA,EAAY,EAC5DW,EAAKjsB,GAAYC,EAAO,KAAK,MAAO6tB,CAAa,EAAIA,EAAgB,EACrE9B,EAAKE,EAAKT,IAEVO,EAAKhsB,GAAYC,EAAO,KAAK,IAAKqrB,CAAS,EAAIA,EAAY,EAC3DY,EAAKlsB,GAAYC,EAAO,KAAK,OAAQ6tB,CAAa,EAAIA,EAAgB,EACtE/B,EAAKE,EAAKR,GAEd1sB,EAAI,KAAI,EACRA,EAAI,UAAYssB,EAAW,MAC3BtsB,EAAI,YAAcssB,EAAW,MAC7BtsB,EAAI,UAAS,EACbA,EAAI,OAAOgtB,EAAIC,CAAE,EACjBjtB,EAAI,OAAOktB,EAAIC,CAAE,EACjBntB,EAAI,OAAM,EACVA,EAAI,QAAO,CACd,CACJ,WAAWwhB,EAAW,CAEf,GAAI,CADgB,KAAK,QAAQ,MAChB,QACb,OAEJ,MAAMxhB,EAAM,KAAK,IACXuC,EAAO,KAAK,oBACdA,GACAE,GAASzC,EAAKuC,CAAI,EAEtB,MAAMlH,EAAQ,KAAK,cAAcmmB,CAAS,EAC1C,UAAWtrB,KAAQmF,EAAM,CACrB,MAAM2zB,EAAoB94B,EAAK,QACzBy1B,EAAWz1B,EAAK,KAChBw1B,EAAQx1B,EAAK,MACbe,EAAIf,EAAK,WACfyN,GAAW3D,EAAK0rB,EAAO,EAAGz0B,EAAG00B,EAAUqD,CAAiB,CAC3D,CACGzsB,GACAG,GAAW1C,CAAG,CAErB,CACJ,WAAY,CACL,KAAM,CAAE,IAAAA,EAAM,QAAS,CAAE,SAAA0e,EAAW,MAAAuQ,EAAQ,QAAAh7B,CAAO,CAAM,EAAG,KAC5D,GAAI,CAACg7B,EAAM,QACP,OAEJ,MAAMvuB,EAAOoE,EAAOmqB,EAAM,IAAI,EACxBnM,EAAUje,EAAUoqB,EAAM,OAAO,EACjClzB,EAAQkzB,EAAM,MACpB,IAAIxI,EAAS/lB,EAAK,WAAa,EAC3Bge,IAAa,UAAYA,IAAa,UAAYtrB,EAASsrB,CAAQ,GACnE+H,GAAU3D,EAAQ,OACd3vB,EAAQ87B,EAAM,IAAI,IAClBxI,GAAU/lB,EAAK,YAAcuuB,EAAM,KAAK,OAAS,KAGrDxI,GAAU3D,EAAQ,IAEtB,KAAM,CAAE,OAAA2F,EAAS,OAAAC,EAAS,SAAAzb,EAAW,SAAA/K,CAAQ,EAAMsmB,GAAU,KAAM/B,EAAQ/H,EAAU3iB,CAAK,EAC1F4H,GAAW3D,EAAKivB,EAAM,KAAM,EAAG,EAAGvuB,EAAM,CACpC,MAAOuuB,EAAM,MACb,SAAAhiB,EACA,SAAA/K,EACA,UAAWqmB,GAAWxsB,EAAO2iB,EAAUzqB,CAAO,EAC9C,aAAc,SACd,YAAa,CACTw0B,EACAC,CACH,CACb,CAAS,CACJ,CACD,KAAKlH,EAAW,CACP,KAAK,eAGV,KAAK,eAAc,EACnB,KAAK,SAASA,CAAS,EACvB,KAAK,WAAU,EACf,KAAK,UAAS,EACd,KAAK,WAAWA,CAAS,EAC5B,CACJ,SAAU,CACH,MAAMte,EAAO,KAAK,QACZgsB,EAAKhsB,EAAK,OAASA,EAAK,MAAM,GAAK,EACnCisB,EAAK37B,EAAe0P,EAAK,MAAQA,EAAK,KAAK,EAAG,EAAE,EAChDksB,EAAK57B,EAAe0P,EAAK,QAAUA,EAAK,OAAO,EAAG,CAAC,EACzD,MAAI,CAAC,KAAK,cAAgB,KAAK,OAAS0lB,GAAM,UAAU,KAC7C,CACH,CACI,EAAGsG,EACH,KAAO1N,GAAY,CACf,KAAK,KAAKA,CAAS,CACtB,CACJ,CACjB,EAEe,CACH,CACI,EAAG2N,EACH,KAAO3N,GAAY,CACf,KAAK,eAAc,EACnB,KAAK,SAASA,CAAS,EACvB,KAAK,UAAS,CACjB,CACJ,EACD,CACI,EAAG4N,EACH,KAAM,IAAI,CACN,KAAK,WAAU,CAClB,CACJ,EACD,CACI,EAAGF,EACH,KAAO1N,GAAY,CACf,KAAK,WAAWA,CAAS,CAC5B,CACJ,CACb,CACK,CACJ,wBAAwBpvB,EAAM,CACvB,MAAM82B,EAAQ,KAAK,MAAM,6BAA4B,EAC/CmG,EAAS,KAAK,KAAO,SACrB53B,EAAS,CAAA,EACf,IAAIvI,EAAGmF,EACP,IAAInF,EAAI,EAAGmF,EAAO60B,EAAM,OAAQh6B,EAAImF,EAAM,EAAEnF,EAAE,CAC1C,MAAMoN,EAAO4sB,EAAMh6B,CAAC,EAChBoN,EAAK+yB,CAAM,IAAM,KAAK,KAAO,CAACj9B,GAAQkK,EAAK,OAASlK,IACpDqF,EAAO,KAAK6E,CAAI,CAEvB,CACD,OAAO7E,CACV,CACJ,wBAAwBuC,EAAO,CACxB,MAAMkJ,EAAO,KAAK,QAAQ,MAAM,WAAW,KAAK,WAAWlJ,CAAK,CAAC,EACjE,OAAO8K,EAAO5B,EAAK,IAAI,CAC1B,CACJ,YAAa,CACN,MAAMosB,EAAW,KAAK,wBAAwB,CAAC,EAAE,WACjD,OAAQ,KAAK,eAAiB,KAAK,MAAQ,KAAK,QAAUA,CAC7D,CACL,CAEA,MAAMC,EAAc,CAChB,YAAYn9B,EAAMuN,EAAO6vB,EAAS,CAC9B,KAAK,KAAOp9B,EACZ,KAAK,MAAQuN,EACb,KAAK,SAAW6vB,EAChB,KAAK,MAAQ,OAAO,OAAO,IAAI,CAClC,CACD,UAAUp9B,EAAM,CACZ,OAAO,OAAO,UAAU,cAAc,KAAK,KAAK,KAAK,UAAWA,EAAK,SAAS,CACjF,CACJ,SAAS8D,EAAM,CACR,MAAMnE,EAAQ,OAAO,eAAemE,CAAI,EACxC,IAAIu5B,EACAC,GAAkB39B,CAAK,IACvB09B,EAAc,KAAK,SAAS19B,CAAK,GAErC,MAAMsJ,EAAQ,KAAK,MACbrI,EAAKkD,EAAK,GACVyJ,EAAQ,KAAK,MAAQ,IAAM3M,EACjC,GAAI,CAACA,EACD,MAAM,IAAI,MAAM,2BAA6BkD,CAAI,EAErD,OAAIlD,KAAMqI,IAGVA,EAAMrI,CAAE,EAAIkD,EACZy5B,GAAiBz5B,EAAMyJ,EAAO8vB,CAAW,EACrC,KAAK,UACL1xB,EAAS,SAAS7H,EAAK,GAAIA,EAAK,SAAS,GAEtCyJ,CACV,CACJ,IAAI3M,EAAI,CACD,OAAO,KAAK,MAAMA,CAAE,CACvB,CACJ,WAAWkD,EAAM,CACV,MAAMmF,EAAQ,KAAK,MACbrI,EAAKkD,EAAK,GACVyJ,EAAQ,KAAK,MACf3M,KAAMqI,GACN,OAAOA,EAAMrI,CAAE,EAEf2M,GAAS3M,KAAM+K,EAAS4B,CAAK,IAC7B,OAAO5B,EAAS4B,CAAK,EAAE3M,CAAE,EACrB,KAAK,UACL,OAAOsM,GAAUtM,CAAE,EAG9B,CACL,CACA,SAAS28B,GAAiBz5B,EAAMyJ,EAAO8vB,EAAa,CAChD,MAAMG,EAAe36B,GAAM,OAAO,OAAO,IAAI,EAAG,CAC5Cw6B,EAAc1xB,EAAS,IAAI0xB,CAAW,EAAI,CAAE,EAC5C1xB,EAAS,IAAI4B,CAAK,EAClBzJ,EAAK,QACb,CAAK,EACD6H,EAAS,IAAI4B,EAAOiwB,CAAY,EAC5B15B,EAAK,eACL25B,GAAclwB,EAAOzJ,EAAK,aAAa,EAEvCA,EAAK,aACL6H,EAAS,SAAS4B,EAAOzJ,EAAK,WAAW,CAEjD,CACA,SAAS25B,GAAclwB,EAAOmwB,EAAQ,CAClC,OAAO,KAAKA,CAAM,EAAE,QAAS93B,GAAW,CACpC,MAAM+3B,EAAgB/3B,EAAS,MAAM,GAAG,EAClCg4B,EAAaD,EAAc,MAC3BE,EAAc,CAChBtwB,CACH,EAAC,OAAOowB,CAAa,EAAE,KAAK,GAAG,EAC1Br6B,EAAQo6B,EAAO93B,CAAQ,EAAE,MAAM,GAAG,EAClCkI,EAAaxK,EAAM,MACnBuK,EAAcvK,EAAM,KAAK,GAAG,EAClCqI,EAAS,MAAMkyB,EAAaD,EAAY/vB,EAAaC,CAAU,CACvE,CAAK,CACL,CACA,SAASwvB,GAAkB39B,EAAO,CAC9B,MAAO,OAAQA,GAAS,aAAcA,CAC1C,CAEA,MAAMm+B,EAAS,CACX,aAAa,CACT,KAAK,YAAc,IAAIX,GAAcpY,GAAmB,WAAY,EAAI,EACxE,KAAK,SAAW,IAAIoY,GAAc/J,GAAS,UAAU,EACrD,KAAK,QAAU,IAAI+J,GAAc,OAAQ,SAAS,EAClD,KAAK,OAAS,IAAIA,GAAc3G,GAAO,QAAQ,EAC/C,KAAK,iBAAmB,CACpB,KAAK,YACL,KAAK,OACL,KAAK,QACjB,CACK,CACJ,OAAO/0B,EAAM,CACN,KAAK,MAAM,WAAYA,CAAI,CAC9B,CACD,UAAUA,EAAM,CACZ,KAAK,MAAM,aAAcA,CAAI,CAChC,CACJ,kBAAkBA,EAAM,CACjB,KAAK,MAAM,WAAYA,EAAM,KAAK,WAAW,CAChD,CACJ,eAAeA,EAAM,CACd,KAAK,MAAM,WAAYA,EAAM,KAAK,QAAQ,CAC7C,CACJ,cAAcA,EAAM,CACb,KAAK,MAAM,WAAYA,EAAM,KAAK,OAAO,CAC5C,CACJ,aAAaA,EAAM,CACZ,KAAK,MAAM,WAAYA,EAAM,KAAK,MAAM,CAC3C,CACJ,cAAcb,EAAI,CACX,OAAO,KAAK,KAAKA,EAAI,KAAK,YAAa,YAAY,CACtD,CACJ,WAAWA,EAAI,CACR,OAAO,KAAK,KAAKA,EAAI,KAAK,SAAU,SAAS,CAChD,CACJ,UAAUA,EAAI,CACP,OAAO,KAAK,KAAKA,EAAI,KAAK,QAAS,QAAQ,CAC9C,CACJ,SAASA,EAAI,CACN,OAAO,KAAK,KAAKA,EAAI,KAAK,OAAQ,OAAO,CAC5C,CACJ,qBAAqBa,EAAM,CACpB,KAAK,MAAM,aAAcA,EAAM,KAAK,WAAW,CAClD,CACJ,kBAAkBA,EAAM,CACjB,KAAK,MAAM,aAAcA,EAAM,KAAK,QAAQ,CAC/C,CACJ,iBAAiBA,EAAM,CAChB,KAAK,MAAM,aAAcA,EAAM,KAAK,OAAO,CAC9C,CACJ,gBAAgBA,EAAM,CACf,KAAK,MAAM,aAAcA,EAAM,KAAK,MAAM,CAC7C,CACJ,MAAMgH,EAAQhH,EAAMs8B,EAAe,CAC5B,CACI,GAAGt8B,CACf,EAAU,QAASu8B,GAAM,CACb,MAAMC,EAAMF,GAAiB,KAAK,oBAAoBC,CAAG,EACrDD,GAAiBE,EAAI,UAAUD,CAAG,GAAKC,IAAQ,KAAK,SAAWD,EAAI,GACnE,KAAK,MAAMv1B,EAAQw1B,EAAKD,CAAG,EAE3Br8B,EAAKq8B,EAAMl6B,GAAO,CACd,MAAMo6B,EAAUH,GAAiB,KAAK,oBAAoBj6B,CAAI,EAC9D,KAAK,MAAM2E,EAAQy1B,EAASp6B,CAAI,CACpD,CAAiB,CAEjB,CAAS,CACJ,CACJ,MAAM2E,EAAQ01B,EAAUC,EAAW,CAC5B,MAAMC,EAAc36B,GAAY+E,CAAM,EACtClH,EAAS68B,EAAU,SAAWC,CAAW,EAAG,CAAA,EAAID,CAAS,EACzDD,EAAS11B,CAAM,EAAE21B,CAAS,EAC1B78B,EAAS68B,EAAU,QAAUC,CAAW,EAAG,CAAA,EAAID,CAAS,CAC3D,CACJ,oBAAoBp+B,EAAM,CACnB,QAAQlD,EAAI,EAAGA,EAAI,KAAK,iBAAiB,OAAQA,IAAI,CACjD,MAAMmhC,EAAM,KAAK,iBAAiBnhC,CAAC,EACnC,GAAImhC,EAAI,UAAUj+B,CAAI,EAClB,OAAOi+B,CAEd,CACD,OAAO,KAAK,OACf,CACJ,KAAKr9B,EAAIm9B,EAAe/9B,EAAM,CACvB,MAAM8D,EAAOi6B,EAAc,IAAIn9B,CAAE,EACjC,GAAIkD,IAAS,OACT,MAAM,IAAI,MAAM,IAAMlD,EAAK,yBAA2BZ,EAAO,GAAG,EAEpE,OAAO8D,CACV,CACL,CACA,IAAIq6B,GAA2B,IAAIL,GAEnC,MAAMQ,EAAc,CAChB,aAAa,CACT,KAAK,MAAQ,EAChB,CACJ,OAAOxvB,EAAOyvB,EAAM98B,EAAM+8B,EAAQ,CACvBD,IAAS,eACT,KAAK,MAAQ,KAAK,mBAAmBzvB,EAAO,EAAI,EAChD,KAAK,QAAQ,KAAK,MAAOA,EAAO,SAAS,GAE7C,MAAM3B,EAAcqxB,EAAS,KAAK,aAAa1vB,CAAK,EAAE,OAAO0vB,CAAM,EAAI,KAAK,aAAa1vB,CAAK,EACxFzJ,EAAS,KAAK,QAAQ8H,EAAa2B,EAAOyvB,EAAM98B,CAAI,EAC1D,OAAI88B,IAAS,iBACT,KAAK,QAAQpxB,EAAa2B,EAAO,MAAM,EACvC,KAAK,QAAQ,KAAK,MAAOA,EAAO,WAAW,GAExCzJ,CACV,CACJ,QAAQ8H,EAAa2B,EAAOyvB,EAAM98B,EAAM,CACjCA,EAAOA,GAAQ,GACf,UAAWg9B,KAActxB,EAAY,CACjC,MAAMuxB,EAASD,EAAW,OACpBh2B,EAASi2B,EAAOH,CAAI,EACpB7P,EAAS,CACX5f,EACArN,EACAg9B,EAAW,OAC3B,EACY,GAAIl9B,EAASkH,EAAQimB,EAAQgQ,CAAM,IAAM,IAASj9B,EAAK,WACnD,MAAO,EAEd,CACD,MAAO,EACV,CACD,YAAa,CACJZ,EAAc,KAAK,MAAM,IAC1B,KAAK,UAAY,KAAK,OACtB,KAAK,OAAS,OAErB,CACJ,aAAaiO,EAAO,CACb,GAAI,KAAK,OACL,OAAO,KAAK,OAEhB,MAAM3B,EAAc,KAAK,OAAS,KAAK,mBAAmB2B,CAAK,EAC/D,YAAK,oBAAoBA,CAAK,EACvB3B,CACV,CACD,mBAAmB2B,EAAO6vB,EAAK,CAC3B,MAAMzd,EAASpS,GAASA,EAAM,OACxBpM,EAAUtB,EAAe8f,EAAO,SAAWA,EAAO,QAAQ,QAAS,CAAA,CAAE,EACrE0d,EAAUC,GAAW3d,CAAM,EACjC,OAAOxe,IAAY,IAAS,CAACi8B,EAAM,CAAE,EAAGG,GAAkBhwB,EAAO8vB,EAASl8B,EAASi8B,CAAG,CACzF,CACJ,oBAAoB7vB,EAAO,CACpB,MAAMiwB,EAAsB,KAAK,WAAa,GACxC5xB,EAAc,KAAK,OACnB2nB,EAAO,CAAC54B,EAAGT,IAAIS,EAAE,OAAQ0I,GAAI,CAACnJ,EAAE,KAAMoJ,GAAID,EAAE,OAAO,KAAOC,EAAE,OAAO,EAAE,CAAC,EAC5E,KAAK,QAAQiwB,EAAKiK,EAAqB5xB,CAAW,EAAG2B,EAAO,MAAM,EAClE,KAAK,QAAQgmB,EAAK3nB,EAAa4xB,CAAmB,EAAGjwB,EAAO,OAAO,CACtE,CACL,CACC,SAAS+vB,GAAW3d,EAAQ,CACzB,MAAM8d,EAAW,CAAA,EACXJ,EAAU,CAAA,EACVrgC,EAAO,OAAO,KAAK4/B,GAAS,QAAQ,KAAK,EAC/C,QAAQrhC,EAAI,EAAGA,EAAIyB,EAAK,OAAQzB,IAC5B8hC,EAAQ,KAAKT,GAAS,UAAU5/B,EAAKzB,CAAC,CAAC,CAAC,EAE5C,MAAMoR,EAAQgT,EAAO,SAAW,GAChC,QAAQpkB,EAAI,EAAGA,EAAIoR,EAAM,OAAQpR,IAAI,CACjC,MAAM4hC,EAASxwB,EAAMpR,CAAC,EAClB8hC,EAAQ,QAAQF,CAAM,IAAM,KAC5BE,EAAQ,KAAKF,CAAM,EACnBM,EAASN,EAAO,EAAE,EAAI,GAE7B,CACD,MAAO,CACH,QAAAE,EACA,SAAAI,CACR,CACA,CACA,SAASC,GAAQv8B,EAASi8B,EAAK,CAC3B,MAAI,CAACA,GAAOj8B,IAAY,GACb,KAEPA,IAAY,GACL,GAEJA,CACX,CACA,SAASo8B,GAAkBhwB,EAAO,CAAE,QAAA8vB,EAAU,SAAAI,CAAW,EAAEt8B,EAASi8B,EAAK,CACrE,MAAMt5B,EAAS,CAAA,EACTsI,EAAUmB,EAAM,aACtB,UAAW4vB,KAAUE,EAAQ,CACzB,MAAMh+B,EAAK89B,EAAO,GACZ5tB,EAAOmuB,GAAQv8B,EAAQ9B,CAAE,EAAG+9B,CAAG,EACjC7tB,IAAS,MAGbzL,EAAO,KAAK,CACR,OAAAq5B,EACA,QAASQ,GAAWpwB,EAAM,OAAQ,CAC9B,OAAA4vB,EACA,MAAOM,EAASp+B,CAAE,CAClC,EAAekQ,EAAMnD,CAAO,CAC5B,CAAS,CACJ,CACD,OAAOtI,CACX,CACA,SAAS65B,GAAWhe,EAAQ,CAAE,OAAAwd,EAAS,MAAAxwB,CAAQ,EAAE4C,EAAMnD,EAAS,CAC5D,MAAMpP,EAAO2iB,EAAO,gBAAgBwd,CAAM,EACpCjrB,EAASyN,EAAO,gBAAgBpQ,EAAMvS,CAAI,EAChD,OAAI2P,GAASwwB,EAAO,UAChBjrB,EAAO,KAAKirB,EAAO,QAAQ,EAExBxd,EAAO,eAAezN,EAAQ9F,EAAS,CAC1C,EACR,EAAO,CACC,WAAY,GACZ,UAAW,GACX,QAAS,EACjB,CAAK,CACL,CAEA,SAASwxB,GAAan/B,EAAM0C,EAAS,CACjC,MAAM08B,EAAkBzzB,EAAS,SAAS3L,CAAI,GAAK,CAAA,EAEnD,QADwB0C,EAAQ,UAAY,CAAA,GAAI1C,CAAI,GAAK,IACnC,WAAa0C,EAAQ,WAAa08B,EAAgB,WAAa,GACzF,CACA,SAASC,GAA0Bz+B,EAAI4V,EAAW,CAC9C,IAAI/L,EAAO7J,EACX,OAAIA,IAAO,UACP6J,EAAO+L,EACA5V,IAAO,YACd6J,EAAO+L,IAAc,IAAM,IAAM,KAE9B/L,CACX,CACA,SAAS60B,GAA0B70B,EAAM+L,EAAW,CAChD,OAAO/L,IAAS+L,EAAY,UAAY,SAC5C,CACA,SAAS+oB,GAAc3+B,EAAI,CACvB,GAAIA,IAAO,KAAOA,IAAO,KAAOA,IAAO,IACnC,OAAOA,CAEf,CACA,SAAS4+B,GAAiBlT,EAAU,CAChC,GAAIA,IAAa,OAASA,IAAa,SACnC,MAAO,IAEX,GAAIA,IAAa,QAAUA,IAAa,QACpC,MAAO,GAEf,CACA,SAASmT,GAAc7+B,KAAO8+B,EAAc,CACxC,GAAIH,GAAc3+B,CAAE,EAChB,OAAOA,EAEX,UAAWkQ,KAAQ4uB,EAAa,CAC5B,MAAMj1B,EAAOqG,EAAK,MAAQ0uB,GAAiB1uB,EAAK,QAAQ,GAAKlQ,EAAG,OAAS,GAAK2+B,GAAc3+B,EAAG,CAAC,EAAE,YAAW,CAAE,EAC/G,GAAI6J,EACA,OAAOA,CAEd,CACD,MAAM,IAAI,MAAM,6BAA6B7J,CAAE,qDAAqD,CACxG,CACA,SAAS++B,GAAmB/+B,EAAI6J,EAAMua,EAAS,CAC3C,GAAIA,EAAQva,EAAO,QAAQ,IAAM7J,EAC7B,MAAO,CACH,KAAA6J,CACZ,CAEA,CACA,SAASm1B,GAAyBh/B,EAAIsgB,EAAQ,CAC1C,GAAIA,EAAO,MAAQA,EAAO,KAAK,SAAU,CACrC,MAAM2e,EAAU3e,EAAO,KAAK,SAAS,OAAQhkB,GAAIA,EAAE,UAAY0D,GAAM1D,EAAE,UAAY0D,CAAE,EACrF,GAAIi/B,EAAQ,OACR,OAAOF,GAAmB/+B,EAAI,IAAKi/B,EAAQ,CAAC,CAAC,GAAKF,GAAmB/+B,EAAI,IAAKi/B,EAAQ,CAAC,CAAC,CAE/F,CACD,MAAO,EACX,CACA,SAASC,GAAiB5e,EAAQxe,EAAS,CACvC,MAAMq9B,EAAgB7yB,GAAUgU,EAAO,IAAI,GAAK,CAC5C,OAAQ,CAAE,CAClB,EACU8e,EAAet9B,EAAQ,QAAU,GACjCu9B,EAAiBd,GAAaje,EAAO,KAAMxe,CAAO,EAClD2hB,EAAS,OAAO,OAAO,IAAI,EACjC,cAAO,KAAK2b,CAAY,EAAE,QAASp/B,GAAK,CACpC,MAAMs/B,EAAYF,EAAap/B,CAAE,EACjC,GAAI,CAACI,EAASk/B,CAAS,EACnB,OAAO,QAAQ,MAAM,0CAA0Ct/B,CAAE,EAAE,EAEvE,GAAIs/B,EAAU,OACV,OAAO,QAAQ,KAAK,kDAAkDt/B,CAAE,EAAE,EAE9E,MAAM6J,EAAOg1B,GAAc7+B,EAAIs/B,EAAWN,GAAyBh/B,EAAIsgB,CAAM,EAAGvV,EAAS,OAAOu0B,EAAU,IAAI,CAAC,EACzGC,EAAYb,GAA0B70B,EAAMw1B,CAAc,EAC1DG,EAAsBL,EAAc,QAAU,GACpD1b,EAAOzjB,CAAE,EAAIqC,GAAQ,OAAO,OAAO,IAAI,EAAG,CACtC,CACI,KAAAwH,CACH,EACDy1B,EACAE,EAAoB31B,CAAI,EACxB21B,EAAoBD,CAAS,CACzC,CAAS,CACT,CAAK,EACDjf,EAAO,KAAK,SAAS,QAAS8D,GAAU,CACpC,MAAMhlB,EAAOglB,EAAQ,MAAQ9D,EAAO,KAC9B1K,EAAYwO,EAAQ,WAAama,GAAan/B,EAAM0C,CAAO,EAE3D09B,GADkBlzB,GAAUlN,CAAI,GAAK,CAAA,GACC,QAAU,GACtD,OAAO,KAAKogC,CAAmB,EAAE,QAASC,GAAY,CAClD,MAAM51B,EAAO40B,GAA0BgB,EAAW7pB,CAAS,EACrD5V,EAAKokB,EAAQva,EAAO,QAAQ,GAAKA,EACvC4Z,EAAOzjB,CAAE,EAAIyjB,EAAOzjB,CAAE,GAAK,OAAO,OAAO,IAAI,EAC7CqC,GAAQohB,EAAOzjB,CAAE,EAAG,CAChB,CACI,KAAA6J,CACH,EACDu1B,EAAap/B,CAAE,EACfw/B,EAAoBC,CAAS,CAC7C,CAAa,CACb,CAAS,CACT,CAAK,EACD,OAAO,KAAKhc,CAAM,EAAE,QAAS7hB,GAAM,CAC/B,MAAMuf,EAAQsC,EAAO7hB,CAAG,EACxBS,GAAQ8e,EAAO,CACXpW,EAAS,OAAOoW,EAAM,IAAI,EAC1BpW,EAAS,KACrB,CAAS,CACT,CAAK,EACM0Y,CACX,CACA,SAASic,GAAYpf,EAAQ,CACzB,MAAMxe,EAAUwe,EAAO,UAAYA,EAAO,QAAU,CAAA,GACpDxe,EAAQ,QAAUtB,EAAesB,EAAQ,QAAS,CAAE,CAAA,EACpDA,EAAQ,OAASo9B,GAAiB5e,EAAQxe,CAAO,CACrD,CACA,SAAS69B,GAAS/xB,EAAM,CACpB,OAAAA,EAAOA,GAAQ,GACfA,EAAK,SAAWA,EAAK,UAAY,CAAA,EACjCA,EAAK,OAASA,EAAK,QAAU,CAAA,EACtBA,CACX,CACA,SAASgyB,GAAWtf,EAAQ,CACxB,OAAAA,EAASA,GAAU,GACnBA,EAAO,KAAOqf,GAASrf,EAAO,IAAI,EAClCof,GAAYpf,CAAM,EACXA,CACX,CACA,MAAMuf,GAAW,IAAI,IACfC,GAAa,IAAI,IACvB,SAASC,GAAW10B,EAAU20B,EAAU,CACpC,IAAIriC,EAAOkiC,GAAS,IAAIx0B,CAAQ,EAChC,OAAK1N,IACDA,EAAOqiC,EAAQ,EACfH,GAAS,IAAIx0B,EAAU1N,CAAI,EAC3BmiC,GAAW,IAAIniC,CAAI,GAEhBA,CACX,CACA,MAAMsiC,GAAa,CAAC33B,EAAKjJ,EAAKuC,IAAM,CAChC,MAAMsO,EAAOrN,GAAiBxD,EAAKuC,CAAG,EAClCsO,IAAS,QACT5H,EAAI,IAAI4H,CAAI,CAEpB,EACA,MAAMgwB,EAAO,CACT,YAAY5f,EAAO,CACf,KAAK,QAAUsf,GAAWtf,CAAM,EAChC,KAAK,YAAc,IAAI,IACvB,KAAK,eAAiB,IAAI,GAC7B,CACD,IAAI,UAAW,CACX,OAAO,KAAK,QAAQ,QACvB,CACD,IAAI,MAAO,CACP,OAAO,KAAK,QAAQ,IACvB,CACD,IAAI,KAAKlhB,EAAM,CACX,KAAK,QAAQ,KAAOA,CACvB,CACD,IAAI,MAAO,CACP,OAAO,KAAK,QAAQ,IACvB,CACD,IAAI,KAAKwO,EAAM,CACX,KAAK,QAAQ,KAAO+xB,GAAS/xB,CAAI,CACpC,CACD,IAAI,SAAU,CACV,OAAO,KAAK,QAAQ,OACvB,CACD,IAAI,QAAQ9L,EAAS,CACjB,KAAK,QAAQ,QAAUA,CAC1B,CACD,IAAI,SAAU,CACV,OAAO,KAAK,QAAQ,OACvB,CACD,QAAS,CACL,MAAMwe,EAAS,KAAK,QACpB,KAAK,WAAU,EACfof,GAAYpf,CAAM,CACrB,CACD,YAAa,CACT,KAAK,YAAY,QACjB,KAAK,eAAe,OACvB,CACJ,iBAAiB6f,EAAa,CACvB,OAAOJ,GAAWI,EAAa,IAAI,CAC3B,CACI,YAAYA,CAAW,GACvB,EACH,CACjB,CAAa,CACR,CACJ,0BAA0BA,EAAaja,EAAY,CAC5C,OAAO6Z,GAAW,GAAGI,CAAW,eAAeja,CAAU,GAAI,IAAI,CACzD,CACI,YAAYia,CAAW,gBAAgBja,CAAU,GACjD,eAAeA,CAAU,EAC5B,EACD,CACI,YAAYia,CAAW,GACvB,EACH,CACjB,CAAa,CACR,CACJ,wBAAwBA,EAAana,EAAa,CAC3C,OAAO+Z,GAAW,GAAGI,CAAW,IAAIna,CAAW,GAAI,IAAI,CAC/C,CACI,YAAYma,CAAW,aAAana,CAAW,GAC/C,YAAYma,CAAW,GACvB,YAAYna,CAAW,GACvB,EACH,CACjB,CAAa,CACR,CACJ,gBAAgB8X,EAAQ,CACjB,MAAM99B,EAAK89B,EAAO,GACZ1+B,EAAO,KAAK,KAClB,OAAO2gC,GAAW,GAAG3gC,CAAI,WAAWY,CAAE,GAAI,IAAI,CACtC,CACI,WAAWA,CAAE,GACb,GAAG89B,EAAO,wBAA0B,CAAE,CACzC,CACjB,CAAa,CACR,CACJ,cAAcsC,EAAWC,EAAY,CAC9B,MAAMC,EAAc,KAAK,YACzB,IAAIntB,EAAQmtB,EAAY,IAAIF,CAAS,EACrC,OAAI,CAACjtB,GAASktB,KACVltB,EAAQ,IAAI,IACZmtB,EAAY,IAAIF,EAAWjtB,CAAK,GAE7BA,CACV,CACJ,gBAAgBitB,EAAWG,EAAUF,EAAY,CAC1C,KAAM,CAAE,QAAAv+B,EAAU,KAAA1C,CAAO,EAAG,KACtB+T,EAAQ,KAAK,cAAcitB,EAAWC,CAAU,EAChDtc,EAAS5Q,EAAM,IAAIotB,CAAQ,EACjC,GAAIxc,EACA,OAAOA,EAEX,MAAMlR,EAAS,IAAI,IACnB0tB,EAAS,QAAS5iC,GAAO,CACjByiC,IACAvtB,EAAO,IAAIutB,CAAS,EACpBziC,EAAK,QAASiE,GAAMq+B,GAAWptB,EAAQutB,EAAWx+B,CAAG,CAAC,GAE1DjE,EAAK,QAASiE,GAAMq+B,GAAWptB,EAAQ/Q,EAASF,CAAG,CAAC,EACpDjE,EAAK,QAASiE,GAAMq+B,GAAWptB,EAAQvG,GAAUlN,CAAI,GAAK,GAAIwC,CAAG,CAAC,EAClEjE,EAAK,QAASiE,GAAMq+B,GAAWptB,EAAQ9H,EAAUnJ,CAAG,CAAC,EACrDjE,EAAK,QAASiE,GAAMq+B,GAAWptB,EAAQtG,GAAa3K,CAAG,CAAC,CACpE,CAAS,EACD,MAAMmD,EAAQ,MAAM,KAAK8N,CAAM,EAC/B,OAAI9N,EAAM,SAAW,GACjBA,EAAM,KAAK,OAAO,OAAO,IAAI,CAAC,EAE9B+6B,GAAW,IAAIS,CAAQ,GACvBptB,EAAM,IAAIotB,EAAUx7B,CAAK,EAEtBA,CACV,CACJ,mBAAoB,CACb,KAAM,CAAE,QAAAjD,EAAU,KAAA1C,CAAO,EAAG,KAC5B,MAAO,CACH0C,EACAwK,GAAUlN,CAAI,GAAK,CAAE,EACrB2L,EAAS,SAAS3L,CAAI,GAAK,CAAE,EAC7B,CACI,KAAAA,CACH,EACD2L,EACAwB,EACZ,CACK,CACJ,oBAAoBsG,EAAQ7U,EAAO+O,EAAS+F,EAAW,CAChD,EACR,EAAO,CACC,MAAMrO,EAAS,CACX,QAAS,EACrB,EACc,CAAE,SAAAqQ,EAAW,YAAA0rB,GAAiBC,GAAY,KAAK,eAAgB5tB,EAAQC,CAAQ,EACrF,IAAIhR,EAAUgT,EACd,GAAI4rB,GAAY5rB,EAAU9W,CAAK,EAAG,CAC9ByG,EAAO,QAAU,GACjBsI,EAAU/J,GAAW+J,CAAO,EAAIA,EAAO,EAAKA,EAC5C,MAAM4zB,EAAc,KAAK,eAAe9tB,EAAQ9F,EAASyzB,CAAW,EACpE1+B,EAAU0R,GAAesB,EAAU/H,EAAS4zB,CAAW,CAC1D,CACD,UAAWjvB,KAAQ1T,EACfyG,EAAOiN,CAAI,EAAI5P,EAAQ4P,CAAI,EAE/B,OAAOjN,CACV,CACJ,eAAeoO,EAAQ9F,EAAS+F,EAAW,CACpC,EACH,EAAEa,EAAoB,CACnB,KAAM,CAAE,SAAAmB,CAAQ,EAAM2rB,GAAY,KAAK,eAAgB5tB,EAAQC,CAAQ,EACvE,OAAO1S,EAAS2M,CAAO,EAAIyG,GAAesB,EAAU/H,EAAS,OAAW4G,CAAkB,EAAImB,CACjG,CACL,CACA,SAAS2rB,GAAYG,EAAe/tB,EAAQC,EAAU,CAClD,IAAIK,EAAQytB,EAAc,IAAI/tB,CAAM,EAC/BM,IACDA,EAAQ,IAAI,IACZytB,EAAc,IAAI/tB,EAAQM,CAAK,GAEnC,MAAM9H,EAAWyH,EAAS,OAC1B,IAAIiR,EAAS5Q,EAAM,IAAI9H,CAAQ,EAC/B,OAAK0Y,IAEDA,EAAS,CACL,SAFanR,GAAgBC,EAAQC,CAAQ,EAG7C,YAAaA,EAAS,OAAQnT,GAAI,CAACA,EAAE,YAAa,EAAC,SAAS,OAAO,CAAC,CAChF,EACQwT,EAAM,IAAI9H,EAAU0Y,CAAM,GAEvBA,CACX,CACA,MAAM8c,GAAe3gC,GAAQE,EAASF,CAAK,GAAK,OAAO,oBAAoBA,CAAK,EAAE,KAAM0B,GAAMoB,GAAW9C,EAAM0B,CAAG,CAAC,CAAC,EACpH,SAAS8+B,GAAYjtB,EAAOzV,EAAO,CAC/B,KAAM,CAAE,aAAA8iC,EAAe,YAAAlsB,CAAc,EAAG/H,GAAa4G,CAAK,EAC1D,UAAW/B,KAAQ1T,EAAM,CACrB,MAAM+iC,EAAaD,EAAapvB,CAAI,EAC9BsvB,EAAYpsB,EAAYlD,CAAI,EAC5BxR,GAAS8gC,GAAaD,IAAettB,EAAM/B,CAAI,EACrD,GAAIqvB,IAAe/9B,GAAW9C,CAAK,GAAK2gC,GAAY3gC,CAAK,IAAM8gC,GAAa7gC,EAAQD,CAAK,EACrF,MAAO,EAEd,CACD,MAAO,EACX,CAEA,IAAI+gC,GAAU,QAEd,MAAMC,GAAkB,CACpB,MACA,SACA,OACA,QACA,WACJ,EACA,SAASC,GAAqBzV,EAAU7hB,EAAM,CAC1C,OAAO6hB,IAAa,OAASA,IAAa,UAAYwV,GAAgB,QAAQxV,CAAQ,IAAM,IAAM7hB,IAAS,GAC/G,CACA,SAASu3B,GAAcC,EAAIC,EAAI,CAC3B,OAAO,SAAShmC,EAAGT,EAAG,CAClB,OAAOS,EAAE+lC,CAAE,IAAMxmC,EAAEwmC,CAAE,EAAI/lC,EAAEgmC,CAAE,EAAIzmC,EAAEymC,CAAE,EAAIhmC,EAAE+lC,CAAE,EAAIxmC,EAAEwmC,CAAE,CAC7D,CACA,CACA,SAASE,GAAqBx0B,EAAS,CACnC,MAAMmB,EAAQnB,EAAQ,MAChBwT,EAAmBrS,EAAM,QAAQ,UACvCA,EAAM,cAAc,aAAa,EACjCvN,EAAS4f,GAAoBA,EAAiB,WAAY,CACtDxT,CACH,EAAEmB,CAAK,CACZ,CACA,SAASszB,GAAoBz0B,EAAS,CAClC,MAAMmB,EAAQnB,EAAQ,MAChBwT,EAAmBrS,EAAM,QAAQ,UACvCvN,EAAS4f,GAAoBA,EAAiB,WAAY,CACtDxT,CACH,EAAEmB,CAAK,CACZ,CACC,SAASuzB,GAAUv+B,EAAM,CACtB,OAAIiV,GAAiB,GAAI,OAAOjV,GAAS,SACrCA,EAAO,SAAS,eAAeA,CAAI,EAC5BA,GAAQA,EAAK,SACpBA,EAAOA,EAAK,CAAC,GAEbA,GAAQA,EAAK,SACbA,EAAOA,EAAK,QAETA,CACX,CACA,MAAMw+B,GAAY,CAAA,EACZC,GAAY//B,GAAM,CACpB,MAAM4M,EAASizB,GAAU7/B,CAAG,EAC5B,OAAO,OAAO,OAAO8/B,EAAS,EAAE,OAAQ/kC,GAAIA,EAAE,SAAW6R,CAAM,EAAE,IAAG,CACxE,EACA,SAASozB,GAAgBviC,EAAK8G,EAAOwgB,EAAM,CACvC,MAAMhpB,EAAO,OAAO,KAAK0B,CAAG,EAC5B,UAAWuC,KAAOjE,EAAK,CACnB,MAAMkkC,EAAS,CAACjgC,EAChB,GAAIigC,GAAU17B,EAAO,CACjB,MAAMjG,EAAQb,EAAIuC,CAAG,EACrB,OAAOvC,EAAIuC,CAAG,GACV+kB,EAAO,GAAKkb,EAAS17B,KACrB9G,EAAIwiC,EAASlb,CAAI,EAAIzmB,EAE5B,CACJ,CACL,CACC,SAAS4hC,GAAmB1+B,EAAG2+B,EAAWC,EAAaC,EAAS,CAC7D,MAAI,CAACD,GAAe5+B,EAAE,OAAS,WACpB,KAEP6+B,EACOF,EAEJ3+B,CACX,CACA,SAAS8+B,GAAe/gB,EAAOqN,EAAW2T,EAAO,CAC7C,OAAOhhB,EAAM,QAAQ,KAAOA,EAAMghB,CAAK,EAAI3T,EAAU2T,CAAK,CAC9D,CACA,SAASC,GAAe94B,EAAMklB,EAAW,CACrC,KAAM,CAAE,OAAAvkB,EAAS,OAAAC,CAAS,EAAGZ,EAC7B,OAAIW,GAAUC,EACH,CACH,KAAMg4B,GAAej4B,EAAQukB,EAAW,MAAM,EAC9C,MAAO0T,GAAej4B,EAAQukB,EAAW,OAAO,EAChD,IAAK0T,GAAeh4B,EAAQskB,EAAW,KAAK,EAC5C,OAAQ0T,GAAeh4B,EAAQskB,EAAW,QAAQ,CAC9D,EAEWA,CACX,CACA,IAAA6T,GAAA,KAAY,CACR,OAAO,SAAWt3B,EAClB,OAAO,UAAY22B,GACnB,OAAO,UAAYp1B,GACnB,OAAO,SAAWixB,GAClB,OAAO,QAAU0D,GACjB,OAAO,SAAWU,GAClB,OAAO,YAAYt5B,EAAO,CACtBk1B,GAAS,IAAI,GAAGl1B,CAAK,EACrBi6B,IACH,CACD,OAAO,cAAcj6B,EAAO,CACxBk1B,GAAS,OAAO,GAAGl1B,CAAK,EACxBi6B,IACH,CACD,YAAYp/B,EAAMq/B,EAAW,CACzB,MAAMjiB,EAAS,KAAK,OAAS,IAAI4f,GAAOqC,CAAU,EAC5CC,EAAgBf,GAAUv+B,CAAI,EAC9Bu/B,EAAgBd,GAASa,CAAa,EAC5C,GAAIC,EACA,MAAM,IAAI,MAAM,4CAA+CA,EAAc,GAAK,kDAA2DA,EAAc,OAAO,GAAK,kBAAmB,EAE9L,MAAM3gC,EAAUwe,EAAO,eAAeA,EAAO,oBAAqB,KAAK,WAAU,CAAE,EACnF,KAAK,SAAW,IAAKA,EAAO,UAAYiS,GAAgBiQ,CAAa,GACrE,KAAK,SAAS,aAAaliB,CAAM,EACjC,MAAMvT,EAAU,KAAK,SAAS,eAAey1B,EAAe1gC,EAAQ,WAAW,EACzE0M,EAASzB,GAAWA,EAAQ,OAC5BgN,EAASvL,GAAUA,EAAO,OAC1BJ,EAAQI,GAAUA,EAAO,MA6B/B,GA5BA,KAAK,GAAKzO,KACV,KAAK,IAAMgN,EACX,KAAK,OAASyB,EACd,KAAK,MAAQJ,EACb,KAAK,OAAS2L,EACd,KAAK,SAAWjY,EAChB,KAAK,aAAe,KAAK,YACzB,KAAK,QAAU,GACf,KAAK,UAAY,GACjB,KAAK,QAAU,OACf,KAAK,MAAQ,GACb,KAAK,wBAA0B,OAC/B,KAAK,UAAY,OACjB,KAAK,QAAU,GACf,KAAK,WAAa,OAClB,KAAK,WAAa,GACjB,KAAK,qBAAuB,OAC7B,KAAK,gBAAkB,GACvB,KAAK,OAAS,GACd,KAAK,SAAW,IAAI47B,GACpB,KAAK,SAAW,GAChB,KAAK,eAAiB,GACtB,KAAK,SAAW,GAChB,KAAK,oBAAsB,OAC3B,KAAK,SAAW,OAChB,KAAK,UAAY/0B,GAAUmH,GAAO,KAAK,OAAOA,CAAI,EAAGhO,EAAQ,aAAe,CAAC,EAC7E,KAAK,aAAe,GACpB4/B,GAAU,KAAK,EAAE,EAAI,KACjB,CAAC30B,GAAW,CAACyB,EAAQ,CACrB,QAAQ,MAAM,mEAAmE,EACjF,MACH,CACDgR,GAAS,OAAO,KAAM,WAAY+hB,EAAoB,EACtD/hB,GAAS,OAAO,KAAM,WAAYgiB,EAAmB,EACrD,KAAK,YAAW,EACZ,KAAK,UACL,KAAK,OAAM,CAElB,CACD,IAAI,aAAc,CACd,KAAM,CAAE,QAAS,CAAE,YAAA7mB,EAAc,oBAAA+nB,CAAmB,EAAM,MAAAt0B,EAAQ,OAAA2L,EAAS,aAAA4oB,CAAe,EAAG,KAC7F,OAAK1iC,EAAc0a,CAAW,EAG1B+nB,GAAuBC,EAChBA,EAEJ5oB,EAAS3L,EAAQ2L,EAAS,KALtBY,CAMd,CACD,IAAI,MAAO,CACP,OAAO,KAAK,OAAO,IACtB,CACD,IAAI,KAAK/M,EAAM,CACX,KAAK,OAAO,KAAOA,CACtB,CACD,IAAI,SAAU,CACV,OAAO,KAAK,QACf,CACD,IAAI,QAAQ9L,EAAS,CACjB,KAAK,OAAO,QAAUA,CACzB,CACD,IAAI,UAAW,CACX,OAAOy7B,EACV,CACJ,aAAc,CACP,YAAK,cAAc,YAAY,EAC3B,KAAK,QAAQ,WACb,KAAK,OAAM,EAEXziB,GAAY,KAAM,KAAK,QAAQ,gBAAgB,EAEnD,KAAK,WAAU,EACf,KAAK,cAAc,WAAW,EACvB,IACV,CACD,OAAQ,CACJ,OAAAvM,GAAY,KAAK,OAAQ,KAAK,GAAG,EAC1B,IACV,CACD,MAAO,CACH,OAAAiR,GAAS,KAAK,IAAI,EACX,IACV,CACJ,OAAOpR,EAAO2L,EAAQ,CACVyF,GAAS,QAAQ,IAAI,EAGtB,KAAK,kBAAoB,CACrB,MAAApR,EACA,OAAA2L,CAChB,EALY,KAAK,QAAQ3L,EAAO2L,CAAM,CAOjC,CACD,QAAQ3L,EAAO2L,EAAQ,CACnB,MAAMjY,EAAU,KAAK,QACf0M,EAAS,KAAK,OACdmM,EAAc7Y,EAAQ,qBAAuB,KAAK,YAClD8gC,EAAU,KAAK,SAAS,eAAep0B,EAAQJ,EAAO2L,EAAQY,CAAW,EACzEkoB,EAAW/gC,EAAQ,kBAAoB,KAAK,SAAS,sBACrDgO,EAAO,KAAK,MAAQ,SAAW,SACrC,KAAK,MAAQ8yB,EAAQ,MACrB,KAAK,OAASA,EAAQ,OACtB,KAAK,aAAe,KAAK,YACpB9nB,GAAY,KAAM+nB,EAAU,EAAI,IAGrC,KAAK,cAAc,SAAU,CACzB,KAAMD,CAClB,CAAS,EACDjiC,EAASmB,EAAQ,SAAU,CACvB,KACA8gC,CACH,EAAE,IAAI,EACH,KAAK,UACD,KAAK,UAAU9yB,CAAI,GACnB,KAAK,OAAM,EAGtB,CACD,qBAAsB,CAElB,MAAMgzB,EADU,KAAK,QACS,QAAU,GACxC/hC,EAAK+hC,EAAe,CAACC,EAAa1G,IAAS,CACvC0G,EAAY,GAAK1G,CAC7B,CAAS,CACJ,CACJ,qBAAsB,CACf,MAAMv6B,EAAU,KAAK,QACfkhC,EAAYlhC,EAAQ,OACpB2hB,EAAS,KAAK,OACdwf,EAAU,OAAO,KAAKxf,CAAM,EAAE,OAAO,CAACpkB,EAAKW,KAC7CX,EAAIW,CAAE,EAAI,GACHX,GACR,CAAE,CAAA,EACL,IAAIgJ,EAAQ,CAAA,EACR26B,IACA36B,EAAQA,EAAM,OAAO,OAAO,KAAK26B,CAAS,EAAE,IAAKhjC,GAAK,CAClD,MAAM8+B,EAAekE,EAAUhjC,CAAE,EAC3B6J,EAAOg1B,GAAc7+B,EAAI8+B,CAAY,EACrCoE,EAAWr5B,IAAS,IACpBstB,EAAettB,IAAS,IAC9B,MAAO,CACH,QAASi1B,EACT,UAAWoE,EAAW,YAAc/L,EAAe,SAAW,OAC9D,MAAO+L,EAAW,eAAiB/L,EAAe,WAAa,QACnF,CACa,CAAA,CAAC,GAENp2B,EAAKsH,EAAQnF,GAAO,CAChB,MAAM47B,EAAe57B,EAAK,QACpBlD,EAAK8+B,EAAa,GAClBj1B,EAAOg1B,GAAc7+B,EAAI8+B,CAAY,EACrCqE,EAAY3iC,EAAes+B,EAAa,KAAM57B,EAAK,KAAK,GAC1D47B,EAAa,WAAa,QAAaqC,GAAqBrC,EAAa,SAAUj1B,CAAI,IAAMs3B,GAAqBj+B,EAAK,SAAS,KAChI47B,EAAa,SAAW57B,EAAK,WAEjC+/B,EAAQjjC,CAAE,EAAI,GACd,IAAImhB,EAAQ,KACZ,GAAInhB,KAAMyjB,GAAUA,EAAOzjB,CAAE,EAAE,OAASmjC,EACpChiB,EAAQsC,EAAOzjB,CAAE,MACd,CACH,MAAMojC,EAAa7F,GAAS,SAAS4F,CAAS,EAC9ChiB,EAAQ,IAAIiiB,EAAW,CACnB,GAAApjC,EACA,KAAMmjC,EACN,IAAK,KAAK,IACV,MAAO,IAC3B,CAAiB,EACD1f,EAAOtC,EAAM,EAAE,EAAIA,CACtB,CACDA,EAAM,KAAK2d,EAAch9B,CAAO,CAC5C,CAAS,EACDf,EAAKkiC,EAAS,CAACI,EAAYrjC,IAAK,CACvBqjC,GACD,OAAO5f,EAAOzjB,CAAE,CAEhC,CAAS,EACDe,EAAK0iB,EAAStC,GAAQ,CAClBwM,EAAQ,UAAU,KAAMxM,EAAOA,EAAM,OAAO,EAC5CwM,EAAQ,OAAO,KAAMxM,CAAK,CACtC,CAAS,CACJ,CACJ,iBAAkB,CACX,MAAMM,EAAW,KAAK,UAChBiF,EAAU,KAAK,KAAK,SAAS,OAC7BD,EAAUhF,EAAS,OAEzB,GADAA,EAAS,KAAK,CAACnmB,EAAGT,IAAIS,EAAE,MAAQT,EAAE,KAAK,EACnC4rB,EAAUC,EAAS,CACnB,QAAQxqB,EAAIwqB,EAASxqB,EAAIuqB,EAAS,EAAEvqB,EAChC,KAAK,oBAAoBA,CAAC,EAE9BulB,EAAS,OAAOiF,EAASD,EAAUC,CAAO,CAC7C,CACD,KAAK,gBAAkBjF,EAAS,MAAM,CAAC,EAAE,KAAK2f,GAAc,QAAS,OAAO,CAAC,CAChF,CACJ,6BAA8B,CACvB,KAAM,CAAE,UAAW3f,EAAW,KAAM,CAAE,SAAA6hB,CAAQ,CAAM,EAAG,KACnD7hB,EAAS,OAAS6hB,EAAS,QAC3B,OAAO,KAAK,QAEhB7hB,EAAS,QAAQ,CAACnY,EAAMtC,IAAQ,CACxBs8B,EAAS,OAAQt/B,GAAIA,IAAMsF,EAAK,QAAQ,EAAE,SAAW,GACrD,KAAK,oBAAoBtC,CAAK,CAE9C,CAAS,CACJ,CACD,0BAA2B,CACvB,MAAMu8B,EAAiB,CAAA,EACjBD,EAAW,KAAK,KAAK,SAC3B,IAAIpnC,EAAGmF,EAEP,IADA,KAAK,4BAA2B,EAC5BnF,EAAI,EAAGmF,EAAOiiC,EAAS,OAAQpnC,EAAImF,EAAMnF,IAAI,CAC7C,MAAMkoB,EAAUkf,EAASpnC,CAAC,EAC1B,IAAIoN,EAAO,KAAK,eAAepN,CAAC,EAChC,MAAMkD,EAAOglB,EAAQ,MAAQ,KAAK,OAAO,KAWzC,GAVI9a,EAAK,MAAQA,EAAK,OAASlK,IAC3B,KAAK,oBAAoBlD,CAAC,EAC1BoN,EAAO,KAAK,eAAepN,CAAC,GAEhCoN,EAAK,KAAOlK,EACZkK,EAAK,UAAY8a,EAAQ,WAAama,GAAan/B,EAAM,KAAK,OAAO,EACrEkK,EAAK,MAAQ8a,EAAQ,OAAS,EAC9B9a,EAAK,MAAQpN,EACboN,EAAK,MAAQ,GAAK8a,EAAQ,MAC1B9a,EAAK,QAAU,KAAK,iBAAiBpN,CAAC,EAClCoN,EAAK,WACLA,EAAK,WAAW,YAAYpN,CAAC,EAC7BoN,EAAK,WAAW,iBACb,CACH,MAAMk6B,EAAkBjG,GAAS,cAAcn+B,CAAI,EAC7C,CAAE,mBAAAqkC,EAAqB,gBAAAC,CAAe,EAAM34B,EAAS,SAAS3L,CAAI,EACxE,OAAO,OAAOokC,EAAiB,CAC3B,gBAAiBjG,GAAS,WAAWmG,CAAe,EACpD,mBAAoBD,GAAsBlG,GAAS,WAAWkG,CAAkB,CACpG,CAAiB,EACDn6B,EAAK,WAAa,IAAIk6B,EAAgB,KAAMtnC,CAAC,EAC7CqnC,EAAe,KAAKj6B,EAAK,UAAU,CACtC,CACJ,CACD,YAAK,gBAAe,EACbi6B,CACV,CACJ,gBAAiB,CACVxiC,EAAK,KAAK,KAAK,SAAU,CAACqjB,EAAS7F,IAAe,CAC9C,KAAK,eAAeA,CAAY,EAAE,WAAW,MAAK,CACrD,EAAE,IAAI,CACV,CACJ,OAAQ,CACD,KAAK,eAAc,EACnB,KAAK,cAAc,OAAO,CAC7B,CACD,OAAOzO,EAAM,CACT,MAAMwQ,EAAS,KAAK,OACpBA,EAAO,OAAM,EACb,MAAMxe,EAAU,KAAK,SAAWwe,EAAO,eAAeA,EAAO,kBAAmB,EAAE,KAAK,WAAY,CAAA,EAC7FqjB,EAAgB,KAAK,oBAAsB,CAAC7hC,EAAQ,UAK1D,GAJA,KAAK,cAAa,EAClB,KAAK,oBAAmB,EACxB,KAAK,qBAAoB,EACzB,KAAK,SAAS,aACV,KAAK,cAAc,eAAgB,CACnC,KAAAgO,EACA,WAAY,EACf,CAAA,IAAM,GACH,OAEJ,MAAMyzB,EAAiB,KAAK,2BAC5B,KAAK,cAAc,sBAAsB,EACzC,IAAI1T,EAAa,EACjB,QAAQ3zB,EAAI,EAAGmF,EAAO,KAAK,KAAK,SAAS,OAAQnF,EAAImF,EAAMnF,IAAI,CAC3D,KAAM,CAAE,WAAAgnB,CAAa,EAAG,KAAK,eAAehnB,CAAC,EACvCgtB,EAAQ,CAACya,GAAiBJ,EAAe,QAAQrgB,CAAU,IAAM,GACvEA,EAAW,sBAAsBgG,CAAK,EACtC2G,EAAa,KAAK,IAAI,CAAC3M,EAAW,eAAc,EAAI2M,CAAU,CACjE,CACDA,EAAa,KAAK,YAAc/tB,EAAQ,OAAO,YAAc+tB,EAAa,EAC1E,KAAK,cAAcA,CAAU,EACxB8T,GACD5iC,EAAKwiC,EAAiBrgB,GAAa,CAC/BA,EAAW,MAAK,CAChC,CAAa,EAEL,KAAK,gBAAgBpT,CAAI,EACzB,KAAK,cAAc,cAAe,CAC9B,KAAAA,CACZ,CAAS,EACD,KAAK,QAAQ,KAAKsxB,GAAc,IAAK,MAAM,CAAC,EAC5C,KAAM,CAAE,QAAAwC,EAAU,WAAAC,CAAa,EAAG,KAC9BA,EACA,KAAK,cAAcA,EAAY,EAAI,EAC5BD,EAAQ,QACf,KAAK,mBAAmBA,EAASA,EAAS,EAAI,EAElD,KAAK,OAAM,CACd,CACJ,eAAgB,CACT7iC,EAAK,KAAK,OAASogB,GAAQ,CACvBwM,EAAQ,UAAU,KAAMxM,CAAK,CACzC,CAAS,EACD,KAAK,oBAAmB,EACxB,KAAK,oBAAmB,CAC3B,CACJ,qBAAsB,CACf,MAAMrf,EAAU,KAAK,QACfgiC,EAAiB,IAAI,IAAI,OAAO,KAAK,KAAK,UAAU,CAAC,EACrDC,EAAY,IAAI,IAAIjiC,EAAQ,MAAM,GACpC,CAACmB,GAAU6gC,EAAgBC,CAAS,GAAK,CAAC,CAAC,KAAK,uBAAyBjiC,EAAQ,cACjF,KAAK,aAAY,EACjB,KAAK,WAAU,EAEtB,CACJ,sBAAuB,CAChB,KAAM,CAAE,eAAAkiC,CAAiB,EAAG,KACtBC,EAAU,KAAK,uBAAsB,GAAM,CAAA,EACjD,SAAW,CAAE,OAAAp8B,EAAS,MAAA1B,EAAQ,MAAAuD,CAAK,IAAOu6B,EAAQ,CAC9C,MAAMtd,EAAO9e,IAAW,kBAAoB,CAAC6B,EAAQA,EACrDk4B,GAAgBoC,EAAgB79B,EAAOwgB,CAAI,CAC9C,CACJ,CACJ,wBAAyB,CAClB,MAAMud,EAAe,KAAK,aAC1B,GAAI,CAACA,GAAgB,CAACA,EAAa,OAC/B,OAEJ,KAAK,aAAe,GACpB,MAAMC,EAAe,KAAK,KAAK,SAAS,OAClCC,EAAWpL,GAAM,IAAI,IAAIkL,EAAa,OAAQvnC,GAAIA,EAAE,CAAC,IAAMq8B,CAAG,EAAE,IAAI,CAACr8B,EAAGT,IAAIA,EAAI,IAAMS,EAAE,OAAO,CAAC,EAAE,KAAK,GAAG,CAAC,CAAC,EAC5G0nC,EAAYD,EAAQ,CAAC,EAC3B,QAAQloC,EAAI,EAAGA,EAAIioC,EAAcjoC,IAC7B,GAAI,CAAC+G,GAAUohC,EAAWD,EAAQloC,CAAC,CAAC,EAChC,OAGR,OAAO,MAAM,KAAKmoC,CAAS,EAAE,IAAK1nC,GAAIA,EAAE,MAAM,GAAG,CAAC,EAAE,IAAKrB,IAAK,CACtD,OAAQA,EAAE,CAAC,EACX,MAAO,CAACA,EAAE,CAAC,EACX,MAAO,CAACA,EAAE,CAAC,CACd,EAAC,CACT,CACJ,cAAcu0B,EAAY,CACnB,GAAI,KAAK,cAAc,eAAgB,CACnC,WAAY,EACf,CAAA,IAAM,GACH,OAEJlC,EAAQ,OAAO,KAAM,KAAK,MAAO,KAAK,OAAQkC,CAAU,EACxD,MAAMtgB,EAAO,KAAK,UACZ+0B,EAAS/0B,EAAK,OAAS,GAAKA,EAAK,QAAU,EACjD,KAAK,QAAU,GACfxO,EAAK,KAAK,MAAQyY,GAAM,CAChB8qB,GAAU9qB,EAAI,WAAa,cAG3BA,EAAI,WACJA,EAAI,UAAS,EAEjB,KAAK,QAAQ,KAAK,GAAGA,EAAI,QAAS,CAAA,EACrC,EAAE,IAAI,EACP,KAAK,QAAQ,QAAQ,CAACtW,EAAM8D,IAAQ,CAChC9D,EAAK,KAAO8D,CACxB,CAAS,EACD,KAAK,cAAc,aAAa,CACnC,CACJ,gBAAgB8I,EAAM,CACf,GAAI,KAAK,cAAc,uBAAwB,CAC3C,KAAAA,EACA,WAAY,EACf,CAAA,IAAM,GAGP,SAAQ5T,EAAI,EAAGmF,EAAO,KAAK,KAAK,SAAS,OAAQnF,EAAImF,EAAM,EAAEnF,EACzD,KAAK,eAAeA,CAAC,EAAE,WAAW,UAAS,EAE/C,QAAQA,EAAI,EAAGmF,EAAO,KAAK,KAAK,SAAS,OAAQnF,EAAImF,EAAM,EAAEnF,EACzD,KAAK,eAAeA,EAAG8G,GAAW8M,CAAI,EAAIA,EAAK,CAC3C,aAAc5T,CAC9B,CAAa,EAAI4T,CAAI,EAEb,KAAK,cAAc,sBAAuB,CACtC,KAAAA,CACZ,CAAS,EACJ,CACJ,eAAe9I,EAAO8I,EAAM,CACrB,MAAMxG,EAAO,KAAK,eAAetC,CAAK,EAChCnG,EAAO,CACT,KAAAyI,EACA,MAAAtC,EACA,KAAA8I,EACA,WAAY,EACxB,EACY,KAAK,cAAc,sBAAuBjP,CAAI,IAAM,KAGxDyI,EAAK,WAAW,QAAQwG,CAAI,EAC5BjP,EAAK,WAAa,GAClB,KAAK,cAAc,qBAAsBA,CAAI,EAChD,CACD,QAAS,CACD,KAAK,cAAc,eAAgB,CACnC,WAAY,EACf,CAAA,IAAM,KAGH2e,GAAS,IAAI,IAAI,EACb,KAAK,UAAY,CAACA,GAAS,QAAQ,IAAI,GACvCA,GAAS,MAAM,IAAI,GAGvB,KAAK,KAAI,EACT+hB,GAAqB,CACjB,MAAO,IACvB,CAAa,GAER,CACD,MAAO,CACH,IAAIrlC,EACJ,GAAI,KAAK,kBAAmB,CACxB,KAAM,CAAE,MAAAkS,EAAQ,OAAA2L,GAAY,KAAK,kBACjC,KAAK,kBAAoB,KACzB,KAAK,QAAQ3L,EAAO2L,CAAM,CAC7B,CAKD,GAJA,KAAK,MAAK,EACN,KAAK,OAAS,GAAK,KAAK,QAAU,GAGlC,KAAK,cAAc,aAAc,CACjC,WAAY,EACf,CAAA,IAAM,GACH,OAEJ,MAAMwqB,EAAS,KAAK,QACpB,IAAIroC,EAAI,EAAGA,EAAIqoC,EAAO,QAAUA,EAAOroC,CAAC,EAAE,GAAK,EAAG,EAAEA,EAChDqoC,EAAOroC,CAAC,EAAE,KAAK,KAAK,SAAS,EAGjC,IADA,KAAK,cAAa,EACZA,EAAIqoC,EAAO,OAAQ,EAAEroC,EACvBqoC,EAAOroC,CAAC,EAAE,KAAK,KAAK,SAAS,EAEjC,KAAK,cAAc,WAAW,CACjC,CACJ,uBAAuBslB,EAAe,CAC/B,MAAMC,EAAW,KAAK,gBAChBhd,EAAS,CAAA,EACf,IAAIvI,EAAGmF,EACP,IAAInF,EAAI,EAAGmF,EAAOogB,EAAS,OAAQvlB,EAAImF,EAAM,EAAEnF,EAAE,CAC7C,MAAMoN,EAAOmY,EAASvlB,CAAC,GACnB,CAACslB,GAAiBlY,EAAK,UACvB7E,EAAO,KAAK6E,CAAI,CAEvB,CACD,OAAO7E,CACV,CACJ,8BAA+B,CACxB,OAAO,KAAK,uBAAuB,EAAI,CAC1C,CACJ,eAAgB,CACT,GAAI,KAAK,cAAc,qBAAsB,CACzC,WAAY,EACf,CAAA,IAAM,GACH,OAEJ,MAAMgd,EAAW,KAAK,+BACtB,QAAQvlB,EAAIulB,EAAS,OAAS,EAAGvlB,GAAK,EAAG,EAAEA,EACvC,KAAK,aAAaulB,EAASvlB,CAAC,CAAC,EAEjC,KAAK,cAAc,mBAAmB,CACzC,CACJ,aAAaoN,EAAM,CACZ,MAAM0D,EAAM,KAAK,IACXw3B,EAAOl7B,EAAK,MACZm7B,EAAU,CAACD,EAAK,SAChBj1B,EAAO6yB,GAAe94B,EAAM,KAAK,SAAS,EAC1CzI,EAAO,CACT,KAAAyI,EACA,MAAOA,EAAK,MACZ,WAAY,EACxB,EACY,KAAK,cAAc,oBAAqBzI,CAAI,IAAM,KAGlD4jC,GACAh1B,GAASzC,EAAK,CACV,KAAMw3B,EAAK,OAAS,GAAQ,EAAIj1B,EAAK,KAAOi1B,EAAK,KACjD,MAAOA,EAAK,QAAU,GAAQ,KAAK,MAAQj1B,EAAK,MAAQi1B,EAAK,MAC7D,IAAKA,EAAK,MAAQ,GAAQ,EAAIj1B,EAAK,IAAMi1B,EAAK,IAC9C,OAAQA,EAAK,SAAW,GAAQ,KAAK,OAASj1B,EAAK,OAASi1B,EAAK,MACjF,CAAa,EAELl7B,EAAK,WAAW,OACZm7B,GACA/0B,GAAW1C,CAAG,EAElBnM,EAAK,WAAa,GAClB,KAAK,cAAc,mBAAoBA,CAAI,EAC9C,CACJ,cAAcyO,EAAO,CACd,OAAOD,GAAeC,EAAO,KAAK,UAAW,KAAK,WAAW,CAChE,CACD,0BAA0BlM,EAAG0M,EAAMhO,EAASoqB,EAAkB,CAC1D,MAAMrkB,EAASolB,GAAY,MAAMnd,CAAI,EACrC,OAAI,OAAOjI,GAAW,WACXA,EAAO,KAAMzE,EAAGtB,EAASoqB,CAAgB,EAE7C,EACV,CACD,eAAe3N,EAAc,CACzB,MAAM6F,EAAU,KAAK,KAAK,SAAS7F,CAAY,EACzCkD,EAAW,KAAK,UACtB,IAAInY,EAAOmY,EAAS,OAAQzd,GAAIA,GAAKA,EAAE,WAAaogB,CAAO,EAAE,IAAG,EAChE,OAAK9a,IACDA,EAAO,CACH,KAAM,KACN,KAAM,CAAE,EACR,QAAS,KACT,WAAY,KACZ,OAAQ,KACR,QAAS,KACT,QAAS,KACT,MAAO8a,GAAWA,EAAQ,OAAS,EACnC,MAAO7F,EACP,SAAU6F,EACV,QAAS,CAAE,EACX,QAAS,EACzB,EACY3C,EAAS,KAAKnY,CAAI,GAEfA,CACV,CACD,YAAa,CACT,OAAO,KAAK,WAAa,KAAK,SAAWoJ,GAAc,KAAM,CACzD,MAAO,KACP,KAAM,OACT,CAAA,EACJ,CACD,wBAAyB,CACrB,OAAO,KAAK,6BAA8B,EAAC,MAC9C,CACD,iBAAiB6L,EAAc,CAC3B,MAAM6F,EAAU,KAAK,KAAK,SAAS7F,CAAY,EAC/C,GAAI,CAAC6F,EACD,MAAO,GAEX,MAAM9a,EAAO,KAAK,eAAeiV,CAAY,EAC7C,OAAO,OAAOjV,EAAK,QAAW,UAAY,CAACA,EAAK,OAAS,CAAC8a,EAAQ,MACrE,CACD,qBAAqB7F,EAAcmmB,EAAS,CACxC,MAAMp7B,EAAO,KAAK,eAAeiV,CAAY,EAC7CjV,EAAK,OAAS,CAACo7B,CAClB,CACD,qBAAqB19B,EAAO,CACxB,KAAK,eAAeA,CAAK,EAAI,CAAC,KAAK,eAAeA,CAAK,CAC1D,CACD,kBAAkBA,EAAO,CACrB,MAAO,CAAC,KAAK,eAAeA,CAAK,CACpC,CACJ,kBAAkBuX,EAAc+K,EAAWob,EAAS,CAC7C,MAAM50B,EAAO40B,EAAU,OAAS,OAC1Bp7B,EAAO,KAAK,eAAeiV,CAAY,EACvCQ,EAAQzV,EAAK,WAAW,mBAAmB,OAAWwG,CAAI,EAC5D/M,GAAQumB,CAAS,GACjBhgB,EAAK,KAAKggB,CAAS,EAAE,OAAS,CAACob,EAC/B,KAAK,OAAM,IAEX,KAAK,qBAAqBnmB,EAAcmmB,CAAO,EAC/C3lB,EAAM,OAAOzV,EAAM,CACf,QAAAo7B,CAChB,CAAa,EACD,KAAK,OAAQ13B,GAAMA,EAAI,eAAiBuR,EAAezO,EAAO,MAAS,EAE9E,CACD,KAAKyO,EAAc+K,EAAW,CAC1B,KAAK,kBAAkB/K,EAAc+K,EAAW,EAAK,CACxD,CACD,KAAK/K,EAAc+K,EAAW,CAC1B,KAAK,kBAAkB/K,EAAc+K,EAAW,EAAI,CACvD,CACJ,oBAAoB/K,EAAc,CAC3B,MAAMjV,EAAO,KAAK,UAAUiV,CAAY,EACpCjV,GAAQA,EAAK,YACbA,EAAK,WAAW,WAEpB,OAAO,KAAK,UAAUiV,CAAY,CACrC,CACD,OAAQ,CACJ,IAAIriB,EAAGmF,EAGP,IAFA,KAAK,KAAI,EACTme,GAAS,OAAO,IAAI,EAChBtjB,EAAI,EAAGmF,EAAO,KAAK,KAAK,SAAS,OAAQnF,EAAImF,EAAM,EAAEnF,EACrD,KAAK,oBAAoBA,CAAC,CAEjC,CACD,SAAU,CACN,KAAK,cAAc,eAAe,EAClC,KAAM,CAAE,OAAAsS,EAAS,IAAAxB,CAAM,EAAG,KAC1B,KAAK,MAAK,EACV,KAAK,OAAO,aACRwB,IACA,KAAK,aAAY,EACjBD,GAAYC,EAAQxB,CAAG,EACvB,KAAK,SAAS,eAAeA,CAAG,EAChC,KAAK,OAAS,KACd,KAAK,IAAM,MAEf,OAAO00B,GAAU,KAAK,EAAE,EACxB,KAAK,cAAc,cAAc,CACpC,CACD,iBAAiB7gC,EAAM,CACnB,OAAO,KAAK,OAAO,UAAU,GAAGA,CAAI,CACvC,CACJ,YAAa,CACN,KAAK,eAAc,EACf,KAAK,QAAQ,WACb,KAAK,qBAAoB,EAEzB,KAAK,SAAW,EAEvB,CACJ,gBAAiB,CACV,MAAMsH,EAAY,KAAK,WACjBw8B,EAAW,KAAK,SAChBC,EAAO,CAACxlC,EAAMwI,IAAW,CAC3B+8B,EAAS,iBAAiB,KAAMvlC,EAAMwI,CAAQ,EAC9CO,EAAU/I,CAAI,EAAIwI,CAC9B,EACcA,EAAW,CAACxE,EAAGY,EAAGC,IAAI,CACxBb,EAAE,QAAUY,EACZZ,EAAE,QAAUa,EACZ,KAAK,cAAcb,CAAC,CAChC,EACQrC,EAAK,KAAK,QAAQ,OAAS3B,GAAOwlC,EAAKxlC,EAAMwI,CAAQ,CAAC,CACzD,CACJ,sBAAuB,CACX,KAAK,uBACN,KAAK,qBAAuB,IAEhC,MAAMO,EAAY,KAAK,qBACjBw8B,EAAW,KAAK,SAChBC,EAAO,CAACxlC,EAAMwI,IAAW,CAC3B+8B,EAAS,iBAAiB,KAAMvlC,EAAMwI,CAAQ,EAC9CO,EAAU/I,CAAI,EAAIwI,CAC9B,EACci9B,EAAU,CAACzlC,EAAMwI,IAAW,CAC1BO,EAAU/I,CAAI,IACdulC,EAAS,oBAAoB,KAAMvlC,EAAMwI,CAAQ,EACjD,OAAOO,EAAU/I,CAAI,EAErC,EACcwI,EAAW,CAACwG,EAAO2L,IAAS,CAC1B,KAAK,QACL,KAAK,OAAO3L,EAAO2L,CAAM,CAEzC,EACQ,IAAI+qB,EACJ,MAAMC,EAAW,IAAI,CACjBF,EAAQ,SAAUE,CAAQ,EAC1B,KAAK,SAAW,GAChB,KAAK,OAAM,EACXH,EAAK,SAAUh9B,CAAQ,EACvBg9B,EAAK,SAAUE,CAAQ,CACnC,EACQA,EAAW,IAAI,CACX,KAAK,SAAW,GAChBD,EAAQ,SAAUj9B,CAAQ,EAC1B,KAAK,MAAK,EACV,KAAK,QAAQ,EAAG,CAAC,EACjBg9B,EAAK,SAAUG,CAAQ,CACnC,EACYJ,EAAS,WAAW,KAAK,MAAM,EAC/BI,IAEAD,GAEP,CACJ,cAAe,CACR/jC,EAAK,KAAK,WAAY,CAAC6G,EAAUxI,IAAO,CACpC,KAAK,SAAS,oBAAoB,KAAMA,EAAMwI,CAAQ,CAClE,CAAS,EACD,KAAK,WAAa,GAClB7G,EAAK,KAAK,qBAAsB,CAAC6G,EAAUxI,IAAO,CAC9C,KAAK,SAAS,oBAAoB,KAAMA,EAAMwI,CAAQ,CAClE,CAAS,EACD,KAAK,qBAAuB,MAC/B,CACD,iBAAiBS,EAAOyH,EAAMk1B,EAAS,CACnC,MAAM9wB,EAAS8wB,EAAU,MAAQ,SACjC,IAAI17B,EAAMpG,EAAMhH,EAAGmF,EAKnB,IAJIyO,IAAS,YACTxG,EAAO,KAAK,eAAejB,EAAM,CAAC,EAAE,YAAY,EAChDiB,EAAK,WAAW,IAAM4K,EAAS,mBAAmB,EAAC,GAEnDhY,EAAI,EAAGmF,EAAOgH,EAAM,OAAQnM,EAAImF,EAAM,EAAEnF,EAAE,CAC1CgH,EAAOmF,EAAMnM,CAAC,EACd,MAAMgnB,EAAahgB,GAAQ,KAAK,eAAeA,EAAK,YAAY,EAAE,WAC9DggB,GACAA,EAAWhP,EAAS,YAAY,EAAEhR,EAAK,QAASA,EAAK,aAAcA,EAAK,KAAK,CAEpF,CACJ,CACJ,mBAAoB,CACb,OAAO,KAAK,SAAW,EAC1B,CACJ,kBAAkB+hC,EAAgB,CAC3B,MAAMC,EAAa,KAAK,SAAW,GAC7Bpf,EAASmf,EAAe,IAAI,CAAC,CAAE,aAAA1mB,EAAe,MAAAvX,KAAW,CAC3D,MAAMsC,EAAO,KAAK,eAAeiV,CAAY,EAC7C,GAAI,CAACjV,EACD,MAAM,IAAI,MAAM,6BAA+BiV,CAAY,EAE/D,MAAO,CACH,aAAAA,EACA,QAASjV,EAAK,KAAKtC,CAAK,EACxB,MAAAA,CAChB,CACA,CAAS,EACe,CAAC9F,GAAe4kB,EAAQof,CAAU,IAE9C,KAAK,QAAUpf,EACf,KAAK,WAAa,KAClB,KAAK,mBAAmBA,EAAQof,CAAU,EAEjD,CACJ,cAAcvH,EAAM98B,EAAM+8B,EAAQ,CAC3B,OAAO,KAAK,SAAS,OAAO,KAAMD,EAAM98B,EAAM+8B,CAAM,CACvD,CACJ,gBAAgBuH,EAAU,CACnB,OAAO,KAAK,SAAS,OAAO,OAAQxlC,GAAIA,EAAE,OAAO,KAAOwlC,CAAQ,EAAE,SAAW,CAChF,CACJ,mBAAmBrf,EAAQof,EAAYE,EAAQ,CACxC,MAAMC,EAAe,KAAK,QAAQ,MAC5BnR,EAAO,CAAC54B,EAAGT,IAAIS,EAAE,OAAQ0I,GAAI,CAACnJ,EAAE,KAAMoJ,GAAID,EAAE,eAAiBC,EAAE,cAAgBD,EAAE,QAAUC,EAAE,KAAK,CAAC,EACnGqhC,EAAcpR,EAAKgR,EAAYpf,CAAM,EACrCyf,EAAYH,EAAStf,EAASoO,EAAKpO,EAAQof,CAAU,EACvDI,EAAY,QACZ,KAAK,iBAAiBA,EAAaD,EAAa,KAAM,EAAK,EAE3DE,EAAU,QAAUF,EAAa,MACjC,KAAK,iBAAiBE,EAAWF,EAAa,KAAM,EAAI,CAE/D,CACJ,cAAcjiC,EAAGgiC,EAAQ,CAClB,MAAMvkC,EAAO,CACT,MAAOuC,EACP,OAAAgiC,EACA,WAAY,GACZ,YAAa,KAAK,cAAchiC,CAAC,CAC7C,EACcoiC,EAAe1H,IAAUA,EAAO,QAAQ,QAAU,KAAK,QAAQ,QAAQ,SAAS16B,EAAE,OAAO,IAAI,EACnG,GAAI,KAAK,cAAc,cAAevC,EAAM2kC,CAAW,IAAM,GACzD,OAEJ,MAAMn7B,EAAU,KAAK,aAAajH,EAAGgiC,EAAQvkC,EAAK,WAAW,EAC7D,OAAAA,EAAK,WAAa,GAClB,KAAK,cAAc,aAAcA,EAAM2kC,CAAW,GAC9Cn7B,GAAWxJ,EAAK,UAChB,KAAK,OAAM,EAER,IACV,CACJ,aAAauC,EAAGgiC,EAAQpD,EAAa,CAC9B,KAAM,CAAE,QAASkD,EAAa,CAAE,EAAG,QAAApjC,CAAO,EAAM,KAC1CoqB,EAAmBkZ,EACnBtf,EAAS,KAAK,mBAAmB1iB,EAAG8hC,EAAYlD,EAAa9V,CAAgB,EAC7E+V,EAAU9+B,GAAcC,CAAC,EACzB2+B,EAAYD,GAAmB1+B,EAAG,KAAK,WAAY4+B,EAAaC,CAAO,EACzED,IACA,KAAK,WAAa,KAClBrhC,EAASmB,EAAQ,QAAS,CACtBsB,EACA0iB,EACA,IACH,EAAE,IAAI,EACHmc,GACAthC,EAASmB,EAAQ,QAAS,CACtBsB,EACA0iB,EACA,IACH,EAAE,IAAI,GAGf,MAAMzb,EAAU,CAACnJ,GAAe4kB,EAAQof,CAAU,EAClD,OAAI76B,GAAW+6B,KACX,KAAK,QAAUtf,EACf,KAAK,mBAAmBA,EAAQof,EAAYE,CAAM,GAEtD,KAAK,WAAarD,EACX13B,CACV,CACJ,mBAAmBjH,EAAG8hC,EAAYlD,EAAa9V,EAAkB,CAC1D,GAAI9oB,EAAE,OAAS,WACX,MAAO,GAEX,GAAI,CAAC4+B,EACD,OAAOkD,EAEX,MAAMG,EAAe,KAAK,QAAQ,MAClC,OAAO,KAAK,0BAA0BjiC,EAAGiiC,EAAa,KAAMA,EAAcnZ,CAAgB,CAC7F,CACL,EACA,SAASoW,IAAoB,CACzB,OAAOvhC,EAAK0kC,GAAM,UAAYv3B,GAAQA,EAAM,SAAS,WAAU,CAAE,CACrE,CAkTA,SAASw3B,GAAS14B,EAAKlL,EAASmN,EAAQnN,EAAS,CAC7CkL,EAAI,QAAUxM,EAAeyO,EAAM,eAAgBnN,EAAQ,cAAc,EACzEkL,EAAI,YAAYxM,EAAeyO,EAAM,WAAYnN,EAAQ,UAAU,CAAC,EACpEkL,EAAI,eAAiBxM,EAAeyO,EAAM,iBAAkBnN,EAAQ,gBAAgB,EACpFkL,EAAI,SAAWxM,EAAeyO,EAAM,gBAAiBnN,EAAQ,eAAe,EAC5EkL,EAAI,UAAYxM,EAAeyO,EAAM,YAAanN,EAAQ,WAAW,EACrEkL,EAAI,YAAcxM,EAAeyO,EAAM,YAAanN,EAAQ,WAAW,CAC3E,CACA,SAAS6jC,GAAO34B,EAAK4C,EAAUnO,EAAQ,CACnCuL,EAAI,OAAOvL,EAAO,EAAGA,EAAO,CAAC,CACjC,CACC,SAASmkC,GAAc9jC,EAAS,CAC7B,OAAIA,EAAQ,QACD6N,GAEP7N,EAAQ,SAAWA,EAAQ,yBAA2B,WAC/CkO,GAEJ21B,EACX,CACA,SAASE,GAASt8B,EAAQkT,EAASqR,EAAS,CAAA,EAAI,CAC5C,MAAMpkB,EAAQH,EAAO,OACf,CAAE,MAAOu8B,EAAc,EAAI,IAAKC,EAAYr8B,EAAQ,CAAI,EAAGokB,EAC3D,CAAE,MAAOkY,EAAe,IAAKC,CAAU,EAAMxpB,EAC7CtW,EAAQ,KAAK,IAAI2/B,EAAaE,CAAY,EAC1C5/B,EAAM,KAAK,IAAI2/B,EAAWE,CAAU,EACpCC,EAAUJ,EAAcE,GAAgBD,EAAYC,GAAgBF,EAAcG,GAAcF,EAAYE,EAClH,MAAO,CACH,MAAAv8B,EACA,MAAAvD,EACA,KAAMsW,EAAQ,KACd,KAAMrW,EAAMD,GAAS,CAAC+/B,EAAUx8B,EAAQtD,EAAMD,EAAQC,EAAMD,CACpE,CACA,CACC,SAASggC,GAAYn5B,EAAKoD,EAAMqM,EAASqR,EAAQ,CAC9C,KAAM,CAAE,OAAAvkB,EAAS,QAAAzH,CAAU,EAAGsO,EACxB,CAAE,MAAA1G,EAAQ,MAAAvD,EAAQ,KAAA6R,EAAO,KAAA3W,GAAUwkC,GAASt8B,EAAQkT,EAASqR,CAAM,EACnEsY,EAAaR,GAAc9jC,CAAO,EACxC,GAAI,CAAE,KAAA6kB,EAAM,GAAO,QAAA1lB,CAAO,EAAM6sB,GAAU,CAAA,EACtC5xB,EAAGoT,EAAO4I,EACd,IAAIhc,EAAI,EAAGA,GAAKmF,EAAM,EAAEnF,EACpBoT,EAAQ/F,GAAQpD,GAASlF,EAAUI,EAAOnF,EAAIA,IAAMwN,CAAK,EACrD,CAAA4F,EAAM,OAECqX,GACP3Z,EAAI,OAAOsC,EAAM,EAAGA,EAAM,CAAC,EAC3BqX,EAAO,IAEPyf,EAAWp5B,EAAKkL,EAAM5I,EAAOrO,EAASa,EAAQ,OAAO,EAEzDoW,EAAO5I,GAEX,OAAI0I,IACA1I,EAAQ/F,GAAQpD,GAASlF,EAAUI,EAAO,IAAMqI,CAAK,EACrD08B,EAAWp5B,EAAKkL,EAAM5I,EAAOrO,EAASa,EAAQ,OAAO,GAElD,CAAC,CAACkW,CACb,CACC,SAASquB,GAAgBr5B,EAAKoD,EAAMqM,EAASqR,EAAQ,CAClD,MAAMvkB,EAAS6G,EAAK,OACd,CAAE,MAAA1G,EAAQ,MAAAvD,EAAQ,KAAA9E,CAAI,EAAMwkC,GAASt8B,EAAQkT,EAASqR,CAAM,EAC5D,CAAE,KAAAnH,EAAM,GAAO,QAAA1lB,CAAO,EAAM6sB,GAAU,CAAA,EAC5C,IAAIwY,EAAO,EACPC,EAAS,EACTrqC,EAAGoT,EAAOk3B,EAAOC,EAAMC,EAAMC,EACjC,MAAMC,EAAc5/B,IAASb,GAASlF,EAAUI,EAAO2F,EAAQA,IAAU0C,EACnEm9B,EAAQ,IAAI,CACVJ,IAASC,IACT15B,EAAI,OAAOs5B,EAAMI,CAAI,EACrB15B,EAAI,OAAOs5B,EAAMG,CAAI,EACrBz5B,EAAI,OAAOs5B,EAAMK,CAAK,EAElC,EAKI,IAJIhgB,IACArX,EAAQ/F,EAAOq9B,EAAW,CAAC,CAAC,EAC5B55B,EAAI,OAAOsC,EAAM,EAAGA,EAAM,CAAC,GAE3BpT,EAAI,EAAGA,GAAKmF,EAAM,EAAEnF,EAAE,CAEtB,GADAoT,EAAQ/F,EAAOq9B,EAAW1qC,CAAC,CAAC,EACxBoT,EAAM,KACN,SAEJ,MAAMtL,EAAIsL,EAAM,EACVrL,EAAIqL,EAAM,EACVw3B,EAAS9iC,EAAI,EACf8iC,IAAWN,GACPviC,EAAIwiC,EACJA,EAAOxiC,EACAA,EAAIyiC,IACXA,EAAOziC,GAEXqiC,GAAQC,EAASD,EAAOtiC,GAAK,EAAEuiC,IAE/BM,IACA75B,EAAI,OAAOhJ,EAAGC,CAAC,EACfuiC,EAAQM,EACRP,EAAS,EACTE,EAAOC,EAAOziC,GAElB0iC,EAAQ1iC,CACX,CACD4iC,GACJ,CACC,SAASE,GAAkB32B,EAAM,CAC9B,MAAMF,EAAOE,EAAK,QACZsqB,EAAaxqB,EAAK,YAAcA,EAAK,WAAW,OAEtD,MADoB,CAACE,EAAK,YAAc,CAACA,EAAK,OAAS,CAACF,EAAK,SAAWA,EAAK,yBAA2B,YAAc,CAACA,EAAK,SAAW,CAACwqB,EACnH2L,GAAkBF,EAC3C,CACC,SAASa,GAAwBllC,EAAS,CACvC,OAAIA,EAAQ,QACD0Z,GAEP1Z,EAAQ,SAAWA,EAAQ,yBAA2B,WAC/C2Z,GAEJF,EACX,CACA,SAAS0rB,GAAoBj6B,EAAKoD,EAAMjK,EAAOuD,EAAO,CAClD,IAAIw9B,EAAO92B,EAAK,MACX82B,IACDA,EAAO92B,EAAK,MAAQ,IAAI,OACpBA,EAAK,KAAK82B,EAAM/gC,EAAOuD,CAAK,GAC5Bw9B,EAAK,UAAS,GAGtBxB,GAAS14B,EAAKoD,EAAK,OAAO,EAC1BpD,EAAI,OAAOk6B,CAAI,CACnB,CACA,SAASC,GAAiBn6B,EAAKoD,EAAMjK,EAAOuD,EAAO,CAC/C,KAAM,CAAE,SAAA+T,EAAW,QAAA3b,CAAU,EAAGsO,EAC1Bg3B,EAAgBL,GAAkB32B,CAAI,EAC5C,UAAWqM,KAAWgB,EAClBioB,GAAS14B,EAAKlL,EAAS2a,EAAQ,KAAK,EACpCzP,EAAI,UAAS,EACTo6B,EAAcp6B,EAAKoD,EAAMqM,EAAS,CAClC,MAAAtW,EACA,IAAKA,EAAQuD,EAAQ,CACjC,CAAS,GACGsD,EAAI,UAAS,EAEjBA,EAAI,OAAM,CAElB,CACA,MAAMq6B,GAAY,OAAO,QAAW,WACpC,SAASjoB,GAAKpS,EAAKoD,EAAMjK,EAAOuD,EAAO,CAC/B29B,IAAa,CAACj3B,EAAK,QAAQ,QAC3B62B,GAAoBj6B,EAAKoD,EAAMjK,EAAOuD,CAAK,EAE3Cy9B,GAAiBn6B,EAAKoD,EAAMjK,EAAOuD,CAAK,CAEhD,CACA,MAAM49B,WAAoB9U,EAAQ,CAC9B,OAAO,GAAK,OACf,OAAO,SAAW,CACX,eAAgB,OAChB,WAAY,CAAE,EACd,iBAAkB,EAClB,gBAAiB,QACjB,YAAa,EACb,gBAAiB,GACjB,uBAAwB,UACxB,KAAM,GACN,SAAU,GACV,QAAS,GACT,QAAS,CACjB,EACC,OAAO,cAAgB,CAChB,gBAAiB,kBACjB,YAAa,aACrB,EACI,OAAO,YAAc,CACjB,YAAa,GACb,WAAaxnB,GAAOA,IAAS,cAAgBA,IAAS,MAC9D,EACI,YAAY8U,EAAI,CACZ,QACA,KAAK,SAAW,GAChB,KAAK,QAAU,OACf,KAAK,OAAS,OACd,KAAK,MAAQ,OACb,KAAK,UAAY,OACjB,KAAK,MAAQ,OACb,KAAK,QAAU,OACf,KAAK,UAAY,OACjB,KAAK,WAAa,GAClB,KAAK,eAAiB,GACtB,KAAK,cAAgB,OACjBA,GACA,OAAO,OAAO,KAAMA,CAAG,CAE9B,CACD,oBAAoB0O,EAAW5Y,EAAW,CACtC,MAAM9T,EAAU,KAAK,QACrB,IAAKA,EAAQ,SAAWA,EAAQ,yBAA2B,aAAe,CAACA,EAAQ,SAAW,CAAC,KAAK,eAAgB,CAChH,MAAMkW,EAAOlW,EAAQ,SAAW,KAAK,MAAQ,KAAK,UAClDiW,GAA2B,KAAK,QAASjW,EAAS0sB,EAAWxW,EAAMpC,CAAS,EAC5E,KAAK,eAAiB,EACzB,CACJ,CACD,IAAI,OAAOrM,EAAQ,CACf,KAAK,QAAUA,EACf,OAAO,KAAK,UACZ,OAAO,KAAK,MACZ,KAAK,eAAiB,EACzB,CACD,IAAI,QAAS,CACT,OAAO,KAAK,OACf,CACD,IAAI,UAAW,CACX,OAAO,KAAK,YAAc,KAAK,UAAYwU,GAAiB,KAAM,KAAK,QAAQ,OAAO,EACzF,CACJ,OAAQ,CACD,MAAMN,EAAW,KAAK,SAChBlU,EAAS,KAAK,OACpB,OAAOkU,EAAS,QAAUlU,EAAOkU,EAAS,CAAC,EAAE,KAAK,CACrD,CACJ,MAAO,CACA,MAAMA,EAAW,KAAK,SAChBlU,EAAS,KAAK,OACdG,EAAQ+T,EAAS,OACvB,OAAO/T,GAASH,EAAOkU,EAAS/T,EAAQ,CAAC,EAAE,GAAG,CACjD,CACJ,YAAY4F,EAAOtK,EAAU,CACtB,MAAMlD,EAAU,KAAK,QACf5B,EAAQoP,EAAMtK,CAAQ,EACtBuE,EAAS,KAAK,OACdkU,EAAWD,GAAe,KAAM,CAClC,SAAAxY,EACA,MAAO9E,EACP,IAAKA,CACjB,CAAS,EACD,GAAI,CAACud,EAAS,OACV,OAEJ,MAAMhZ,EAAS,CAAA,EACT8iC,EAAeP,GAAwBllC,CAAO,EACpD,IAAI5F,EAAGmF,EACP,IAAInF,EAAI,EAAGmF,EAAOoc,EAAS,OAAQvhB,EAAImF,EAAM,EAAEnF,EAAE,CAC7C,KAAM,CAAE,MAAAiK,EAAQ,IAAAC,CAAM,EAAGqX,EAASvhB,CAAC,EAC7BgB,EAAKqM,EAAOpD,CAAK,EACjBhJ,EAAKoM,EAAOnD,CAAG,EACrB,GAAIlJ,IAAOC,EAAI,CACXsH,EAAO,KAAKvH,CAAE,EACd,QACH,CACD,MAAMwB,EAAI,KAAK,KAAKwB,EAAQhD,EAAG8H,CAAQ,IAAM7H,EAAG6H,CAAQ,EAAI9H,EAAG8H,CAAQ,EAAE,EACnEwiC,EAAeD,EAAarqC,EAAIC,EAAIuB,EAAGoD,EAAQ,OAAO,EAC5D0lC,EAAaxiC,CAAQ,EAAIsK,EAAMtK,CAAQ,EACvCP,EAAO,KAAK+iC,CAAY,CAC3B,CACD,OAAO/iC,EAAO,SAAW,EAAIA,EAAO,CAAC,EAAIA,CAC5C,CACJ,YAAYuI,EAAKyP,EAASqR,EAAQ,CAE3B,OADsBiZ,GAAkB,IAAI,EACvB/5B,EAAK,KAAMyP,EAASqR,CAAM,CAClD,CACJ,KAAK9gB,EAAK7G,EAAOuD,EAAO,CACjB,MAAM+T,EAAW,KAAK,SAChB2pB,EAAgBL,GAAkB,IAAI,EAC5C,IAAI/uB,EAAO,KAAK,MAChB7R,EAAQA,GAAS,EACjBuD,EAAQA,GAAS,KAAK,OAAO,OAASvD,EACtC,UAAWsW,KAAWgB,EAClBzF,GAAQovB,EAAcp6B,EAAK,KAAMyP,EAAS,CACtC,MAAAtW,EACA,IAAKA,EAAQuD,EAAQ,CACrC,CAAa,EAEL,MAAO,CAAC,CAACsO,CACZ,CACJ,KAAKhL,EAAKwhB,EAAWroB,EAAOuD,EAAO,CAC5B,MAAM5H,EAAU,KAAK,SAAW,IACjB,KAAK,QAAU,IACnB,QAAUA,EAAQ,cACzBkL,EAAI,KAAI,EACRoS,GAAKpS,EAAK,KAAM7G,EAAOuD,CAAK,EAC5BsD,EAAI,QAAO,GAEX,KAAK,WACL,KAAK,eAAiB,GACtB,KAAK,MAAQ,OAEpB,CACL,CAEA,SAASy6B,GAAU5uB,EAAIK,EAAKrP,EAAMqiB,EAAkB,CAChD,MAAMpqB,EAAU+W,EAAG,QACb,CAAE,CAAChP,CAAI,EAAG3J,CAAK,EAAM2Y,EAAG,SAAS,CACnChP,CACH,EAAEqiB,CAAgB,EACnB,OAAO,KAAK,IAAIhT,EAAMhZ,CAAK,EAAI4B,EAAQ,OAASA,EAAQ,SAC5D,CACA,MAAM4lC,WAAqBlV,EAAQ,CAC/B,OAAO,GAAK,QACZ,OACA,KACA,KAGE,OAAO,SAAW,CAChB,YAAa,EACb,UAAW,EACX,iBAAkB,EAClB,YAAa,EACb,WAAY,SACZ,OAAQ,EACR,SAAU,CAClB,EAGM,OAAO,cAAgB,CACrB,gBAAiB,kBACjB,YAAa,aACrB,EACI,YAAY1S,EAAI,CACZ,QACA,KAAK,QAAU,OACf,KAAK,OAAS,OACd,KAAK,KAAO,OACZ,KAAK,KAAO,OACRA,GACA,OAAO,OAAO,KAAMA,CAAG,CAE9B,CACD,QAAQ6nB,EAAQC,EAAQ1b,EAAkB,CACtC,MAAMpqB,EAAU,KAAK,QACf,CAAE,EAAAkC,EAAI,EAAAC,GAAO,KAAK,SAAS,CAC7B,IACA,GACH,EAAEioB,CAAgB,EACnB,OAAO,KAAK,IAAIyb,EAAS3jC,EAAG,CAAC,EAAI,KAAK,IAAI4jC,EAAS3jC,EAAG,CAAC,EAAI,KAAK,IAAInC,EAAQ,UAAYA,EAAQ,OAAQ,CAAC,CAC5G,CACD,SAAS6lC,EAAQzb,EAAkB,CAC/B,OAAOub,GAAU,KAAME,EAAQ,IAAKzb,CAAgB,CACvD,CACD,SAAS0b,EAAQ1b,EAAkB,CAC/B,OAAOub,GAAU,KAAMG,EAAQ,IAAK1b,CAAgB,CACvD,CACD,eAAeA,EAAkB,CAC7B,KAAM,CAAE,EAAAloB,EAAI,EAAAC,GAAO,KAAK,SAAS,CAC7B,IACA,GACH,EAAEioB,CAAgB,EACnB,MAAO,CACH,EAAAloB,EACA,EAAAC,CACZ,CACK,CACD,KAAKnC,EAAS,CACVA,EAAUA,GAAW,KAAK,SAAW,CAAA,EACrC,IAAIqN,EAASrN,EAAQ,QAAU,EAC/BqN,EAAS,KAAK,IAAIA,EAAQA,GAAUrN,EAAQ,aAAe,CAAC,EAC5D,MAAM+lC,EAAc14B,GAAUrN,EAAQ,aAAe,EACrD,OAAQqN,EAAS04B,GAAe,CACnC,CACD,KAAK76B,EAAKuC,EAAM,CACZ,MAAMzN,EAAU,KAAK,QACjB,KAAK,MAAQA,EAAQ,OAAS,IAAO,CAACuN,GAAe,KAAME,EAAM,KAAK,KAAKzN,CAAO,EAAI,CAAC,IAG3FkL,EAAI,YAAclL,EAAQ,YAC1BkL,EAAI,UAAYlL,EAAQ,YACxBkL,EAAI,UAAYlL,EAAQ,gBACxB2M,GAAUzB,EAAKlL,EAAS,KAAK,EAAG,KAAK,CAAC,EACzC,CACD,UAAW,CACP,MAAMA,EAAU,KAAK,SAAW,GAEhC,OAAOA,EAAQ,OAASA,EAAQ,SACnC,CACL,CAEA,SAASgmC,GAAaC,EAAK7b,EAAkB,CACzC,KAAM,CAAE,EAAAloB,EAAI,EAAAC,EAAI,KAAA6D,EAAO,MAAAsG,EAAQ,OAAA2L,CAAS,EAAIguB,EAAI,SAAS,CACrD,IACA,IACA,OACA,QACA,QACH,EAAE7b,CAAgB,EACnB,IAAIhjB,EAAMC,EAAOmH,EAAKC,EAAQy3B,EAC9B,OAAID,EAAI,YACJC,EAAOjuB,EAAS,EAChB7Q,EAAO,KAAK,IAAIlF,EAAG8D,CAAI,EACvBqB,EAAQ,KAAK,IAAInF,EAAG8D,CAAI,EACxBwI,EAAMrM,EAAI+jC,EACVz3B,EAAStM,EAAI+jC,IAEbA,EAAO55B,EAAQ,EACflF,EAAOlF,EAAIgkC,EACX7+B,EAAQnF,EAAIgkC,EACZ13B,EAAM,KAAK,IAAIrM,EAAG6D,CAAI,EACtByI,EAAS,KAAK,IAAItM,EAAG6D,CAAI,GAEtB,CACH,KAAAoB,EACA,IAAAoH,EACA,MAAAnH,EACA,OAAAoH,CACR,CACA,CACA,SAAS03B,GAAYzU,EAAMtzB,EAAOzD,EAAKF,EAAK,CACxC,OAAOi3B,EAAO,EAAI9sB,EAAYxG,EAAOzD,EAAKF,CAAG,CACjD,CACA,SAAS2rC,GAAiBH,EAAKI,EAAMC,EAAM,CACvC,MAAMloC,EAAQ6nC,EAAI,QAAQ,YACpBvU,EAAOuU,EAAI,cACX,EAAIp2B,GAAOzR,CAAK,EACtB,MAAO,CACH,EAAG+nC,GAAYzU,EAAK,IAAK,EAAE,IAAK,EAAG4U,CAAI,EACvC,EAAGH,GAAYzU,EAAK,MAAO,EAAE,MAAO,EAAG2U,CAAI,EAC3C,EAAGF,GAAYzU,EAAK,OAAQ,EAAE,OAAQ,EAAG4U,CAAI,EAC7C,EAAGH,GAAYzU,EAAK,KAAM,EAAE,KAAM,EAAG2U,CAAI,CACjD,CACA,CACA,SAASE,GAAkBN,EAAKI,EAAMC,EAAM,CACxC,KAAM,CAAE,mBAAAE,CAAkB,EAAMP,EAAI,SAAS,CACzC,oBACR,CAAK,EACK7nC,EAAQ6nC,EAAI,QAAQ,aACpB,EAAIn2B,GAAc1R,CAAK,EACvBqoC,EAAO,KAAK,IAAIJ,EAAMC,CAAI,EAC1B5U,EAAOuU,EAAI,cACXS,EAAeF,GAAsBloC,EAASF,CAAK,EACzD,MAAO,CACH,QAAS+nC,GAAY,CAACO,GAAgBhV,EAAK,KAAOA,EAAK,KAAM,EAAE,QAAS,EAAG+U,CAAI,EAC/E,SAAUN,GAAY,CAACO,GAAgBhV,EAAK,KAAOA,EAAK,MAAO,EAAE,SAAU,EAAG+U,CAAI,EAClF,WAAYN,GAAY,CAACO,GAAgBhV,EAAK,QAAUA,EAAK,KAAM,EAAE,WAAY,EAAG+U,CAAI,EACxF,YAAaN,GAAY,CAACO,GAAgBhV,EAAK,QAAUA,EAAK,MAAO,EAAE,YAAa,EAAG+U,CAAI,CACnG,CACA,CACA,SAASE,GAAcV,EAAK,CACxB,MAAMrrB,EAASorB,GAAaC,CAAG,EACzB35B,EAAQsO,EAAO,MAAQA,EAAO,KAC9B3C,EAAS2C,EAAO,OAASA,EAAO,IAChCoO,EAASod,GAAiBH,EAAK35B,EAAQ,EAAG2L,EAAS,CAAC,EACpD5K,EAASk5B,GAAkBN,EAAK35B,EAAQ,EAAG2L,EAAS,CAAC,EAC3D,MAAO,CACH,MAAO,CACH,EAAG2C,EAAO,KACV,EAAGA,EAAO,IACV,EAAGtO,EACH,EAAG2L,EACH,OAAA5K,CACH,EACD,MAAO,CACH,EAAGuN,EAAO,KAAOoO,EAAO,EACxB,EAAGpO,EAAO,IAAMoO,EAAO,EACvB,EAAG1c,EAAQ0c,EAAO,EAAIA,EAAO,EAC7B,EAAG/Q,EAAS+Q,EAAO,EAAIA,EAAO,EAC9B,OAAQ,CACJ,QAAS,KAAK,IAAI,EAAG3b,EAAO,QAAU,KAAK,IAAI2b,EAAO,EAAGA,EAAO,CAAC,CAAC,EAClE,SAAU,KAAK,IAAI,EAAG3b,EAAO,SAAW,KAAK,IAAI2b,EAAO,EAAGA,EAAO,CAAC,CAAC,EACpE,WAAY,KAAK,IAAI,EAAG3b,EAAO,WAAa,KAAK,IAAI2b,EAAO,EAAGA,EAAO,CAAC,CAAC,EACxE,YAAa,KAAK,IAAI,EAAG3b,EAAO,YAAc,KAAK,IAAI2b,EAAO,EAAGA,EAAO,CAAC,CAAC,CAC7E,CACJ,CACT,CACA,CACA,SAAS6B,GAAQob,EAAK/jC,EAAGC,EAAGioB,EAAkB,CAC1C,MAAMwc,EAAQ1kC,IAAM,KACd2kC,EAAQ1kC,IAAM,KAEdyY,EAASqrB,GAAO,EADLW,GAASC,IACSb,GAAaC,EAAK7b,CAAgB,EACrE,OAAOxP,IAAWgsB,GAAS9hC,GAAW5C,EAAG0Y,EAAO,KAAMA,EAAO,KAAK,KAAOisB,GAAS/hC,GAAW3C,EAAGyY,EAAO,IAAKA,EAAO,MAAM,EAC7H,CACA,SAASksB,GAAUz5B,EAAQ,CACvB,OAAOA,EAAO,SAAWA,EAAO,UAAYA,EAAO,YAAcA,EAAO,WAC5E,CACC,SAAS05B,GAAkB77B,EAAKgE,EAAM,CACnChE,EAAI,KAAKgE,EAAK,EAAGA,EAAK,EAAGA,EAAK,EAAGA,EAAK,CAAC,CAC3C,CACA,SAAS83B,GAAY93B,EAAM+3B,EAAQC,EAAU,CAAA,EAAI,CAC7C,MAAMhlC,EAAIgN,EAAK,IAAMg4B,EAAQ,EAAI,CAACD,EAAS,EACrC9kC,EAAI+M,EAAK,IAAMg4B,EAAQ,EAAI,CAACD,EAAS,EACrC/sC,GAAKgV,EAAK,EAAIA,EAAK,IAAMg4B,EAAQ,EAAIA,EAAQ,EAAID,EAAS,GAAK/kC,EAC/D3J,GAAK2W,EAAK,EAAIA,EAAK,IAAMg4B,EAAQ,EAAIA,EAAQ,EAAID,EAAS,GAAK9kC,EACrE,MAAO,CACH,EAAG+M,EAAK,EAAIhN,EACZ,EAAGgN,EAAK,EAAI/M,EACZ,EAAG+M,EAAK,EAAIhV,EACZ,EAAGgV,EAAK,EAAI3W,EACZ,OAAQ2W,EAAK,MACrB,CACA,CACA,MAAMi4B,WAAmBzW,EAAQ,CAC7B,OAAO,GAAK,MACf,OAAO,SAAW,CACX,cAAe,QACf,YAAa,EACb,aAAc,EACd,cAAe,OACf,WAAY,MACpB,EACC,OAAO,cAAgB,CAChB,gBAAiB,kBACjB,YAAa,aACrB,EACI,YAAY1S,EAAI,CACZ,QACA,KAAK,QAAU,OACf,KAAK,WAAa,OAClB,KAAK,KAAO,OACZ,KAAK,MAAQ,OACb,KAAK,OAAS,OACd,KAAK,cAAgB,OACjBA,GACA,OAAO,OAAO,KAAMA,CAAG,CAE9B,CACD,KAAK9S,EAAK,CACN,KAAM,CAAE,cAAA+b,EAAgB,QAAS,CAAE,YAAAmgB,EAAc,gBAAArN,CAAe,CAAM,EAAG,KACnE,CAAE,MAAAsN,EAAQ,MAAAC,CAAQ,EAAGX,GAAc,IAAI,EACvCY,EAAcT,GAAUQ,EAAM,MAAM,EAAIr4B,GAAqB83B,GACnE77B,EAAI,KAAI,GACJo8B,EAAM,IAAMD,EAAM,GAAKC,EAAM,IAAMD,EAAM,KACzCn8B,EAAI,UAAS,EACbq8B,EAAYr8B,EAAK87B,GAAYM,EAAOrgB,EAAeogB,CAAK,CAAC,EACzDn8B,EAAI,KAAI,EACRq8B,EAAYr8B,EAAK87B,GAAYK,EAAO,CAACpgB,EAAeqgB,CAAK,CAAC,EAC1Dp8B,EAAI,UAAYk8B,EAChBl8B,EAAI,KAAK,SAAS,GAEtBA,EAAI,UAAS,EACbq8B,EAAYr8B,EAAK87B,GAAYK,EAAOpgB,CAAa,CAAC,EAClD/b,EAAI,UAAY6uB,EAChB7uB,EAAI,KAAI,EACRA,EAAI,QAAO,CACd,CACD,QAAQ26B,EAAQC,EAAQ1b,EAAkB,CACtC,OAAOS,GAAQ,KAAMgb,EAAQC,EAAQ1b,CAAgB,CACxD,CACD,SAASyb,EAAQzb,EAAkB,CAC/B,OAAOS,GAAQ,KAAMgb,EAAQ,KAAMzb,CAAgB,CACtD,CACD,SAAS0b,EAAQ1b,EAAkB,CAC/B,OAAOS,GAAQ,KAAM,KAAMib,EAAQ1b,CAAgB,CACtD,CACD,eAAeA,EAAkB,CAC7B,KAAM,CAAE,EAAAloB,EAAI,EAAAC,EAAI,KAAA6D,EAAO,WAAAqhB,CAAa,EAAI,KAAK,SAAS,CAClD,IACA,IACA,OACA,YACH,EAAE+C,CAAgB,EACnB,MAAO,CACH,EAAG/C,GAAcnlB,EAAI8D,GAAQ,EAAI9D,EACjC,EAAGmlB,EAAallB,GAAKA,EAAI6D,GAAQ,CAC7C,CACK,CACD,SAAS+B,EAAM,CACX,OAAOA,IAAS,IAAM,KAAK,MAAQ,EAAI,KAAK,OAAS,CACxD,CACL,CAiSA,SAASy/B,GAAUl5B,EAAM3O,EAAQuD,EAAU,CACvC,MAAMyY,EAAWrN,EAAK,SAChB7G,EAAS6G,EAAK,OACdm5B,EAAU9nC,EAAO,OACjBiB,EAAQ,CAAA,EACd,UAAW+Z,KAAWgB,EAAS,CAC3B,GAAI,CAAE,MAAAtX,EAAQ,IAAAC,CAAM,EAAGqW,EACvBrW,EAAMojC,GAAgBrjC,EAAOC,EAAKmD,CAAM,EACxC,MAAMmT,EAAS+sB,GAAWzkC,EAAUuE,EAAOpD,CAAK,EAAGoD,EAAOnD,CAAG,EAAGqW,EAAQ,IAAI,EAC5E,GAAI,CAAChb,EAAO,SAAU,CAClBiB,EAAM,KAAK,CACP,OAAQ+Z,EACR,OAAQC,EACR,MAAOnT,EAAOpD,CAAK,EACnB,IAAKoD,EAAOnD,CAAG,CAC/B,CAAa,EACD,QACH,CACD,MAAMsjC,EAAiBlsB,GAAe/b,EAAQib,CAAM,EACpD,UAAWitB,KAAOD,EAAe,CAC7B,MAAME,EAAYH,GAAWzkC,EAAUukC,EAAQI,EAAI,KAAK,EAAGJ,EAAQI,EAAI,GAAG,EAAGA,EAAI,IAAI,EAC/EE,EAAc9sB,GAAcN,EAASlT,EAAQqgC,CAAS,EAC5D,UAAWE,KAAcD,EACrBnnC,EAAM,KAAK,CACP,OAAQonC,EACR,OAAQH,EACR,MAAO,CACH,CAAC3kC,CAAQ,EAAG+kC,GAASrtB,EAAQktB,EAAW,QAAS,KAAK,GAAG,CAC5D,EACD,IAAK,CACD,CAAC5kC,CAAQ,EAAG+kC,GAASrtB,EAAQktB,EAAW,MAAO,KAAK,GAAG,CAC1D,CACrB,CAAiB,CAER,CACJ,CACD,OAAOlnC,CACX,CACA,SAAS+mC,GAAWzkC,EAAUkuB,EAAO7rB,EAAM2Q,EAAM,CAC7C,GAAIA,EACA,OAEJ,IAAI7R,EAAQ+sB,EAAMluB,CAAQ,EACtBoB,EAAMiB,EAAKrC,CAAQ,EACvB,OAAIA,IAAa,UACbmB,EAAQF,GAAgBE,CAAK,EAC7BC,EAAMH,GAAgBG,CAAG,GAEtB,CACH,SAAApB,EACA,MAAAmB,EACA,IAAAC,CACR,CACA,CACA,SAAS4jC,GAAoBC,EAAU75B,EAAM,CACzC,KAAM,CAAE,EAAApM,EAAG,KAAO,EAAAC,EAAG,IAAO,EAAGgmC,GAAY,GACrCC,EAAa95B,EAAK,OAClB7G,EAAS,CAAA,EACf,OAAA6G,EAAK,SAAS,QAAQ,CAAC,CAAE,MAAAjK,EAAQ,IAAAC,CAAG,IAAM,CACtCA,EAAMojC,GAAgBrjC,EAAOC,EAAK8jC,CAAU,EAC5C,MAAMhX,EAAQgX,EAAW/jC,CAAK,EACxBkB,EAAO6iC,EAAW9jC,CAAG,EACvBnC,IAAM,MACNsF,EAAO,KAAK,CACR,EAAG2pB,EAAM,EACT,EAAAjvB,CAChB,CAAa,EACDsF,EAAO,KAAK,CACR,EAAGlC,EAAK,EACR,EAAApD,CAChB,CAAa,GACMD,IAAM,OACbuF,EAAO,KAAK,CACR,EAAAvF,EACA,EAAGkvB,EAAM,CACzB,CAAa,EACD3pB,EAAO,KAAK,CACR,EAAAvF,EACA,EAAGqD,EAAK,CACxB,CAAa,EAEb,CAAK,EACMkC,CACX,CACA,SAASigC,GAAgBrjC,EAAOC,EAAKmD,EAAQ,CACzC,KAAMnD,EAAMD,EAAOC,IAAM,CACrB,MAAMkJ,EAAQ/F,EAAOnD,CAAG,EACxB,GAAI,CAAC,MAAMkJ,EAAM,CAAC,GAAK,CAAC,MAAMA,EAAM,CAAC,EACjC,KAEP,CACD,OAAOlJ,CACX,CACA,SAAS2jC,GAASzuC,EAAGT,EAAG6W,EAAM9Q,EAAI,CAC9B,OAAItF,GAAKT,EACE+F,EAAGtF,EAAEoW,CAAI,EAAG7W,EAAE6W,CAAI,CAAC,EAEvBpW,EAAIA,EAAEoW,CAAI,EAAI7W,EAAIA,EAAE6W,CAAI,EAAI,CACvC,CAEA,SAASy4B,GAAoBF,EAAU75B,EAAM,CACzC,IAAI7G,EAAS,CAAA,EACT6gC,EAAQ,GACZ,OAAIjqC,EAAQ8pC,CAAQ,GAChBG,EAAQ,GACR7gC,EAAS0gC,GAET1gC,EAASygC,GAAoBC,EAAU75B,CAAI,EAExC7G,EAAO,OAAS,IAAI+9B,GAAY,CACnC,OAAA/9B,EACA,QAAS,CACL,QAAS,CACZ,EACD,MAAA6gC,EACA,UAAWA,CACd,CAAA,EAAI,IACT,CACA,SAASC,GAAiB7oC,EAAQ,CAC9B,OAAOA,GAAUA,EAAO,OAAS,EACrC,CAEA,SAAS8oC,GAAepoC,EAAS8E,EAAOujC,EAAW,CAE/C,IAAIC,EADWtoC,EAAQ8E,CAAK,EACV,KAClB,MAAMyjC,EAAU,CACZzjC,CACR,EACI,IAAIvF,EACJ,GAAI,CAAC8oC,EACD,OAAOC,EAEX,KAAMA,IAAS,IAASC,EAAQ,QAAQD,CAAI,IAAM,IAAG,CACjD,GAAI,CAACnqC,EAAemqC,CAAI,EACpB,OAAOA,EAGX,GADA/oC,EAASS,EAAQsoC,CAAI,EACjB,CAAC/oC,EACD,MAAO,GAEX,GAAIA,EAAO,QACP,OAAO+oC,EAEXC,EAAQ,KAAKD,CAAI,EACjBA,EAAO/oC,EAAO,IACjB,CACD,MAAO,EACX,CACC,SAASipC,GAAYt6B,EAAMpJ,EAAO0C,EAAO,CACrC,MAAM8gC,EAAOG,GAAgBv6B,CAAI,EAClC,GAAIhQ,EAASoqC,CAAI,EACb,OAAO,MAAMA,EAAK,KAAK,EAAI,GAAQA,EAEvC,IAAI/oC,EAAS,WAAW+oC,CAAI,EAC5B,OAAInqC,EAAeoB,CAAM,GAAK,KAAK,MAAMA,CAAM,IAAMA,EAC1CmpC,GAAkBJ,EAAK,CAAC,EAAGxjC,EAAOvF,EAAQiI,CAAK,EAEnD,CACH,SACA,QACA,MACA,QACA,OACH,EAAC,QAAQ8gC,CAAI,GAAK,GAAKA,CAC5B,CACA,SAASI,GAAkBC,EAAS7jC,EAAOvF,EAAQiI,EAAO,CAItD,OAHImhC,IAAY,KAAOA,IAAY,OAC/BppC,EAASuF,EAAQvF,GAEjBA,IAAWuF,GAASvF,EAAS,GAAKA,GAAUiI,EACrC,GAEJjI,CACX,CACC,SAASqpC,GAAgBN,EAAMrpB,EAAO,CACnC,IAAIhT,EAAQ,KACZ,OAAIq8B,IAAS,QACTr8B,EAAQgT,EAAM,OACPqpB,IAAS,MAChBr8B,EAAQgT,EAAM,IACP/gB,EAASoqC,CAAI,EACpBr8B,EAAQgT,EAAM,iBAAiBqpB,EAAK,KAAK,EAClCrpB,EAAM,eACbhT,EAAQgT,EAAM,gBAEXhT,CACX,CACC,SAAS48B,GAAgBP,EAAMrpB,EAAOyG,EAAY,CAC/C,IAAI1nB,EACJ,OAAIsqC,IAAS,QACTtqC,EAAQ0nB,EACD4iB,IAAS,MAChBtqC,EAAQihB,EAAM,QAAQ,QAAUA,EAAM,IAAMA,EAAM,IAC3C/gB,EAASoqC,CAAI,EACpBtqC,EAAQsqC,EAAK,MAEbtqC,EAAQihB,EAAM,eAEXjhB,CACX,CACC,SAASyqC,GAAgBv6B,EAAM,CAC5B,MAAMtO,EAAUsO,EAAK,QACf46B,EAAalpC,EAAQ,KAC3B,IAAI0oC,EAAOhqC,EAAewqC,GAAcA,EAAW,OAAQA,CAAU,EAIrE,OAHIR,IAAS,SACTA,EAAO,CAAC,CAAC1oC,EAAQ,iBAEjB0oC,IAAS,IAASA,IAAS,KACpB,GAEPA,IAAS,GACF,SAEJA,CACX,CAEA,SAASS,GAAgBzpC,EAAQ,CAC7B,KAAM,CAAE,MAAA2f,EAAQ,MAAAna,EAAQ,KAAAoJ,CAAI,EAAM5O,EAC5B+H,EAAS,CAAA,EACTkU,EAAWrN,EAAK,SAChB86B,EAAe96B,EAAK,OACpB+6B,EAAaC,GAAcjqB,EAAOna,CAAK,EAC7CmkC,EAAW,KAAKhB,GAAoB,CAChC,EAAG,KACH,EAAGhpB,EAAM,MACjB,EAAO/Q,CAAI,CAAC,EACR,QAAQlU,EAAI,EAAGA,EAAIuhB,EAAS,OAAQvhB,IAAI,CACpC,MAAMugB,EAAUgB,EAASvhB,CAAC,EAC1B,QAAQ2B,EAAI4e,EAAQ,MAAO5e,GAAK4e,EAAQ,IAAK5e,IACzCwtC,GAAe9hC,EAAQ2hC,EAAartC,CAAC,EAAGstC,CAAU,CAEzD,CACD,OAAO,IAAI7D,GAAY,CACnB,OAAA/9B,EACA,QAAS,CAAE,CACnB,CAAK,CACL,CACC,SAAS6hC,GAAcjqB,EAAOna,EAAO,CAClC,MAAMskC,EAAQ,CAAA,EACRpV,EAAQ/U,EAAM,wBAAwB,MAAM,EAClD,QAAQjlB,EAAI,EAAGA,EAAIg6B,EAAM,OAAQh6B,IAAI,CACjC,MAAMoN,EAAO4sB,EAAMh6B,CAAC,EACpB,GAAIoN,EAAK,QAAUtC,EACf,MAECsC,EAAK,QACNgiC,EAAM,QAAQhiC,EAAK,OAAO,CAEjC,CACD,OAAOgiC,CACX,CACC,SAASD,GAAe9hC,EAAQgiC,EAAaJ,EAAY,CACtD,MAAMK,EAAY,CAAA,EAClB,QAAQ3tC,EAAI,EAAGA,EAAIstC,EAAW,OAAQttC,IAAI,CACtC,MAAMuS,EAAO+6B,EAAWttC,CAAC,EACnB,CAAE,MAAAq1B,EAAQ,KAAA7rB,EAAO,MAAAiI,CAAK,EAAMm8B,GAAUr7B,EAAMm7B,EAAa,GAAG,EAClE,GAAI,GAACj8B,GAAS4jB,GAAS7rB,IAGvB,GAAI6rB,EACAsY,EAAU,QAAQl8B,CAAK,UAEvB/F,EAAO,KAAK+F,CAAK,EACb,CAACjI,EACD,MAGX,CACDkC,EAAO,KAAK,GAAGiiC,CAAS,CAC5B,CACC,SAASC,GAAUr7B,EAAMm7B,EAAavmC,EAAU,CAC7C,MAAMsK,EAAQc,EAAK,YAAYm7B,EAAavmC,CAAQ,EACpD,GAAI,CAACsK,EACD,MAAO,GAEX,MAAMo8B,EAAap8B,EAAMtK,CAAQ,EAC3ByY,EAAWrN,EAAK,SAChB85B,EAAa95B,EAAK,OACxB,IAAI8iB,EAAQ,GACR7rB,EAAO,GACX,QAAQnL,EAAI,EAAGA,EAAIuhB,EAAS,OAAQvhB,IAAI,CACpC,MAAMugB,EAAUgB,EAASvhB,CAAC,EACpByvC,EAAazB,EAAWztB,EAAQ,KAAK,EAAEzX,CAAQ,EAC/C4mC,EAAY1B,EAAWztB,EAAQ,GAAG,EAAEzX,CAAQ,EAClD,GAAI4B,GAAW8kC,EAAYC,EAAYC,CAAS,EAAG,CAC/C1Y,EAAQwY,IAAeC,EACvBtkC,EAAOqkC,IAAeE,EACtB,KACH,CACJ,CACD,MAAO,CACH,MAAA1Y,EACA,KAAA7rB,EACA,MAAAiI,CACR,CACA,CAEA,MAAMu8B,EAAU,CACZ,YAAY37B,EAAK,CACb,KAAK,EAAIA,EAAK,EACd,KAAK,EAAIA,EAAK,EACd,KAAK,OAASA,EAAK,MACtB,CACD,YAAYlD,EAAK0P,EAAQxM,EAAM,CAC3B,KAAM,CAAE,EAAAlM,EAAI,EAAAC,EAAI,OAAAkL,CAAM,EAAM,KAC5B,OAAAuN,EAASA,GAAU,CACf,MAAO,EACP,IAAKpZ,CACjB,EACQ0J,EAAI,IAAIhJ,EAAGC,EAAGkL,EAAQuN,EAAO,IAAKA,EAAO,MAAO,EAAI,EAC7C,CAACxM,EAAK,MAChB,CACD,YAAYZ,EAAO,CACf,KAAM,CAAE,EAAAtL,EAAI,EAAAC,EAAI,OAAAkL,CAAM,EAAM,KACtBvJ,EAAQ0J,EAAM,MACpB,MAAO,CACH,EAAGtL,EAAI,KAAK,IAAI4B,CAAK,EAAIuJ,EACzB,EAAGlL,EAAI,KAAK,IAAI2B,CAAK,EAAIuJ,EACzB,MAAAvJ,CACZ,CACK,CACL,CAEA,SAASkmC,GAAWtqC,EAAQ,CACxB,KAAM,CAAE,MAAA0M,EAAQ,KAAAs8B,EAAO,KAAAp6B,CAAI,EAAM5O,EACjC,GAAInB,EAAemqC,CAAI,EACnB,OAAOuB,GAAe79B,EAAOs8B,CAAI,EAErC,GAAIA,IAAS,QACT,OAAOS,GAAgBzpC,CAAM,EAEjC,GAAIgpC,IAAS,QACT,MAAO,GAEX,MAAMP,EAAW+B,GAAgBxqC,CAAM,EACvC,OAAIyoC,aAAoB4B,GACb5B,EAEJE,GAAoBF,EAAU75B,CAAI,CAC7C,CACC,SAAS27B,GAAe79B,EAAOlH,EAAO,CACnC,MAAMsC,EAAO4E,EAAM,eAAelH,CAAK,EAEvC,OADgBsC,GAAQ4E,EAAM,iBAAiBlH,CAAK,EACnCsC,EAAK,QAAU,IACpC,CACA,SAAS0iC,GAAgBxqC,EAAQ,CAE7B,OADcA,EAAO,OAAS,IACpB,yBACCyqC,GAAwBzqC,CAAM,EAElC0qC,GAAsB1qC,CAAM,CACvC,CACA,SAAS0qC,GAAsB1qC,EAAQ,CACnC,KAAM,CAAE,MAAA2f,EAAO,CAAA,EAAK,KAAAqpB,CAAI,EAAMhpC,EACxB2M,EAAQ28B,GAAgBN,EAAMrpB,CAAK,EACzC,GAAI9gB,EAAe8N,CAAK,EAAG,CACvB,MAAMgb,EAAahI,EAAM,eACzB,MAAO,CACH,EAAGgI,EAAahb,EAAQ,KACxB,EAAGgb,EAAa,KAAOhb,CACnC,CACK,CACD,OAAO,IACX,CACA,SAAS89B,GAAwBzqC,EAAQ,CACrC,KAAM,CAAE,MAAA2f,EAAQ,KAAAqpB,CAAO,EAAGhpC,EACpBM,EAAUqf,EAAM,QAChB2I,EAAS3I,EAAM,UAAS,EAAG,OAC3Bhb,EAAQrE,EAAQ,QAAUqf,EAAM,IAAMA,EAAM,IAC5CjhB,EAAQ6qC,GAAgBP,EAAMrpB,EAAOhb,CAAK,EAC1C1E,EAAS,CAAA,EACf,GAAIK,EAAQ,KAAK,SAAU,CACvB,MAAMsoB,EAASjJ,EAAM,yBAAyB,EAAGhb,CAAK,EACtD,OAAO,IAAI0lC,GAAU,CACjB,EAAGzhB,EAAO,EACV,EAAGA,EAAO,EACV,OAAQjJ,EAAM,8BAA8BjhB,CAAK,CAC7D,CAAS,CACJ,CACD,QAAQhE,EAAI,EAAGA,EAAI4tB,EAAQ,EAAE5tB,EACzBuF,EAAO,KAAK0f,EAAM,yBAAyBjlB,EAAGgE,CAAK,CAAC,EAExD,OAAOuB,CACX,CAEA,SAAS0qC,GAAUn/B,EAAKxL,EAAQ+N,EAAM,CAClC,MAAM9N,EAASqqC,GAAWtqC,CAAM,EAC1B,CAAE,KAAA4O,EAAO,MAAA+Q,EAAQ,KAAAtX,CAAI,EAAMrI,EAC3B4qC,EAAWh8B,EAAK,QAChB46B,EAAaoB,EAAS,KACtB9sC,EAAQ8sC,EAAS,gBACjB,CAAE,MAAAC,EAAO/sC,EAAQ,MAAAgsC,EAAOhsC,CAAQ,EAAG0rC,GAAc,GACnDvpC,GAAU2O,EAAK,OAAO,SACtBX,GAASzC,EAAKuC,CAAI,EAClB+8B,GAAOt/B,EAAK,CACR,KAAAoD,EACA,OAAA3O,EACA,MAAA4qC,EACA,MAAAf,EACA,KAAA/7B,EACA,MAAA4R,EACA,KAAAtX,CACZ,CAAS,EACD6F,GAAW1C,CAAG,EAEtB,CACA,SAASs/B,GAAOt/B,EAAK8S,EAAK,CACtB,KAAM,CAAE,KAAA1P,EAAO,OAAA3O,EAAS,MAAA4qC,EAAQ,MAAAf,EAAQ,KAAA/7B,EAAO,MAAA4R,CAAQ,EAAGrB,EACpD9a,EAAWoL,EAAK,MAAQ,QAAU0P,EAAI,KAC5C9S,EAAI,KAAI,EACJhI,IAAa,KAAOsmC,IAAUe,IAC9BE,GAAav/B,EAAKvL,EAAQ8N,EAAK,GAAG,EAClCi7B,GAAKx9B,EAAK,CACN,KAAAoD,EACA,OAAA3O,EACA,MAAO4qC,EACP,MAAAlrB,EACA,SAAAnc,CACZ,CAAS,EACDgI,EAAI,QAAO,EACXA,EAAI,KAAI,EACRu/B,GAAav/B,EAAKvL,EAAQ8N,EAAK,MAAM,GAEzCi7B,GAAKx9B,EAAK,CACN,KAAAoD,EACA,OAAA3O,EACA,MAAO6pC,EACP,MAAAnqB,EACA,SAAAnc,CACR,CAAK,EACDgI,EAAI,QAAO,CACf,CACA,SAASu/B,GAAav/B,EAAKvL,EAAQ+qC,EAAO,CACtC,KAAM,CAAE,SAAA/uB,EAAW,OAAAlU,CAAS,EAAG9H,EAC/B,IAAIyxB,EAAQ,GACRuZ,EAAW,GACfz/B,EAAI,UAAS,EACb,UAAWyP,KAAWgB,EAAS,CAC3B,KAAM,CAAE,MAAAtX,EAAQ,IAAAC,CAAM,EAAGqW,EACnB3G,EAAavM,EAAOpD,CAAK,EACzB4kB,EAAYxhB,EAAOigC,GAAgBrjC,EAAOC,EAAKmD,CAAM,CAAC,EACxD2pB,GACAlmB,EAAI,OAAO8I,EAAW,EAAGA,EAAW,CAAC,EACrCod,EAAQ,KAERlmB,EAAI,OAAO8I,EAAW,EAAG02B,CAAK,EAC9Bx/B,EAAI,OAAO8I,EAAW,EAAGA,EAAW,CAAC,GAEzC22B,EAAW,CAAC,CAAChrC,EAAO,YAAYuL,EAAKyP,EAAS,CAC1C,KAAMgwB,CAClB,CAAS,EACGA,EACAz/B,EAAI,UAAS,EAEbA,EAAI,OAAO+d,EAAU,EAAGyhB,CAAK,CAEpC,CACDx/B,EAAI,OAAOvL,EAAO,MAAK,EAAG,EAAG+qC,CAAK,EAClCx/B,EAAI,UAAS,EACbA,EAAI,KAAI,CACZ,CACA,SAASw9B,GAAKx9B,EAAK8S,EAAK,CACpB,KAAM,CAAE,KAAA1P,EAAO,OAAA3O,EAAS,SAAAuD,EAAW,MAAA1F,EAAQ,MAAA6hB,CAAQ,EAAGrB,EAChDrC,EAAW6rB,GAAUl5B,EAAM3O,EAAQuD,CAAQ,EACjD,SAAW,CAAE,OAAQ0nC,EAAM,OAAQ/C,EAAM,MAAAxjC,EAAQ,IAAAC,CAAM,IAAIqX,EAAS,CAChE,KAAM,CAAE,MAAO,CAAE,gBAAAoe,EAAiBv8B,CAAK,EAAM,CAAA,CAAK,EAAGotC,EAC/CC,EAAWlrC,IAAW,GAC5BuL,EAAI,KAAI,EACRA,EAAI,UAAY6uB,EAChB+Q,GAAW5/B,EAAKmU,EAAOwrB,GAAYlD,GAAWzkC,EAAUmB,EAAOC,CAAG,CAAC,EACnE4G,EAAI,UAAS,EACb,MAAMy/B,EAAW,CAAC,CAACr8B,EAAK,YAAYpD,EAAK0/B,CAAG,EAC5C,IAAI10B,EACJ,GAAI20B,EAAU,CACNF,EACAz/B,EAAI,UAAS,EAEb6/B,GAAmB7/B,EAAKvL,EAAQ2E,EAAKpB,CAAQ,EAEjD,MAAM8nC,EAAa,CAAC,CAACrrC,EAAO,YAAYuL,EAAK28B,EAAK,CAC9C,KAAM8C,EACN,QAAS,EACzB,CAAa,EACDz0B,EAAOy0B,GAAYK,EACd90B,GACD60B,GAAmB7/B,EAAKvL,EAAQ0E,EAAOnB,CAAQ,CAEtD,CACDgI,EAAI,UAAS,EACbA,EAAI,KAAKgL,EAAO,UAAY,SAAS,EACrChL,EAAI,QAAO,CACd,CACL,CACA,SAAS4/B,GAAW5/B,EAAKmU,EAAOzE,EAAQ,CACpC,KAAM,CAAE,IAAApM,EAAM,OAAAC,CAAM,EAAM4Q,EAAM,MAAM,UAChC,CAAE,SAAAnc,EAAW,MAAAmB,EAAQ,IAAAC,CAAG,EAAMsW,GAAU,CAAA,EAC1C1X,IAAa,MACbgI,EAAI,UAAS,EACbA,EAAI,KAAK7G,EAAOmK,EAAKlK,EAAMD,EAAOoK,EAASD,CAAG,EAC9CtD,EAAI,KAAI,EAEhB,CACA,SAAS6/B,GAAmB7/B,EAAKvL,EAAQ6N,EAAOtK,EAAU,CACtD,MAAM+nC,EAAoBtrC,EAAO,YAAY6N,EAAOtK,CAAQ,EACxD+nC,GACA//B,EAAI,OAAO+/B,EAAkB,EAAGA,EAAkB,CAAC,CAE3D,CAEG,IAAC/lC,GAAQ,CACR,GAAI,SACJ,oBAAqBkH,EAAO8+B,EAAOlrC,EAAS,CACxC,MAAM4H,GAASwE,EAAM,KAAK,UAAY,CAAE,GAAE,OACpChM,EAAU,CAAA,EAChB,IAAIoH,EAAMpN,EAAGkU,EAAM5O,EACnB,IAAItF,EAAI,EAAGA,EAAIwN,EAAO,EAAExN,EACpBoN,EAAO4E,EAAM,eAAehS,CAAC,EAC7BkU,EAAO9G,EAAK,QACZ9H,EAAS,KACL4O,GAAQA,EAAK,SAAWA,aAAgBk3B,KACxC9lC,EAAS,CACL,QAAS0M,EAAM,iBAAiBhS,CAAC,EACjC,MAAOA,EACP,KAAMwuC,GAAYt6B,EAAMlU,EAAGwN,CAAK,EAChC,MAAAwE,EACA,KAAM5E,EAAK,WAAW,QAAQ,UAC9B,MAAOA,EAAK,OACZ,KAAA8G,CACpB,GAEY9G,EAAK,QAAU9H,EACfU,EAAQ,KAAKV,CAAM,EAEvB,IAAItF,EAAI,EAAGA,EAAIwN,EAAO,EAAExN,EACpBsF,EAASU,EAAQhG,CAAC,EACd,GAACsF,GAAUA,EAAO,OAAS,MAG/BA,EAAO,KAAO8oC,GAAepoC,EAAShG,EAAG4F,EAAQ,SAAS,EAEjE,EACD,WAAYoM,EAAO8+B,EAAOlrC,EAAS,CAC/B,MAAMsd,EAAOtd,EAAQ,WAAa,aAC5B2f,EAAWvT,EAAM,+BACjBqB,EAAOrB,EAAM,UACnB,QAAQhS,EAAIulB,EAAS,OAAS,EAAGvlB,GAAK,EAAG,EAAEA,EAAE,CACzC,MAAMsF,EAASigB,EAASvlB,CAAC,EAAE,QACtBsF,IAGLA,EAAO,KAAK,oBAAoB+N,EAAM/N,EAAO,IAAI,EAC7C4d,GAAQ5d,EAAO,MACf2qC,GAAUj+B,EAAM,IAAK1M,EAAQ+N,CAAI,EAExC,CACJ,EACD,mBAAoBrB,EAAO8+B,EAAOlrC,EAAS,CACvC,GAAIA,EAAQ,WAAa,qBACrB,OAEJ,MAAM2f,EAAWvT,EAAM,+BACvB,QAAQhS,EAAIulB,EAAS,OAAS,EAAGvlB,GAAK,EAAG,EAAEA,EAAE,CACzC,MAAMsF,EAASigB,EAASvlB,CAAC,EAAE,QACvBmuC,GAAiB7oC,CAAM,GACvB2qC,GAAUj+B,EAAM,IAAK1M,EAAQ0M,EAAM,SAAS,CAEnD,CACJ,EACD,kBAAmBA,EAAOrN,EAAMiB,EAAS,CACrC,MAAMN,EAASX,EAAK,KAAK,QACrB,CAACwpC,GAAiB7oC,CAAM,GAAKM,EAAQ,WAAa,qBAGtDqqC,GAAUj+B,EAAM,IAAK1M,EAAQ0M,EAAM,SAAS,CAC/C,EACD,SAAU,CACN,UAAW,GACX,SAAU,mBACb,CACL,EAEA,MAAM++B,GAAa,CAACC,EAAW5Q,IAAW,CACtC,GAAI,CAAE,UAAA6Q,EAAW7Q,EAAW,SAAA8Q,EAAU9Q,CAAQ,EAAM4Q,EACpD,OAAIA,EAAU,gBACVC,EAAY,KAAK,IAAIA,EAAW7Q,CAAQ,EACxC8Q,EAAWF,EAAU,iBAAmB,KAAK,IAAIE,EAAU9Q,CAAQ,GAEhE,CACH,SAAA8Q,EACA,UAAAD,EACA,WAAY,KAAK,IAAI7Q,EAAU6Q,CAAS,CAChD,CACA,EACME,GAAa,CAAC/xC,EAAGT,IAAIS,IAAM,MAAQT,IAAM,MAAQS,EAAE,eAAiBT,EAAE,cAAgBS,EAAE,QAAUT,EAAE,MAC1G,MAAMyyC,WAAe9a,EAAQ,CAC5B,YAAYlS,EAAO,CACZ,QACA,KAAK,OAAS,GACd,KAAK,eAAiB,GAC7B,KAAK,aAAe,KACb,KAAK,aAAe,GACpB,KAAK,MAAQA,EAAO,MACpB,KAAK,QAAUA,EAAO,QACtB,KAAK,IAAMA,EAAO,IAClB,KAAK,YAAc,OACnB,KAAK,YAAc,OACnB,KAAK,WAAa,OAClB,KAAK,UAAY,OACjB,KAAK,SAAW,OAChB,KAAK,IAAM,OACX,KAAK,OAAS,OACd,KAAK,KAAO,OACZ,KAAK,MAAQ,OACb,KAAK,OAAS,OACd,KAAK,MAAQ,OACb,KAAK,SAAW,OAChB,KAAK,SAAW,OAChB,KAAK,OAAS,OACd,KAAK,SAAW,MACnB,CACD,OAAOrG,EAAUC,EAAWU,EAAS,CACjC,KAAK,SAAWX,EAChB,KAAK,UAAYC,EACjB,KAAK,SAAWU,EAChB,KAAK,cAAa,EAClB,KAAK,YAAW,EAChB,KAAK,IAAG,CACX,CACD,eAAgB,CACR,KAAK,gBACL,KAAK,MAAQ,KAAK,SAClB,KAAK,KAAO,KAAK,SAAS,KAC1B,KAAK,MAAQ,KAAK,QAElB,KAAK,OAAS,KAAK,UACnB,KAAK,IAAM,KAAK,SAAS,IACzB,KAAK,OAAS,KAAK,OAE1B,CACD,aAAc,CACV,MAAMsyB,EAAY,KAAK,QAAQ,QAAU,CAAA,EACzC,IAAIK,EAAc5sC,EAASusC,EAAU,eAAgB,CACjD,KAAK,KACjB,EAAW,IAAI,GAAK,GACRA,EAAU,SACVK,EAAcA,EAAY,OAAQrqC,GAAOgqC,EAAU,OAAOhqC,EAAM,KAAK,MAAM,IAAI,CAAC,GAEhFgqC,EAAU,OACVK,EAAcA,EAAY,KAAK,CAACjyC,EAAGT,IAAIqyC,EAAU,KAAK5xC,EAAGT,EAAG,KAAK,MAAM,IAAI,CAAC,GAE5E,KAAK,QAAQ,SACb0yC,EAAY,QAAO,EAEvB,KAAK,YAAcA,CACtB,CACD,KAAM,CACF,KAAM,CAAE,QAAAzrC,EAAU,IAAAkL,CAAM,EAAG,KAC3B,GAAI,CAAClL,EAAQ,QAAS,CAClB,KAAK,MAAQ,KAAK,OAAS,EAC3B,MACH,CACD,MAAMorC,EAAYprC,EAAQ,OACpB0rC,EAAY17B,EAAOo7B,EAAU,IAAI,EACjC5Q,EAAWkR,EAAU,KACrBpW,EAAc,KAAK,sBACnB,CAAE,SAAAgW,EAAW,WAAAK,CAAU,EAAMR,GAAWC,EAAW5Q,CAAQ,EACjE,IAAIluB,EAAO2L,EACX/M,EAAI,KAAOwgC,EAAU,OACjB,KAAK,gBACLp/B,EAAQ,KAAK,SACb2L,EAAS,KAAK,SAASqd,EAAakF,EAAU8Q,EAAUK,CAAU,EAAI,KAEtE1zB,EAAS,KAAK,UACd3L,EAAQ,KAAK,SAASgpB,EAAaoW,EAAWJ,EAAUK,CAAU,EAAI,IAE1E,KAAK,MAAQ,KAAK,IAAIr/B,EAAOtM,EAAQ,UAAY,KAAK,QAAQ,EAC9D,KAAK,OAAS,KAAK,IAAIiY,EAAQjY,EAAQ,WAAa,KAAK,SAAS,CACrE,CACJ,SAASs1B,EAAakF,EAAU8Q,EAAUK,EAAY,CAC/C,KAAM,CAAE,IAAAzgC,EAAM,SAAAiN,EAAW,QAAS,CAAE,OAAQ,CAAE,QAAA6V,CAAO,EAAS,EAAG,KAC3D4d,EAAW,KAAK,eAAiB,GACjCC,EAAa,KAAK,WAAa,CACjC,CACZ,EACc9U,EAAa4U,EAAa3d,EAChC,IAAI8d,EAAcxW,EAClBpqB,EAAI,UAAY,OAChBA,EAAI,aAAe,SACnB,IAAI6gC,EAAM,GACNv9B,EAAM,CAACuoB,EACX,YAAK,YAAY,QAAQ,CAACiV,EAAY5xC,IAAI,CACtC,MAAM4f,EAAYsxB,EAAW9Q,EAAW,EAAItvB,EAAI,YAAY8gC,EAAW,IAAI,EAAE,OACzE5xC,IAAM,GAAKyxC,EAAWA,EAAW,OAAS,CAAC,EAAI7xB,EAAY,EAAIgU,EAAU7V,KACzE2zB,GAAe/U,EACf8U,EAAWA,EAAW,QAAUzxC,EAAI,EAAI,EAAI,EAAE,EAAI,EAClDoU,GAAOuoB,EACPgV,KAEJH,EAASxxC,CAAC,EAAI,CACV,KAAM,EACN,IAAAoU,EACA,IAAAu9B,EACA,MAAO/xB,EACP,OAAQ2xB,CACxB,EACYE,EAAWA,EAAW,OAAS,CAAC,GAAK7xB,EAAYgU,CAC7D,CAAS,EACM8d,CACV,CACD,SAASxW,EAAaoW,EAAWJ,EAAUW,EAAa,CACpD,KAAM,CAAE,IAAA/gC,EAAM,UAAAkN,EAAY,QAAS,CAAE,OAAQ,CAAE,QAAA4V,CAAO,EAAS,EAAG,KAC5D4d,EAAW,KAAK,eAAiB,GACjCM,EAAc,KAAK,YAAc,GACjCC,EAAc/zB,EAAYkd,EAChC,IAAI8W,EAAape,EACbqe,EAAkB,EAClBC,EAAmB,EACnBllC,EAAO,EACPmlC,EAAM,EACV,YAAK,YAAY,QAAQ,CAACP,EAAY5xC,IAAI,CACtC,KAAM,CAAE,UAAA4f,EAAY,WAAA2xB,CAAU,EAAMa,GAAkBlB,EAAUI,EAAWxgC,EAAK8gC,EAAYC,CAAW,EACnG7xC,EAAI,GAAKkyC,EAAmBX,EAAa,EAAI3d,EAAUme,IACvDC,GAAcC,EAAkBre,EAChCke,EAAY,KAAK,CACb,MAAOG,EACP,OAAQC,CAC5B,CAAiB,EACDllC,GAAQilC,EAAkBre,EAC1Bue,IACAF,EAAkBC,EAAmB,GAEzCV,EAASxxC,CAAC,EAAI,CACV,KAAAgN,EACA,IAAKklC,EACL,IAAAC,EACA,MAAOvyB,EACP,OAAQ2xB,CACxB,EACYU,EAAkB,KAAK,IAAIA,EAAiBryB,CAAS,EACrDsyB,GAAoBX,EAAa3d,CAC7C,CAAS,EACDoe,GAAcC,EACdH,EAAY,KAAK,CACb,MAAOG,EACP,OAAQC,CACpB,CAAS,EACMF,CACV,CACD,gBAAiB,CACb,GAAI,CAAC,KAAK,QAAQ,QACd,OAEJ,MAAM9W,EAAc,KAAK,sBACnB,CAAE,eAAgBsW,EAAW,QAAS,CAAE,MAAA3kC,EAAQ,OAAQ,CAAE,QAAA+mB,CAAU,EAAG,IAAA1mB,CAAM,CAAA,EAAM,KACnFmlC,EAAYtyB,GAAc7S,EAAK,KAAK,KAAM,KAAK,KAAK,EAC1D,GAAI,KAAK,eAAgB,CACrB,IAAIykC,EAAM,EACN3kC,EAAOF,EAAeD,EAAO,KAAK,KAAO+mB,EAAS,KAAK,MAAQ,KAAK,WAAW+d,CAAG,CAAC,EACvF,UAAWW,KAAUd,EACbG,IAAQW,EAAO,MACfX,EAAMW,EAAO,IACbtlC,EAAOF,EAAeD,EAAO,KAAK,KAAO+mB,EAAS,KAAK,MAAQ,KAAK,WAAW+d,CAAG,CAAC,GAEvFW,EAAO,KAAO,KAAK,IAAMpX,EAActH,EACvC0e,EAAO,KAAOD,EAAU,WAAWA,EAAU,EAAErlC,CAAI,EAAGslC,EAAO,KAAK,EAClEtlC,GAAQslC,EAAO,MAAQ1e,CAEvC,KAAe,CACH,IAAIue,EAAM,EACN/9B,EAAMtH,EAAeD,EAAO,KAAK,IAAMquB,EAActH,EAAS,KAAK,OAAS,KAAK,YAAYue,CAAG,EAAE,MAAM,EAC5G,UAAWG,KAAUd,EACbc,EAAO,MAAQH,IACfA,EAAMG,EAAO,IACbl+B,EAAMtH,EAAeD,EAAO,KAAK,IAAMquB,EAActH,EAAS,KAAK,OAAS,KAAK,YAAYue,CAAG,EAAE,MAAM,GAE5GG,EAAO,IAAMl+B,EACbk+B,EAAO,MAAQ,KAAK,KAAO1e,EAC3B0e,EAAO,KAAOD,EAAU,WAAWA,EAAU,EAAEC,EAAO,IAAI,EAAGA,EAAO,KAAK,EACzEl+B,GAAOk+B,EAAO,OAAS1e,CAE9B,CACJ,CACD,cAAe,CACX,OAAO,KAAK,QAAQ,WAAa,OAAS,KAAK,QAAQ,WAAa,QACvE,CACD,MAAO,CACH,GAAI,KAAK,QAAQ,QAAS,CACtB,MAAM9iB,EAAM,KAAK,IACjByC,GAASzC,EAAK,IAAI,EAClB,KAAK,MAAK,EACV0C,GAAW1C,CAAG,CACjB,CACJ,CACJ,OAAQ,CACD,KAAM,CAAE,QAASkD,EAAO,YAAA89B,EAAc,WAAAL,EAAa,IAAA3gC,CAAM,EAAG,KACtD,CAAE,MAAAjE,EAAQ,OAAQmkC,CAAS,EAAMh9B,EACjCu+B,EAAe1jC,EAAS,MACxBwjC,EAAYtyB,GAAc/L,EAAK,IAAK,KAAK,KAAM,KAAK,KAAK,EACzDs9B,EAAY17B,EAAOo7B,EAAU,IAAI,EACjC,CAAE,QAAApd,CAAU,EAAGod,EACf5Q,EAAWkR,EAAU,KACrBkB,EAAepS,EAAW,EAChC,IAAIqS,EACJ,KAAK,UAAS,EACd3hC,EAAI,UAAYuhC,EAAU,UAAU,MAAM,EAC1CvhC,EAAI,aAAe,SACnBA,EAAI,UAAY,GAChBA,EAAI,KAAOwgC,EAAU,OACrB,KAAM,CAAE,SAAAJ,EAAW,UAAAD,EAAY,WAAAM,CAAa,EAAGR,GAAWC,EAAW5Q,CAAQ,EACvEsS,EAAgB,SAAS5qC,EAAGC,EAAG6pC,EAAY,CAC7C,GAAI,MAAMV,CAAQ,GAAKA,GAAY,GAAK,MAAMD,CAAS,GAAKA,EAAY,EACpE,OAEJngC,EAAI,KAAI,EACR,MAAMwtB,EAAYh6B,EAAestC,EAAW,UAAW,CAAC,EAQxD,GAPA9gC,EAAI,UAAYxM,EAAestC,EAAW,UAAWW,CAAY,EACjEzhC,EAAI,QAAUxM,EAAestC,EAAW,QAAS,MAAM,EACvD9gC,EAAI,eAAiBxM,EAAestC,EAAW,eAAgB,CAAC,EAChE9gC,EAAI,SAAWxM,EAAestC,EAAW,SAAU,OAAO,EAC1D9gC,EAAI,UAAYwtB,EAChBxtB,EAAI,YAAcxM,EAAestC,EAAW,YAAaW,CAAY,EACrEzhC,EAAI,YAAYxM,EAAestC,EAAW,SAAU,CAAE,CAAA,CAAC,EACnDZ,EAAU,cAAe,CACzB,MAAM2B,EAAc,CAChB,OAAQ1B,EAAY,KAAK,MAAQ,EACjC,WAAYW,EAAW,WACvB,SAAUA,EAAW,SACrB,YAAatT,CACjC,EACsBsU,EAAUP,EAAU,MAAMvqC,EAAGopC,EAAW,CAAC,EACzC2B,EAAU9qC,EAAIyqC,EACpBhgC,GAAgB1B,EAAK6hC,EAAaC,EAASC,EAAS7B,EAAU,iBAAmBE,CAAQ,CACzG,KAAmB,CACH,MAAM4B,EAAU/qC,EAAI,KAAK,KAAKq4B,EAAW6Q,GAAa,EAAG,CAAC,EACpD8B,EAAWV,EAAU,WAAWvqC,EAAGopC,CAAQ,EAC3C8B,EAAet9B,GAAck8B,EAAW,YAAY,EAC1D9gC,EAAI,UAAS,EACT,OAAO,OAAOkiC,CAAY,EAAE,KAAMh1C,GAAIA,IAAM,CAAC,EAC7C6W,GAAmB/D,EAAK,CACpB,EAAGiiC,EACH,EAAGD,EACH,EAAG5B,EACH,EAAGD,EACH,OAAQ+B,CAChC,CAAqB,EAEDliC,EAAI,KAAKiiC,EAAUD,EAAS5B,EAAUD,CAAS,EAEnDngC,EAAI,KAAI,EACJwtB,IAAc,GACdxtB,EAAI,OAAM,CAEjB,CACDA,EAAI,QAAO,CACvB,EACcmiC,EAAW,SAASnrC,EAAGC,EAAG6pC,EAAY,CACxCn9B,GAAW3D,EAAK8gC,EAAW,KAAM9pC,EAAGC,EAAIwpC,EAAa,EAAGD,EAAW,CAC/D,cAAeM,EAAW,OAC1B,UAAWS,EAAU,UAAUT,EAAW,SAAS,CACnE,CAAa,CACb,EACc3W,EAAe,KAAK,eACpBC,EAAc,KAAK,sBACrBD,EACAwX,EAAS,CACL,EAAG3lC,EAAeD,EAAO,KAAK,KAAO+mB,EAAS,KAAK,MAAQ6d,EAAW,CAAC,CAAC,EACxE,EAAG,KAAK,IAAM7d,EAAUsH,EACxB,KAAM,CACtB,EAEYuX,EAAS,CACL,EAAG,KAAK,KAAO7e,EACf,EAAG9mB,EAAeD,EAAO,KAAK,IAAMquB,EAActH,EAAS,KAAK,OAASke,EAAY,CAAC,EAAE,MAAM,EAC9F,KAAM,CACtB,EAEQ9xB,GAAsB,KAAK,IAAKhM,EAAK,aAAa,EAClD,MAAM2oB,EAAa4U,EAAa3d,EAChC,KAAK,YAAY,QAAQ,CAACge,EAAY5xC,IAAI,CACtC8Q,EAAI,YAAc8gC,EAAW,UAC7B9gC,EAAI,UAAY8gC,EAAW,UAC3B,MAAM9/B,EAAYhB,EAAI,YAAY8gC,EAAW,IAAI,EAAE,MAC7C3S,EAAYoT,EAAU,UAAUT,EAAW,YAAcA,EAAW,UAAYZ,EAAU,UAAU,EACpG9+B,EAAQg/B,EAAWsB,EAAe1gC,EACxC,IAAIhK,EAAI2qC,EAAO,EACX1qC,EAAI0qC,EAAO,EACfJ,EAAU,SAAS,KAAK,KAAK,EACzBpX,EACIj7B,EAAI,GAAK8H,EAAIoK,EAAQ0hB,EAAU,KAAK,QACpC7rB,EAAI0qC,EAAO,GAAK9V,EAChB8V,EAAO,OACP3qC,EAAI2qC,EAAO,EAAI3lC,EAAeD,EAAO,KAAK,KAAO+mB,EAAS,KAAK,MAAQ6d,EAAWgB,EAAO,IAAI,CAAC,GAE3FzyC,EAAI,GAAK+H,EAAI40B,EAAa,KAAK,SACtC70B,EAAI2qC,EAAO,EAAI3qC,EAAIgqC,EAAYW,EAAO,IAAI,EAAE,MAAQ7e,EACpD6e,EAAO,OACP1qC,EAAI0qC,EAAO,EAAI3lC,EAAeD,EAAO,KAAK,IAAMquB,EAActH,EAAS,KAAK,OAASke,EAAYW,EAAO,IAAI,EAAE,MAAM,GAExH,MAAMS,EAAQb,EAAU,EAAEvqC,CAAC,EAI3B,GAHA4qC,EAAcQ,EAAOnrC,EAAG6pC,CAAU,EAClC9pC,EAAIiF,GAAOkyB,EAAWn3B,EAAIopC,EAAWsB,EAAcvX,EAAenzB,EAAIoK,EAAQ,KAAK,MAAO8B,EAAK,GAAG,EAClGi/B,EAASZ,EAAU,EAAEvqC,CAAC,EAAGC,EAAG6pC,CAAU,EAClC3W,EACAwX,EAAO,GAAKvgC,EAAQ0hB,UACb,OAAOge,EAAW,MAAS,SAAU,CAC5C,MAAMuB,EAAiB7B,EAAU,WACjCmB,EAAO,GAAKW,GAA0BxB,EAAYuB,CAAc,EAAIvf,CACpF,MACgB6e,EAAO,GAAK9V,CAE5B,CAAS,EACDxc,GAAqB,KAAK,IAAKnM,EAAK,aAAa,CACpD,CACJ,WAAY,CACL,MAAMA,EAAO,KAAK,QACZ8mB,EAAY9mB,EAAK,MACjBq/B,EAAYz9B,EAAOklB,EAAU,IAAI,EACjCwY,EAAe39B,EAAUmlB,EAAU,OAAO,EAChD,GAAI,CAACA,EAAU,QACX,OAEJ,MAAMuX,EAAYtyB,GAAc/L,EAAK,IAAK,KAAK,KAAM,KAAK,KAAK,EACzDlD,EAAM,KAAK,IACX0e,EAAWsL,EAAU,SACrB0X,EAAea,EAAU,KAAO,EAChCE,EAA6BD,EAAa,IAAMd,EACtD,IAAIzqC,EACAiF,EAAO,KAAK,KACZ+Q,EAAW,KAAK,MACpB,GAAI,KAAK,eACLA,EAAW,KAAK,IAAI,GAAG,KAAK,UAAU,EACtChW,EAAI,KAAK,IAAMwrC,EACfvmC,EAAOF,EAAekH,EAAK,MAAOhH,EAAM,KAAK,MAAQ+Q,CAAQ,MAC1D,CACH,MAAMC,EAAY,KAAK,YAAY,OAAO,CAACqF,EAAK1Q,IAAO,KAAK,IAAI0Q,EAAK1Q,EAAK,MAAM,EAAG,CAAC,EACpF5K,EAAIwrC,EAA6BzmC,EAAekH,EAAK,MAAO,KAAK,IAAK,KAAK,OAASgK,EAAYhK,EAAK,OAAO,QAAU,KAAK,oBAAmB,CAAE,CACnJ,CACD,MAAMlM,EAAIgF,EAAe0iB,EAAUxiB,EAAMA,EAAO+Q,CAAQ,EACxDjN,EAAI,UAAYuhC,EAAU,UAAUzlC,GAAmB4iB,CAAQ,CAAC,EAChE1e,EAAI,aAAe,SACnBA,EAAI,YAAcgqB,EAAU,MAC5BhqB,EAAI,UAAYgqB,EAAU,MAC1BhqB,EAAI,KAAOuiC,EAAU,OACrB5+B,GAAW3D,EAAKgqB,EAAU,KAAMhzB,EAAGC,EAAGsrC,CAAS,CAClD,CACJ,qBAAsB,CACf,MAAMvY,EAAY,KAAK,QAAQ,MACzBuY,EAAYz9B,EAAOklB,EAAU,IAAI,EACjCwY,EAAe39B,EAAUmlB,EAAU,OAAO,EAChD,OAAOA,EAAU,QAAUuY,EAAU,WAAaC,EAAa,OAAS,CAC3E,CACJ,iBAAiBxrC,EAAGC,EAAG,CAChB,IAAI/H,EAAGwzC,EAAQC,EACf,GAAI/oC,GAAW5C,EAAG,KAAK,KAAM,KAAK,KAAK,GAAK4C,GAAW3C,EAAG,KAAK,IAAK,KAAK,MAAM,GAE3E,IADA0rC,EAAK,KAAK,eACNzzC,EAAI,EAAGA,EAAIyzC,EAAG,OAAQ,EAAEzzC,EAExB,GADAwzC,EAASC,EAAGzzC,CAAC,EACT0K,GAAW5C,EAAG0rC,EAAO,KAAMA,EAAO,KAAOA,EAAO,KAAK,GAAK9oC,GAAW3C,EAAGyrC,EAAO,IAAKA,EAAO,IAAMA,EAAO,MAAM,EAC9G,OAAO,KAAK,YAAYxzC,CAAC,EAIrC,OAAO,IACV,CACJ,YAAYkH,EAAG,CACR,MAAM8M,EAAO,KAAK,QAClB,GAAI,CAAC0/B,GAAWxsC,EAAE,KAAM8M,CAAI,EACxB,OAEJ,MAAM2/B,EAAc,KAAK,iBAAiBzsC,EAAE,EAAGA,EAAE,CAAC,EAClD,GAAIA,EAAE,OAAS,aAAeA,EAAE,OAAS,WAAY,CACjD,MAAMwM,EAAW,KAAK,aAChBkgC,EAAWzC,GAAWz9B,EAAUigC,CAAW,EAC7CjgC,GAAY,CAACkgC,GACbnvC,EAASuP,EAAK,QAAS,CACnB9M,EACAwM,EACA,IACH,EAAE,IAAI,EAEX,KAAK,aAAeigC,EAChBA,GAAe,CAACC,GAChBnvC,EAASuP,EAAK,QAAS,CACnB9M,EACAysC,EACA,IACH,EAAE,IAAI,CAEd,MAAUA,GACPlvC,EAASuP,EAAK,QAAS,CACnB9M,EACAysC,EACA,IACH,EAAE,IAAI,CAEd,CACL,CACA,SAASvB,GAAkBlB,EAAUI,EAAWxgC,EAAK8gC,EAAYC,EAAa,CAC1E,MAAMjyB,EAAYi0B,GAAmBjC,EAAYV,EAAUI,EAAWxgC,CAAG,EACnEygC,EAAauC,GAAoBjC,EAAaD,EAAYN,EAAU,UAAU,EACpF,MAAO,CACH,UAAA1xB,EACA,WAAA2xB,CACR,CACA,CACA,SAASsC,GAAmBjC,EAAYV,EAAUI,EAAWxgC,EAAK,CAC9D,IAAIijC,EAAiBnC,EAAW,KAChC,OAAImC,GAAkB,OAAOA,GAAmB,WAC5CA,EAAiBA,EAAe,OAAO,CAAC30C,EAAGT,IAAIS,EAAE,OAAST,EAAE,OAASS,EAAIT,CAAC,GAEvEuyC,EAAWI,EAAU,KAAO,EAAIxgC,EAAI,YAAYijC,CAAc,EAAE,KAC3E,CACA,SAASD,GAAoBjC,EAAaD,EAAYuB,EAAgB,CAClE,IAAI5B,EAAaM,EACjB,OAAI,OAAOD,EAAW,MAAS,WAC3BL,EAAa6B,GAA0BxB,EAAYuB,CAAc,GAE9D5B,CACX,CACA,SAAS6B,GAA0BxB,EAAYuB,EAAgB,CAC3D,MAAM1X,EAAcmW,EAAW,KAAOA,EAAW,KAAK,OAAS,EAC/D,OAAOuB,EAAiB1X,CAC5B,CACA,SAASiY,GAAWxwC,EAAM8Q,EAAM,CAI5B,MAHK,IAAA9Q,IAAS,aAAeA,IAAS,cAAgB8Q,EAAK,SAAWA,EAAK,UAGvEA,EAAK,UAAY9Q,IAAS,SAAWA,IAAS,WAItD,CACG,IAAC8wC,GAAgB,CAChB,GAAI,SACP,SAAU5C,GACP,MAAOp/B,EAAO8+B,EAAOlrC,EAAS,CAC1B,MAAMquC,EAASjiC,EAAM,OAAS,IAAIo/B,GAAO,CACrC,IAAKp/B,EAAM,IACX,QAAApM,EACA,MAAAoM,CACZ,CAAS,EACDyf,EAAQ,UAAUzf,EAAOiiC,EAAQruC,CAAO,EACxC6rB,EAAQ,OAAOzf,EAAOiiC,CAAM,CAC/B,EACD,KAAMjiC,EAAO,CACTyf,EAAQ,UAAUzf,EAAOA,EAAM,MAAM,EACrC,OAAOA,EAAM,MAChB,EACD,aAAcA,EAAO8+B,EAAOlrC,EAAS,CACjC,MAAMquC,EAASjiC,EAAM,OACrByf,EAAQ,UAAUzf,EAAOiiC,EAAQruC,CAAO,EACxCquC,EAAO,QAAUruC,CACpB,EACD,YAAaoM,EAAO,CAChB,MAAMiiC,EAASjiC,EAAM,OACrBiiC,EAAO,YAAW,EAClBA,EAAO,eAAc,CACxB,EACD,WAAYjiC,EAAOrN,EAAM,CAChBA,EAAK,QACNqN,EAAM,OAAO,YAAYrN,EAAK,KAAK,CAE1C,EACD,SAAU,CACN,QAAS,GACT,SAAU,MACV,MAAO,SACP,SAAU,GACV,QAAS,GACT,OAAQ,IACR,QAASuC,EAAG0qC,EAAYqC,EAAQ,CAC5B,MAAMnpC,EAAQ8mC,EAAW,aACnBsC,EAAKD,EAAO,MACdC,EAAG,iBAAiBppC,CAAK,GACzBopC,EAAG,KAAKppC,CAAK,EACb8mC,EAAW,OAAS,KAEpBsC,EAAG,KAAKppC,CAAK,EACb8mC,EAAW,OAAS,GAE3B,EACD,QAAS,KACT,QAAS,KACT,OAAQ,CACJ,MAAQ9gC,GAAMA,EAAI,MAAM,QAAQ,MAChC,SAAU,GACV,QAAS,GACT,eAAgBkB,EAAO,CACnB,MAAMo1B,EAAWp1B,EAAM,KAAK,SACtB,CAAE,OAAQ,CAAE,cAAAmiC,EAAgB,WAAAC,EAAa,UAAAnV,EAAY,MAAA77B,EAAQ,gBAAAixC,EAAkB,aAAArB,CAAY,CAAM,EAAGhhC,EAAM,OAAO,QACvH,OAAOA,EAAM,uBAAsB,EAAG,IAAK5E,GAAO,CAC9C,MAAM2F,EAAQ3F,EAAK,WAAW,SAAS+mC,EAAgB,EAAI,MAAS,EAC9DxI,EAAch2B,EAAU5C,EAAM,WAAW,EAC/C,MAAO,CACH,KAAMq0B,EAASh6B,EAAK,KAAK,EAAE,MAC3B,UAAW2F,EAAM,gBACjB,UAAW3P,EACX,OAAQ,CAACgK,EAAK,QACd,QAAS2F,EAAM,eACf,SAAUA,EAAM,WAChB,eAAgBA,EAAM,iBACtB,SAAUA,EAAM,gBAChB,WAAY44B,EAAY,MAAQA,EAAY,QAAU,EACtD,YAAa54B,EAAM,YACnB,WAAYqhC,GAAcrhC,EAAM,WAChC,SAAUA,EAAM,SAChB,UAAWksB,GAAalsB,EAAM,UAC9B,aAAcshC,IAAoBrB,GAAgBjgC,EAAM,cACxD,aAAc3F,EAAK,KAC3C,CACiB,EAAE,IAAI,CACV,CACJ,EACD,MAAO,CACH,MAAQ0D,GAAMA,EAAI,MAAM,QAAQ,MAChC,QAAS,GACT,SAAU,SACV,KAAM,EACT,CACJ,EACD,YAAa,CACT,YAAchC,GAAO,CAACA,EAAK,WAAW,IAAI,EAC1C,OAAQ,CACJ,YAAcA,GAAO,CAAC,CACd,iBACA,SACA,MACpB,EAAkB,SAASA,CAAI,CACtB,CACJ,CACL,EAEA,MAAMwlC,WAAche,EAAQ,CAC3B,YAAYlS,EAAO,CACZ,QACA,KAAK,MAAQA,EAAO,MACpB,KAAK,QAAUA,EAAO,QACtB,KAAK,IAAMA,EAAO,IAClB,KAAK,SAAW,OAChB,KAAK,IAAM,OACX,KAAK,OAAS,OACd,KAAK,KAAO,OACZ,KAAK,MAAQ,OACb,KAAK,MAAQ,OACb,KAAK,OAAS,OACd,KAAK,SAAW,OAChB,KAAK,OAAS,OACd,KAAK,SAAW,MACnB,CACD,OAAOrG,EAAUC,EAAW,CACxB,MAAMhK,EAAO,KAAK,QAGlB,GAFA,KAAK,KAAO,EACZ,KAAK,IAAM,EACP,CAACA,EAAK,QAAS,CACf,KAAK,MAAQ,KAAK,OAAS,KAAK,MAAQ,KAAK,OAAS,EACtD,MACH,CACD,KAAK,MAAQ,KAAK,MAAQ+J,EAC1B,KAAK,OAAS,KAAK,OAASC,EAC5B,MAAMkhB,EAAYj7B,EAAQ+P,EAAK,IAAI,EAAIA,EAAK,KAAK,OAAS,EAC1D,KAAK,SAAW2B,EAAU3B,EAAK,OAAO,EACtC,MAAMugC,EAAWrV,EAAYtpB,EAAO5B,EAAK,IAAI,EAAE,WAAa,KAAK,SAAS,OACtE,KAAK,eACL,KAAK,OAASugC,EAEd,KAAK,MAAQA,CAEpB,CACD,cAAe,CACX,MAAMv3B,EAAM,KAAK,QAAQ,SACzB,OAAOA,IAAQ,OAASA,IAAQ,QACnC,CACD,UAAUua,EAAQ,CACd,KAAM,CAAE,IAAAnjB,EAAM,KAAApH,EAAO,OAAAqH,EAAS,MAAApH,EAAQ,QAAArH,CAAU,EAAG,KAC7CiH,EAAQjH,EAAQ,MACtB,IAAIoN,EAAW,EACX+K,EAAUwb,EAAQC,EACtB,OAAI,KAAK,gBACLD,EAASzsB,EAAeD,EAAOG,EAAMC,CAAK,EAC1CusB,EAASplB,EAAMmjB,EACfxZ,EAAW9Q,EAAQD,IAEfpH,EAAQ,WAAa,QACrB2zB,EAASvsB,EAAOuqB,EAChBiC,EAAS1sB,EAAeD,EAAOwH,EAAQD,CAAG,EAC1CpB,EAAW7L,EAAK,MAEhBoyB,EAAStsB,EAAQsqB,EACjBiC,EAAS1sB,EAAeD,EAAOuH,EAAKC,CAAM,EAC1CrB,EAAW7L,EAAK,IAEpB4W,EAAW1J,EAASD,GAEjB,CACH,OAAAmlB,EACA,OAAAC,EACA,SAAAzb,EACA,SAAA/K,CACZ,CACK,CACD,MAAO,CACH,MAAMlC,EAAM,KAAK,IACXkD,EAAO,KAAK,QAClB,GAAI,CAACA,EAAK,QACN,OAEJ,MAAMwgC,EAAW5+B,EAAO5B,EAAK,IAAI,EAE3BujB,EADaid,EAAS,WACA,EAAI,KAAK,SAAS,IACxC,CAAE,OAAAjb,EAAS,OAAAC,EAAS,SAAAzb,EAAW,SAAA/K,CAAQ,EAAM,KAAK,UAAUukB,CAAM,EACxE9iB,GAAW3D,EAAKkD,EAAK,KAAM,EAAG,EAAGwgC,EAAU,CACvC,MAAOxgC,EAAK,MACZ,SAAA+J,EACA,SAAA/K,EACA,UAAWpG,GAAmBoH,EAAK,KAAK,EACxC,aAAc,SACd,YAAa,CACTulB,EACAC,CACH,CACb,CAAS,CACJ,CACL,CACA,SAASib,GAAYziC,EAAO8oB,EAAW,CACnC,MAAMiF,EAAQ,IAAIuU,GAAM,CACpB,IAAKtiC,EAAM,IACX,QAAS8oB,EACT,MAAA9oB,CACR,CAAK,EACDyf,EAAQ,UAAUzf,EAAO+tB,EAAOjF,CAAS,EACzCrJ,EAAQ,OAAOzf,EAAO+tB,CAAK,EAC3B/tB,EAAM,WAAa+tB,CACvB,CACG,IAAC2U,GAAe,CACf,GAAI,QACP,SAAUJ,GACP,MAAOtiC,EAAO8+B,EAAOlrC,EAAS,CAC1B6uC,GAAYziC,EAAOpM,CAAO,CAC7B,EACD,KAAMoM,EAAO,CACT,MAAM2iC,EAAa3iC,EAAM,WACzByf,EAAQ,UAAUzf,EAAO2iC,CAAU,EACnC,OAAO3iC,EAAM,UAChB,EACD,aAAcA,EAAO8+B,EAAOlrC,EAAS,CACjC,MAAMm6B,EAAQ/tB,EAAM,WACpByf,EAAQ,UAAUzf,EAAO+tB,EAAOn6B,CAAO,EACvCm6B,EAAM,QAAUn6B,CACnB,EACD,SAAU,CACN,MAAO,SACP,QAAS,GACT,KAAM,CACF,OAAQ,MACX,EACD,SAAU,GACV,QAAS,GACT,SAAU,MACV,KAAM,GACN,OAAQ,GACX,EACD,cAAe,CACX,MAAO,OACV,EACD,YAAa,CACT,YAAa,GACb,WAAY,EACf,CACL,EA6CA,MAAMgvC,GAAc,CACnB,QAASzoC,EAAO,CACT,GAAI,CAACA,EAAM,OACP,MAAO,GAEX,IAAInM,EAAGf,EACH41C,EAAO,IAAI,IACX9sC,EAAI,EACJyF,EAAQ,EACZ,IAAIxN,EAAI,EAAGf,EAAMkN,EAAM,OAAQnM,EAAIf,EAAK,EAAEe,EAAE,CACxC,MAAM2c,EAAKxQ,EAAMnM,CAAC,EAAE,QACpB,GAAI2c,GAAMA,EAAG,WAAY,CACrB,MAAMK,EAAML,EAAG,kBACfk4B,EAAK,IAAI73B,EAAI,CAAC,EACdjV,GAAKiV,EAAI,EACT,EAAExP,CACL,CACJ,CACD,OAAIA,IAAU,GAAKqnC,EAAK,OAAS,EACtB,GAKJ,CACH,EAJa,CACb,GAAGA,CACf,EAAU,OAAO,CAAC,EAAGl2C,IAAI,EAAIA,CAAC,EAAIk2C,EAAK,KAG3B,EAAG9sC,EAAIyF,CACnB,CACK,EACJ,QAASrB,EAAO2oC,EAAe,CACxB,GAAI,CAAC3oC,EAAM,OACP,MAAO,GAEX,IAAIrE,EAAIgtC,EAAc,EAClB/sC,EAAI+sC,EAAc,EAClBtkB,EAAc,OAAO,kBACrBxwB,EAAGf,EAAK81C,EACZ,IAAI/0C,EAAI,EAAGf,EAAMkN,EAAM,OAAQnM,EAAIf,EAAK,EAAEe,EAAE,CACxC,MAAM2c,EAAKxQ,EAAMnM,CAAC,EAAE,QACpB,GAAI2c,GAAMA,EAAG,WAAY,CACrB,MAAMuR,EAASvR,EAAG,iBACZvc,EAAIuJ,GAAsBmrC,EAAe5mB,CAAM,EACjD9tB,EAAIowB,IACJA,EAAcpwB,EACd20C,EAAiBp4B,EAExB,CACJ,CACD,GAAIo4B,EAAgB,CAChB,MAAMC,EAAKD,EAAe,kBAC1BjtC,EAAIktC,EAAG,EACPjtC,EAAIitC,EAAG,CACV,CACD,MAAO,CACH,EAAAltC,EACA,EAAAC,CACZ,CACK,CACL,EACA,SAASktC,GAAarpC,EAAMspC,EAAQ,CAChC,OAAIA,IACIjxC,EAAQixC,CAAM,EACd,MAAM,UAAU,KAAK,MAAMtpC,EAAMspC,CAAM,EAEvCtpC,EAAK,KAAKspC,CAAM,GAGjBtpC,CACX,CACC,SAASupC,GAAcn2C,EAAK,CACzB,OAAK,OAAOA,GAAQ,UAAYA,aAAe,SAAWA,EAAI,QAAQ;AAAA,CAAI,EAAI,GACnEA,EAAI,MAAM;AAAA,CAAI,EAElBA,CACX,CACC,SAASo2C,GAAkBpjC,EAAOhL,EAAM,CACrC,KAAM,CAAE,QAAAyV,EAAU,aAAA4F,EAAe,MAAAvX,CAAK,EAAM9D,EACtCggB,EAAahV,EAAM,eAAeqQ,CAAY,EAAE,WAChD,CAAE,MAAAma,EAAQ,MAAAx4B,CAAK,EAAMgjB,EAAW,iBAAiBlc,CAAK,EAC5D,MAAO,CACH,MAAAkH,EACA,MAAAwqB,EACA,OAAQxV,EAAW,UAAUlc,CAAK,EAClC,IAAKkH,EAAM,KAAK,SAASqQ,CAAY,EAAE,KAAKvX,CAAK,EACjD,eAAgB9G,EAChB,QAASgjB,EAAW,WAAY,EAChC,UAAWlc,EACX,aAAAuX,EACA,QAAA5F,CACR,CACA,CACC,SAAS44B,GAAeC,EAAS1vC,EAAS,CACvC,MAAMkL,EAAMwkC,EAAQ,MAAM,IACpB,CAAE,KAAAC,EAAO,OAAAC,EAAS,MAAAzV,CAAK,EAAMuV,EAC7B,CAAE,SAAApE,EAAW,UAAAD,CAAY,EAAGrrC,EAC5B6vC,EAAW7/B,EAAOhQ,EAAQ,QAAQ,EAClCytC,EAAYz9B,EAAOhQ,EAAQ,SAAS,EACpC8vC,EAAa9/B,EAAOhQ,EAAQ,UAAU,EACtC+vC,EAAiB5V,EAAM,OACvB6V,EAAkBJ,EAAO,OACzBK,EAAoBN,EAAK,OACzB3hB,EAAUje,EAAU/P,EAAQ,OAAO,EACzC,IAAIiY,EAAS+V,EAAQ,OACjB1hB,EAAQ,EACR4jC,EAAqBP,EAAK,OAAO,CAAC/nC,EAAOuoC,IAAWvoC,EAAQuoC,EAAS,OAAO,OAASA,EAAS,MAAM,OAASA,EAAS,MAAM,OAAQ,CAAC,EAKzI,GAJAD,GAAsBR,EAAQ,WAAW,OAASA,EAAQ,UAAU,OAChEK,IACA93B,GAAU83B,EAAiBtC,EAAU,YAAcsC,EAAiB,GAAK/vC,EAAQ,aAAeA,EAAQ,mBAExGkwC,EAAoB,CACpB,MAAME,EAAiBpwC,EAAQ,cAAgB,KAAK,IAAIqrC,EAAWwE,EAAS,UAAU,EAAIA,EAAS,WACnG53B,GAAUg4B,EAAoBG,GAAkBF,EAAqBD,GAAqBJ,EAAS,YAAcK,EAAqB,GAAKlwC,EAAQ,WACtJ,CACGgwC,IACA/3B,GAAUjY,EAAQ,gBAAkBgwC,EAAkBF,EAAW,YAAcE,EAAkB,GAAKhwC,EAAQ,eAElH,IAAIqwC,EAAe,EACnB,MAAMC,EAAe,SAAShiC,EAAM,CAChChC,EAAQ,KAAK,IAAIA,EAAOpB,EAAI,YAAYoD,CAAI,EAAE,MAAQ+hC,CAAY,CAC1E,EACI,OAAAnlC,EAAI,KAAI,EACRA,EAAI,KAAOuiC,EAAU,OACrBxuC,EAAKywC,EAAQ,MAAOY,CAAY,EAChCplC,EAAI,KAAO2kC,EAAS,OACpB5wC,EAAKywC,EAAQ,WAAW,OAAOA,EAAQ,SAAS,EAAGY,CAAY,EAC/DD,EAAerwC,EAAQ,cAAgBsrC,EAAW,EAAItrC,EAAQ,WAAa,EAC3Ef,EAAK0wC,EAAOQ,GAAW,CACnBlxC,EAAKkxC,EAAS,OAAQG,CAAY,EAClCrxC,EAAKkxC,EAAS,MAAOG,CAAY,EACjCrxC,EAAKkxC,EAAS,MAAOG,CAAY,CACzC,CAAK,EACDD,EAAe,EACfnlC,EAAI,KAAO4kC,EAAW,OACtB7wC,EAAKywC,EAAQ,OAAQY,CAAY,EACjCplC,EAAI,QAAO,EACXoB,GAAS0hB,EAAQ,MACV,CACH,MAAA1hB,EACA,OAAA2L,CACR,CACA,CACA,SAASs4B,GAAgBnkC,EAAOW,EAAM,CAClC,KAAM,CAAE,EAAA5K,EAAI,OAAA8V,CAAS,EAAGlL,EACxB,OAAI5K,EAAI8V,EAAS,EACN,MACA9V,EAAIiK,EAAM,OAAS6L,EAAS,EAC5B,SAEJ,QACX,CACA,SAASu4B,GAAoBC,EAAQrkC,EAAOpM,EAAS+M,EAAM,CACvD,KAAM,CAAE,EAAA7K,EAAI,MAAAoK,CAAQ,EAAGS,EACjB2jC,EAAQ1wC,EAAQ,UAAYA,EAAQ,aAI1C,GAHIywC,IAAW,QAAUvuC,EAAIoK,EAAQokC,EAAQtkC,EAAM,OAG/CqkC,IAAW,SAAWvuC,EAAIoK,EAAQokC,EAAQ,EAC1C,MAAO,EAEf,CACA,SAASC,GAAgBvkC,EAAOpM,EAAS+M,EAAM6jC,EAAQ,CACnD,KAAM,CAAE,EAAA1uC,EAAI,MAAAoK,CAAQ,EAAGS,EACjB,CAAE,MAAO8jC,EAAa,UAAW,CAAE,KAAAzpC,EAAO,MAAAC,CAAK,CAAM,EAAG+E,EAC9D,IAAIqkC,EAAS,SACb,OAAIG,IAAW,SACXH,EAASvuC,IAAMkF,EAAOC,GAAS,EAAI,OAAS,QACrCnF,GAAKoK,EAAQ,EACpBmkC,EAAS,OACFvuC,GAAK2uC,EAAavkC,EAAQ,IACjCmkC,EAAS,SAETD,GAAoBC,EAAQrkC,EAAOpM,EAAS+M,CAAI,IAChD0jC,EAAS,UAENA,CACX,CACC,SAASK,GAAmB1kC,EAAOpM,EAAS+M,EAAM,CAC/C,MAAM6jC,EAAS7jC,EAAK,QAAU/M,EAAQ,QAAUuwC,GAAgBnkC,EAAOW,CAAI,EAC3E,MAAO,CACH,OAAQA,EAAK,QAAU/M,EAAQ,QAAU2wC,GAAgBvkC,EAAOpM,EAAS+M,EAAM6jC,CAAM,EACrF,OAAAA,CACR,CACA,CACA,SAASG,GAAOhkC,EAAM0jC,EAAQ,CAC1B,GAAI,CAAE,EAAAvuC,EAAI,MAAAoK,CAAQ,EAAGS,EACrB,OAAI0jC,IAAW,QACXvuC,GAAKoK,EACEmkC,IAAW,WAClBvuC,GAAKoK,EAAQ,GAEVpK,CACX,CACA,SAAS8uC,GAAOjkC,EAAM6jC,EAAQK,EAAgB,CAC1C,GAAI,CAAE,EAAA9uC,EAAI,OAAA8V,CAAS,EAAGlL,EACtB,OAAI6jC,IAAW,MACXzuC,GAAK8uC,EACEL,IAAW,SAClBzuC,GAAK8V,EAASg5B,EAEd9uC,GAAK8V,EAAS,EAEX9V,CACX,CACC,SAAS+uC,GAAmBlxC,EAAS+M,EAAMokC,EAAW/kC,EAAO,CAC1D,KAAM,CAAE,UAAAglC,EAAY,aAAAC,EAAe,aAAArkC,CAAY,EAAMhN,EAC/C,CAAE,OAAAywC,EAAS,OAAAG,CAAS,EAAGO,EACvBF,EAAiBG,EAAYC,EAC7B,CAAE,QAAAC,EAAU,SAAAC,EAAW,WAAAC,EAAa,YAAAC,GAAiB3hC,GAAc9C,CAAY,EACrF,IAAI9K,EAAI6uC,GAAOhkC,EAAM0jC,CAAM,EAC3B,MAAMtuC,EAAI6uC,GAAOjkC,EAAM6jC,EAAQK,CAAc,EAC7C,OAAIL,IAAW,SACPH,IAAW,OACXvuC,GAAK+uC,EACER,IAAW,UAClBvuC,GAAK+uC,GAEFR,IAAW,OAClBvuC,GAAK,KAAK,IAAIovC,EAASE,CAAU,EAAIJ,EAC9BX,IAAW,UAClBvuC,GAAK,KAAK,IAAIqvC,EAAUE,CAAW,EAAIL,GAEpC,CACH,EAAGxsC,EAAY1C,EAAG,EAAGkK,EAAM,MAAQW,EAAK,KAAK,EAC7C,EAAGnI,EAAYzC,EAAG,EAAGiK,EAAM,OAASW,EAAK,MAAM,CACvD,CACA,CACA,SAAS2kC,GAAYhC,EAASzoC,EAAOjH,EAAS,CAC1C,MAAMguB,EAAUje,EAAU/P,EAAQ,OAAO,EACzC,OAAOiH,IAAU,SAAWyoC,EAAQ,EAAIA,EAAQ,MAAQ,EAAIzoC,IAAU,QAAUyoC,EAAQ,EAAIA,EAAQ,MAAQ1hB,EAAQ,MAAQ0hB,EAAQ,EAAI1hB,EAAQ,IACpJ,CACC,SAAS2jB,GAAwB9yC,EAAU,CACxC,OAAOwwC,GAAa,CAAE,EAAEE,GAAc1wC,CAAQ,CAAC,CACnD,CACA,SAAS+yC,GAAqBz+B,EAAQu8B,EAASmC,EAAc,CACzD,OAAOjhC,GAAcuC,EAAQ,CACzB,QAAAu8B,EACA,aAAAmC,EACA,KAAM,SACd,CAAK,CACL,CACA,SAASC,GAAkB30B,EAAWlS,EAAS,CAC3C,MAAMyvB,EAAWzvB,GAAWA,EAAQ,SAAWA,EAAQ,QAAQ,SAAWA,EAAQ,QAAQ,QAAQ,UAClG,OAAOyvB,EAAWvd,EAAU,SAASud,CAAQ,EAAIvd,CACrD,CACA,MAAM40B,GAAmB,CACrB,YAAa/zC,GACb,MAAO6zC,EAAc,CACjB,GAAIA,EAAa,OAAS,EAAG,CACzB,MAAMzwC,EAAOywC,EAAa,CAAC,EACrBvuB,EAASliB,EAAK,MAAM,KAAK,OACzB4wC,EAAa1uB,EAASA,EAAO,OAAS,EAC5C,GAAI,MAAQ,KAAK,SAAW,KAAK,QAAQ,OAAS,UAC9C,OAAOliB,EAAK,QAAQ,OAAS,GAC1B,GAAIA,EAAK,MACZ,OAAOA,EAAK,MACT,GAAI4wC,EAAa,GAAK5wC,EAAK,UAAY4wC,EAC1C,OAAO1uB,EAAOliB,EAAK,SAAS,CAEnC,CACD,MAAO,EACV,EACD,WAAYpD,GACZ,WAAYA,GACZ,YAAaA,GACb,MAAOi0C,EAAa,CAChB,GAAI,MAAQ,KAAK,SAAW,KAAK,QAAQ,OAAS,UAC9C,OAAOA,EAAY,MAAQ,KAAOA,EAAY,gBAAkBA,EAAY,eAEhF,IAAIrb,EAAQqb,EAAY,QAAQ,OAAS,GACrCrb,IACAA,GAAS,MAEb,MAAMx4B,EAAQ6zC,EAAY,eAC1B,OAAK9zC,EAAcC,CAAK,IACpBw4B,GAASx4B,GAENw4B,CACV,EACD,WAAYqb,EAAa,CAErB,MAAMjyC,EADOiyC,EAAY,MAAM,eAAeA,EAAY,YAAY,EACjD,WAAW,SAASA,EAAY,SAAS,EAC9D,MAAO,CACH,YAAajyC,EAAQ,YACrB,gBAAiBA,EAAQ,gBACzB,YAAaA,EAAQ,YACrB,WAAYA,EAAQ,WACpB,iBAAkBA,EAAQ,iBAC1B,aAAc,CAC1B,CACK,EACD,gBAAkB,CACd,OAAO,KAAK,QAAQ,SACvB,EACD,gBAAiBiyC,EAAa,CAE1B,MAAMjyC,EADOiyC,EAAY,MAAM,eAAeA,EAAY,YAAY,EACjD,WAAW,SAASA,EAAY,SAAS,EAC9D,MAAO,CACH,WAAYjyC,EAAQ,WACpB,SAAUA,EAAQ,QAC9B,CACK,EACD,WAAYhC,GACZ,UAAWA,GACX,aAAcA,GACd,OAAQA,GACR,YAAaA,EACjB,EACC,SAASk0C,EAA2B/0B,EAAWjU,EAAMgC,EAAKowB,EAAK,CAC5D,MAAM34B,EAASwa,EAAUjU,CAAI,EAAE,KAAKgC,EAAKowB,CAAG,EAC5C,OAAI,OAAO34B,EAAW,IACXovC,GAAiB7oC,CAAI,EAAE,KAAKgC,EAAKowB,CAAG,EAExC34B,CACX,CACA,MAAMwvC,WAAgBzhB,EAAQ,CAC7B,OAAO,YAAcse,GAClB,YAAYxwB,EAAO,CACf,QACA,KAAK,QAAU,EACf,KAAK,QAAU,GACf,KAAK,eAAiB,OACtB,KAAK,MAAQ,OACb,KAAK,kBAAoB,OACzB,KAAK,cAAgB,GACrB,KAAK,YAAc,OACnB,KAAK,SAAW,OAChB,KAAK,MAAQA,EAAO,MACpB,KAAK,QAAUA,EAAO,QACtB,KAAK,WAAa,OAClB,KAAK,MAAQ,OACb,KAAK,WAAa,OAClB,KAAK,KAAO,OACZ,KAAK,UAAY,OACjB,KAAK,OAAS,OACd,KAAK,OAAS,OACd,KAAK,OAAS,OACd,KAAK,EAAI,OACT,KAAK,EAAI,OACT,KAAK,OAAS,OACd,KAAK,MAAQ,OACb,KAAK,OAAS,OACd,KAAK,OAAS,OACd,KAAK,YAAc,OACnB,KAAK,iBAAmB,OACxB,KAAK,gBAAkB,MAC1B,CACD,WAAWxe,EAAS,CAChB,KAAK,QAAUA,EACf,KAAK,kBAAoB,OACzB,KAAK,SAAW,MACnB,CACJ,oBAAqB,CACd,MAAMiiB,EAAS,KAAK,kBACpB,GAAIA,EACA,OAAOA,EAEX,MAAM7V,EAAQ,KAAK,MACbpM,EAAU,KAAK,QAAQ,WAAW,KAAK,WAAU,CAAE,EACnDoO,EAAOpO,EAAQ,SAAWoM,EAAM,QAAQ,WAAapM,EAAQ,WAC7D8e,EAAa,IAAIP,GAAW,KAAK,MAAOnQ,CAAI,EAClD,OAAIA,EAAK,aACL,KAAK,kBAAoB,OAAO,OAAO0Q,CAAU,GAE9CA,CACV,CACJ,YAAa,CACN,OAAO,KAAK,WAAa,KAAK,SAAW8yB,GAAqB,KAAK,MAAM,WAAU,EAAI,KAAM,KAAK,aAAa,EAClH,CACD,SAAS3mC,EAASjL,EAAS,CACvB,KAAM,CAAE,UAAAmd,CAAY,EAAGnd,EACjBoyC,EAAcF,EAA2B/0B,EAAW,cAAe,KAAMlS,CAAO,EAChFkvB,EAAQ+X,EAA2B/0B,EAAW,QAAS,KAAMlS,CAAO,EACpEonC,EAAaH,EAA2B/0B,EAAW,aAAc,KAAMlS,CAAO,EACpF,IAAI8D,EAAQ,CAAA,EACZ,OAAAA,EAAQsgC,GAAatgC,EAAOwgC,GAAc6C,CAAW,CAAC,EACtDrjC,EAAQsgC,GAAatgC,EAAOwgC,GAAcpV,CAAK,CAAC,EAChDprB,EAAQsgC,GAAatgC,EAAOwgC,GAAc8C,CAAU,CAAC,EAC9CtjC,CACV,CACD,cAAc8iC,EAAc7xC,EAAS,CACjC,OAAO2xC,GAAwBO,EAA2BlyC,EAAQ,UAAW,aAAc,KAAM6xC,CAAY,CAAC,CACjH,CACD,QAAQA,EAAc7xC,EAAS,CAC3B,KAAM,CAAE,UAAAmd,CAAY,EAAGnd,EACjBsyC,EAAY,CAAA,EAClB,OAAArzC,EAAK4yC,EAAe5mC,GAAU,CAC1B,MAAMklC,EAAW,CACb,OAAQ,CAAE,EACV,MAAO,CAAE,EACT,MAAO,CAAE,CACzB,EACkBoC,EAAST,GAAkB30B,EAAWlS,CAAO,EACnDokC,GAAac,EAAS,OAAQZ,GAAc2C,EAA2BK,EAAQ,cAAe,KAAMtnC,CAAO,CAAC,CAAC,EAC7GokC,GAAac,EAAS,MAAO+B,EAA2BK,EAAQ,QAAS,KAAMtnC,CAAO,CAAC,EACvFokC,GAAac,EAAS,MAAOZ,GAAc2C,EAA2BK,EAAQ,aAAc,KAAMtnC,CAAO,CAAC,CAAC,EAC3GqnC,EAAU,KAAKnC,CAAQ,CACnC,CAAS,EACMmC,CACV,CACD,aAAaT,EAAc7xC,EAAS,CAChC,OAAO2xC,GAAwBO,EAA2BlyC,EAAQ,UAAW,YAAa,KAAM6xC,CAAY,CAAC,CAChH,CACD,UAAUA,EAAc7xC,EAAS,CAC7B,KAAM,CAAE,UAAAmd,CAAY,EAAGnd,EACjBwyC,EAAeN,EAA2B/0B,EAAW,eAAgB,KAAM00B,CAAY,EACvFjC,EAASsC,EAA2B/0B,EAAW,SAAU,KAAM00B,CAAY,EAC3EY,EAAcP,EAA2B/0B,EAAW,cAAe,KAAM00B,CAAY,EAC3F,IAAI9iC,EAAQ,CAAA,EACZ,OAAAA,EAAQsgC,GAAatgC,EAAOwgC,GAAciD,CAAY,CAAC,EACvDzjC,EAAQsgC,GAAatgC,EAAOwgC,GAAcK,CAAM,CAAC,EACjD7gC,EAAQsgC,GAAatgC,EAAOwgC,GAAckD,CAAW,CAAC,EAC/C1jC,CACV,CACJ,aAAa/O,EAAS,CACf,MAAMgkB,EAAS,KAAK,QACdlY,EAAO,KAAK,MAAM,KAClB4mC,EAAc,CAAA,EACdC,EAAmB,CAAA,EACnBC,EAAkB,CAAA,EACxB,IAAIf,EAAe,CAAA,EACfz3C,EAAGf,EACP,IAAIe,EAAI,EAAGf,EAAM2qB,EAAO,OAAQ5pB,EAAIf,EAAK,EAAEe,EACvCy3C,EAAa,KAAKrC,GAAkB,KAAK,MAAOxrB,EAAO5pB,CAAC,CAAC,CAAC,EAE9D,OAAI4F,EAAQ,SACR6xC,EAAeA,EAAa,OAAO,CAACh7B,EAAS3R,EAAOjC,IAAQjD,EAAQ,OAAO6W,EAAS3R,EAAOjC,EAAO6I,CAAI,CAAC,GAEvG9L,EAAQ,WACR6xC,EAAeA,EAAa,KAAK,CAACr4C,EAAGT,IAAIiH,EAAQ,SAASxG,EAAGT,EAAG+S,CAAI,CAAC,GAEzE7M,EAAK4yC,EAAe5mC,GAAU,CAC1B,MAAMsnC,EAAST,GAAkB9xC,EAAQ,UAAWiL,CAAO,EAC3DynC,EAAY,KAAKR,EAA2BK,EAAQ,aAAc,KAAMtnC,CAAO,CAAC,EAChF0nC,EAAiB,KAAKT,EAA2BK,EAAQ,kBAAmB,KAAMtnC,CAAO,CAAC,EAC1F2nC,EAAgB,KAAKV,EAA2BK,EAAQ,iBAAkB,KAAMtnC,CAAO,CAAC,CACpG,CAAS,EACD,KAAK,YAAcynC,EACnB,KAAK,iBAAmBC,EACxB,KAAK,gBAAkBC,EACvB,KAAK,WAAaf,EACXA,CACV,CACD,OAAOtpC,EAAS+6B,EAAQ,CACpB,MAAMtjC,EAAU,KAAK,QAAQ,WAAW,KAAK,WAAU,CAAE,EACnDgkB,EAAS,KAAK,QACpB,IAAI9E,EACA2yB,EAAe,CAAA,EACnB,GAAI,CAAC7tB,EAAO,OACJ,KAAK,UAAY,IACjB9E,EAAa,CACT,QAAS,CAC7B,OAEe,CACH,MAAM0K,EAAWolB,GAAYhvC,EAAQ,QAAQ,EAAE,KAAK,KAAMgkB,EAAQ,KAAK,cAAc,EACrF6tB,EAAe,KAAK,aAAa7xC,CAAO,EACxC,KAAK,MAAQ,KAAK,SAAS6xC,EAAc7xC,CAAO,EAChD,KAAK,WAAa,KAAK,cAAc6xC,EAAc7xC,CAAO,EAC1D,KAAK,KAAO,KAAK,QAAQ6xC,EAAc7xC,CAAO,EAC9C,KAAK,UAAY,KAAK,aAAa6xC,EAAc7xC,CAAO,EACxD,KAAK,OAAS,KAAK,UAAU6xC,EAAc7xC,CAAO,EAClD,MAAM+M,EAAO,KAAK,MAAQ0iC,GAAe,KAAMzvC,CAAO,EAChD6yC,EAAkB,OAAO,OAAO,CAAA,EAAIjpB,EAAU7c,CAAI,EAClDokC,EAAYL,GAAmB,KAAK,MAAO9wC,EAAS6yC,CAAe,EACnEC,EAAkB5B,GAAmBlxC,EAAS6yC,EAAiB1B,EAAW,KAAK,KAAK,EAC1F,KAAK,OAASA,EAAU,OACxB,KAAK,OAASA,EAAU,OACxBjyB,EAAa,CACT,QAAS,EACT,EAAG4zB,EAAgB,EACnB,EAAGA,EAAgB,EACnB,MAAO/lC,EAAK,MACZ,OAAQA,EAAK,OACb,OAAQ6c,EAAS,EACjB,OAAQA,EAAS,CACjC,CACS,CACD,KAAK,cAAgBioB,EACrB,KAAK,SAAW,OACZ3yB,GACA,KAAK,mBAAoB,EAAC,OAAO,KAAMA,CAAU,EAEjD3W,GAAWvI,EAAQ,UACnBA,EAAQ,SAAS,KAAK,KAAM,CACxB,MAAO,KAAK,MACZ,QAAS,KACT,OAAAsjC,CAChB,CAAa,CAER,CACD,UAAUyP,EAAc7nC,EAAK6B,EAAM/M,EAAS,CACxC,MAAMgzC,EAAgB,KAAK,iBAAiBD,EAAchmC,EAAM/M,CAAO,EACvEkL,EAAI,OAAO8nC,EAAc,GAAIA,EAAc,EAAE,EAC7C9nC,EAAI,OAAO8nC,EAAc,GAAIA,EAAc,EAAE,EAC7C9nC,EAAI,OAAO8nC,EAAc,GAAIA,EAAc,EAAE,CAChD,CACD,iBAAiBD,EAAchmC,EAAM/M,EAAS,CAC1C,KAAM,CAAE,OAAAywC,EAAS,OAAAG,CAAS,EAAG,KACvB,CAAE,UAAAQ,EAAY,aAAApkC,CAAe,EAAGhN,EAChC,CAAE,QAAAsxC,EAAU,SAAAC,EAAW,WAAAC,EAAa,YAAAC,GAAiB3hC,GAAc9C,CAAY,EAC/E,CAAE,EAAGimC,EAAM,EAAGC,CAAG,EAAMH,EACvB,CAAE,MAAAzmC,EAAQ,OAAA2L,CAAS,EAAGlL,EAC5B,IAAImrB,EAAIE,EAAI+a,EAAIhb,EAAIE,EAAI+a,EACxB,OAAIxC,IAAW,UACXvY,EAAK6a,EAAMj7B,EAAS,EAChBw4B,IAAW,QACXvY,EAAK+a,EACL7a,EAAKF,EAAKkZ,EACVjZ,EAAKE,EAAK+Y,EACVgC,EAAK/a,EAAK+Y,IAEVlZ,EAAK+a,EAAM3mC,EACX8rB,EAAKF,EAAKkZ,EACVjZ,EAAKE,EAAK+Y,EACVgC,EAAK/a,EAAK+Y,GAEd+B,EAAKjb,IAEDuY,IAAW,OACXrY,EAAK6a,EAAM,KAAK,IAAI3B,EAASE,CAAU,EAAIJ,EACpCX,IAAW,QAClBrY,EAAK6a,EAAM3mC,EAAQ,KAAK,IAAIilC,EAAUE,CAAW,EAAIL,EAErDhZ,EAAK,KAAK,OAEVwY,IAAW,OACXzY,EAAK+a,EACL7a,EAAKF,EAAKiZ,EACVlZ,EAAKE,EAAKgZ,EACV+B,EAAK/a,EAAKgZ,IAEVjZ,EAAK+a,EAAMj7B,EACXogB,EAAKF,EAAKiZ,EACVlZ,EAAKE,EAAKgZ,EACV+B,EAAK/a,EAAKgZ,GAEdgC,EAAKjb,GAEF,CACH,GAAAD,EACA,GAAAE,EACA,GAAA+a,EACA,GAAAhb,EACA,GAAAE,EACA,GAAA+a,CACZ,CACK,CACD,UAAUx9B,EAAI1K,EAAKlL,EAAS,CACxB,MAAMm6B,EAAQ,KAAK,MACbnS,EAASmS,EAAM,OACrB,IAAIsT,EAAW4F,EAAcj5C,EAC7B,GAAI4tB,EAAQ,CACR,MAAMykB,EAAYtyB,GAAcna,EAAQ,IAAK,KAAK,EAAG,KAAK,KAAK,EAQ/D,IAPA4V,EAAG,EAAI87B,GAAY,KAAM1xC,EAAQ,WAAYA,CAAO,EACpDkL,EAAI,UAAYuhC,EAAU,UAAUzsC,EAAQ,UAAU,EACtDkL,EAAI,aAAe,SACnBuiC,EAAYz9B,EAAOhQ,EAAQ,SAAS,EACpCqzC,EAAerzC,EAAQ,aACvBkL,EAAI,UAAYlL,EAAQ,WACxBkL,EAAI,KAAOuiC,EAAU,OACjBrzC,EAAI,EAAGA,EAAI4tB,EAAQ,EAAE5tB,EACrB8Q,EAAI,SAASivB,EAAM//B,CAAC,EAAGqyC,EAAU,EAAE72B,EAAG,CAAC,EAAGA,EAAG,EAAI63B,EAAU,WAAa,CAAC,EACzE73B,EAAG,GAAK63B,EAAU,WAAa4F,EAC3Bj5C,EAAI,IAAM4tB,IACVpS,EAAG,GAAK5V,EAAQ,kBAAoBqzC,EAG/C,CACJ,CACJ,cAAcnoC,EAAK0K,EAAIxb,EAAGqyC,EAAWzsC,EAAS,CACvC,MAAMszC,EAAa,KAAK,YAAYl5C,CAAC,EAC/Bm5C,EAAkB,KAAK,iBAAiBn5C,CAAC,EACzC,CAAE,UAAAixC,EAAY,SAAAC,CAAW,EAAGtrC,EAC5B6vC,EAAW7/B,EAAOhQ,EAAQ,QAAQ,EAClCwzC,EAAS9B,GAAY,KAAM,OAAQ1xC,CAAO,EAC1CyzC,EAAYhH,EAAU,EAAE+G,CAAM,EAC9BE,EAAUrI,EAAYwE,EAAS,YAAcA,EAAS,WAAaxE,GAAa,EAAI,EACpFsI,EAAS/9B,EAAG,EAAI89B,EACtB,GAAI1zC,EAAQ,cAAe,CACvB,MAAM+sC,EAAc,CAChB,OAAQ,KAAK,IAAIzB,EAAUD,CAAS,EAAI,EACxC,WAAYkI,EAAgB,WAC5B,SAAUA,EAAgB,SAC1B,YAAa,CAC7B,EACkBvG,EAAUP,EAAU,WAAWgH,EAAWnI,CAAQ,EAAIA,EAAW,EACjE2B,EAAU0G,EAAStI,EAAY,EACrCngC,EAAI,YAAclL,EAAQ,mBAC1BkL,EAAI,UAAYlL,EAAQ,mBACxB2M,GAAUzB,EAAK6hC,EAAaC,EAASC,CAAO,EAC5C/hC,EAAI,YAAcooC,EAAW,YAC7BpoC,EAAI,UAAYooC,EAAW,gBAC3B3mC,GAAUzB,EAAK6hC,EAAaC,EAASC,CAAO,CACxD,KAAe,CACH/hC,EAAI,UAAY5M,EAASg1C,EAAW,WAAW,EAAI,KAAK,IAAI,GAAG,OAAO,OAAOA,EAAW,WAAW,CAAC,EAAIA,EAAW,aAAe,EAClIpoC,EAAI,YAAcooC,EAAW,YAC7BpoC,EAAI,YAAYooC,EAAW,YAAc,CAAE,CAAA,EAC3CpoC,EAAI,eAAiBooC,EAAW,kBAAoB,EACpD,MAAMM,EAASnH,EAAU,WAAWgH,EAAWnI,CAAQ,EACjDuI,EAASpH,EAAU,WAAWA,EAAU,MAAMgH,EAAW,CAAC,EAAGnI,EAAW,CAAC,EACzE8B,EAAet9B,GAAcwjC,EAAW,YAAY,EACtD,OAAO,OAAOlG,CAAY,EAAE,KAAMh1C,GAAIA,IAAM,CAAC,GAC7C8S,EAAI,UAAS,EACbA,EAAI,UAAYlL,EAAQ,mBACxBiP,GAAmB/D,EAAK,CACpB,EAAG0oC,EACH,EAAGD,EACH,EAAGrI,EACH,EAAGD,EACH,OAAQ+B,CAC5B,CAAiB,EACDliC,EAAI,KAAI,EACRA,EAAI,OAAM,EACVA,EAAI,UAAYooC,EAAW,gBAC3BpoC,EAAI,UAAS,EACb+D,GAAmB/D,EAAK,CACpB,EAAG2oC,EACH,EAAGF,EAAS,EACZ,EAAGrI,EAAW,EACd,EAAGD,EAAY,EACf,OAAQ+B,CAC5B,CAAiB,EACDliC,EAAI,KAAI,IAERA,EAAI,UAAYlL,EAAQ,mBACxBkL,EAAI,SAAS0oC,EAAQD,EAAQrI,EAAUD,CAAS,EAChDngC,EAAI,WAAW0oC,EAAQD,EAAQrI,EAAUD,CAAS,EAClDngC,EAAI,UAAYooC,EAAW,gBAC3BpoC,EAAI,SAAS2oC,EAAQF,EAAS,EAAGrI,EAAW,EAAGD,EAAY,CAAC,EAEnE,CACDngC,EAAI,UAAY,KAAK,gBAAgB9Q,CAAC,CACzC,CACD,SAASwb,EAAI1K,EAAKlL,EAAS,CACvB,KAAM,CAAE,KAAA2vC,CAAO,EAAG,KACZ,CAAE,YAAAmE,EAAc,UAAAC,EAAY,cAAAC,EAAgB,UAAA3I,EAAY,SAAAC,EAAW,WAAA1e,CAAa,EAAG5sB,EACnF6vC,EAAW7/B,EAAOhQ,EAAQ,QAAQ,EACxC,IAAIowC,EAAiBP,EAAS,WAC1BoE,EAAe,EACnB,MAAMxH,EAAYtyB,GAAcna,EAAQ,IAAK,KAAK,EAAG,KAAK,KAAK,EACzDk0C,EAAiB,SAAS5lC,EAAM,CAClCpD,EAAI,SAASoD,EAAMm+B,EAAU,EAAE72B,EAAG,EAAIq+B,CAAY,EAAGr+B,EAAG,EAAIw6B,EAAiB,CAAC,EAC9Ex6B,EAAG,GAAKw6B,EAAiB0D,CACrC,EACcK,EAA0B1H,EAAU,UAAUsH,CAAS,EAC7D,IAAI5D,EAAUiE,EAAWrlC,EAAO3U,EAAG2B,EAAGwD,EAAMo3B,EAQ5C,IAPAzrB,EAAI,UAAY6oC,EAChB7oC,EAAI,aAAe,SACnBA,EAAI,KAAO2kC,EAAS,OACpBj6B,EAAG,EAAI87B,GAAY,KAAMyC,EAAyBn0C,CAAO,EACzDkL,EAAI,UAAYlL,EAAQ,UACxBf,EAAK,KAAK,WAAYi1C,CAAc,EACpCD,EAAeD,GAAiBG,IAA4B,QAAUJ,IAAc,SAAWzI,EAAW,EAAI1e,EAAa0e,EAAW,EAAI1e,EAAa,EACnJxyB,EAAI,EAAGmF,EAAOowC,EAAK,OAAQv1C,EAAImF,EAAM,EAAEnF,EAAE,CAUzC,IATA+1C,EAAWR,EAAKv1C,CAAC,EACjBg6C,EAAY,KAAK,gBAAgBh6C,CAAC,EAClC8Q,EAAI,UAAYkpC,EAChBn1C,EAAKkxC,EAAS,OAAQ+D,CAAc,EACpCnlC,EAAQohC,EAAS,MACb6D,GAAiBjlC,EAAM,SACvB,KAAK,cAAc7D,EAAK0K,EAAIxb,EAAGqyC,EAAWzsC,CAAO,EACjDowC,EAAiB,KAAK,IAAIP,EAAS,WAAYxE,CAAS,GAExDtvC,EAAI,EAAG46B,EAAO5nB,EAAM,OAAQhT,EAAI46B,EAAM,EAAE56B,EACxCm4C,EAAenlC,EAAMhT,CAAC,CAAC,EACvBq0C,EAAiBP,EAAS,WAE9B5wC,EAAKkxC,EAAS,MAAO+D,CAAc,CACtC,CACDD,EAAe,EACf7D,EAAiBP,EAAS,WAC1B5wC,EAAK,KAAK,UAAWi1C,CAAc,EACnCt+B,EAAG,GAAKk+B,CACX,CACD,WAAWl+B,EAAI1K,EAAKlL,EAAS,CACzB,MAAM4vC,EAAS,KAAK,OACd5nB,EAAS4nB,EAAO,OACtB,IAAIE,EAAY11C,EAChB,GAAI4tB,EAAQ,CACR,MAAMykB,EAAYtyB,GAAcna,EAAQ,IAAK,KAAK,EAAG,KAAK,KAAK,EAQ/D,IAPA4V,EAAG,EAAI87B,GAAY,KAAM1xC,EAAQ,YAAaA,CAAO,EACrD4V,EAAG,GAAK5V,EAAQ,gBAChBkL,EAAI,UAAYuhC,EAAU,UAAUzsC,EAAQ,WAAW,EACvDkL,EAAI,aAAe,SACnB4kC,EAAa9/B,EAAOhQ,EAAQ,UAAU,EACtCkL,EAAI,UAAYlL,EAAQ,YACxBkL,EAAI,KAAO4kC,EAAW,OAClB11C,EAAI,EAAGA,EAAI4tB,EAAQ,EAAE5tB,EACrB8Q,EAAI,SAAS0kC,EAAOx1C,CAAC,EAAGqyC,EAAU,EAAE72B,EAAG,CAAC,EAAGA,EAAG,EAAIk6B,EAAW,WAAa,CAAC,EAC3El6B,EAAG,GAAKk6B,EAAW,WAAa9vC,EAAQ,aAE/C,CACJ,CACD,eAAe4V,EAAI1K,EAAKmpC,EAAar0C,EAAS,CAC1C,KAAM,CAAE,OAAAywC,EAAS,OAAAG,CAAS,EAAG,KACvB,CAAE,EAAA1uC,EAAI,EAAAC,CAAI,EAAGyT,EACb,CAAE,MAAAtJ,EAAQ,OAAA2L,CAAS,EAAGo8B,EACtB,CAAE,QAAA/C,EAAU,SAAAC,EAAW,WAAAC,EAAa,YAAAC,CAAW,EAAM3hC,GAAc9P,EAAQ,YAAY,EAC7FkL,EAAI,UAAYlL,EAAQ,gBACxBkL,EAAI,YAAclL,EAAQ,YAC1BkL,EAAI,UAAYlL,EAAQ,YACxBkL,EAAI,UAAS,EACbA,EAAI,OAAOhJ,EAAIovC,EAASnvC,CAAC,EACrByuC,IAAW,OACX,KAAK,UAAUh7B,EAAI1K,EAAKmpC,EAAar0C,CAAO,EAEhDkL,EAAI,OAAOhJ,EAAIoK,EAAQilC,EAAUpvC,CAAC,EAClC+I,EAAI,iBAAiBhJ,EAAIoK,EAAOnK,EAAGD,EAAIoK,EAAOnK,EAAIovC,CAAQ,EACtDX,IAAW,UAAYH,IAAW,SAClC,KAAK,UAAU76B,EAAI1K,EAAKmpC,EAAar0C,CAAO,EAEhDkL,EAAI,OAAOhJ,EAAIoK,EAAOnK,EAAI8V,EAASw5B,CAAW,EAC9CvmC,EAAI,iBAAiBhJ,EAAIoK,EAAOnK,EAAI8V,EAAQ/V,EAAIoK,EAAQmlC,EAAatvC,EAAI8V,CAAM,EAC3E24B,IAAW,UACX,KAAK,UAAUh7B,EAAI1K,EAAKmpC,EAAar0C,CAAO,EAEhDkL,EAAI,OAAOhJ,EAAIsvC,EAAYrvC,EAAI8V,CAAM,EACrC/M,EAAI,iBAAiBhJ,EAAGC,EAAI8V,EAAQ/V,EAAGC,EAAI8V,EAASu5B,CAAU,EAC1DZ,IAAW,UAAYH,IAAW,QAClC,KAAK,UAAU76B,EAAI1K,EAAKmpC,EAAar0C,CAAO,EAEhDkL,EAAI,OAAOhJ,EAAGC,EAAImvC,CAAO,EACzBpmC,EAAI,iBAAiBhJ,EAAGC,EAAGD,EAAIovC,EAASnvC,CAAC,EACzC+I,EAAI,UAAS,EACbA,EAAI,KAAI,EACJlL,EAAQ,YAAc,GACtBkL,EAAI,OAAM,CAEjB,CACJ,uBAAuBlL,EAAS,CACzB,MAAMoM,EAAQ,KAAK,MACb6Q,EAAQ,KAAK,YACbq3B,EAAQr3B,GAASA,EAAM,EACvBs3B,EAAQt3B,GAASA,EAAM,EAC7B,GAAIq3B,GAASC,EAAO,CAChB,MAAM3qB,EAAWolB,GAAYhvC,EAAQ,QAAQ,EAAE,KAAK,KAAM,KAAK,QAAS,KAAK,cAAc,EAC3F,GAAI,CAAC4pB,EACD,OAEJ,MAAM7c,EAAO,KAAK,MAAQ0iC,GAAe,KAAMzvC,CAAO,EAChD6yC,EAAkB,OAAO,OAAO,CAAE,EAAEjpB,EAAU,KAAK,KAAK,EACxDunB,EAAYL,GAAmB1kC,EAAOpM,EAAS6yC,CAAe,EAC9DrlC,EAAQ0jC,GAAmBlxC,EAAS6yC,EAAiB1B,EAAW/kC,CAAK,GACvEkoC,EAAM,MAAQ9mC,EAAM,GAAK+mC,EAAM,MAAQ/mC,EAAM,KAC7C,KAAK,OAAS2jC,EAAU,OACxB,KAAK,OAASA,EAAU,OACxB,KAAK,MAAQpkC,EAAK,MAClB,KAAK,OAASA,EAAK,OACnB,KAAK,OAAS6c,EAAS,EACvB,KAAK,OAASA,EAAS,EACvB,KAAK,mBAAoB,EAAC,OAAO,KAAMpc,CAAK,EAEnD,CACJ,CACJ,aAAc,CACP,MAAO,CAAC,CAAC,KAAK,OACjB,CACD,KAAKtC,EAAK,CACN,MAAMlL,EAAU,KAAK,QAAQ,WAAW,KAAK,WAAU,CAAE,EACzD,IAAIw0C,EAAU,KAAK,QACnB,GAAI,CAACA,EACD,OAEJ,KAAK,uBAAuBx0C,CAAO,EACnC,MAAMq0C,EAAc,CAChB,MAAO,KAAK,MACZ,OAAQ,KAAK,MACzB,EACcz+B,EAAK,CACP,EAAG,KAAK,EACR,EAAG,KAAK,CACpB,EACQ4+B,EAAU,KAAK,IAAIA,CAAO,EAAI,KAAO,EAAIA,EACzC,MAAMxmB,EAAUje,EAAU/P,EAAQ,OAAO,EACnCy0C,EAAoB,KAAK,MAAM,QAAU,KAAK,WAAW,QAAU,KAAK,KAAK,QAAU,KAAK,UAAU,QAAU,KAAK,OAAO,OAC9Hz0C,EAAQ,SAAWy0C,IACnBvpC,EAAI,KAAI,EACRA,EAAI,YAAcspC,EAClB,KAAK,eAAe5+B,EAAI1K,EAAKmpC,EAAar0C,CAAO,EACjDoa,GAAsBlP,EAAKlL,EAAQ,aAAa,EAChD4V,EAAG,GAAKoY,EAAQ,IAChB,KAAK,UAAUpY,EAAI1K,EAAKlL,CAAO,EAC/B,KAAK,SAAS4V,EAAI1K,EAAKlL,CAAO,EAC9B,KAAK,WAAW4V,EAAI1K,EAAKlL,CAAO,EAChCua,GAAqBrP,EAAKlL,EAAQ,aAAa,EAC/CkL,EAAI,QAAO,EAElB,CACJ,mBAAoB,CACb,OAAO,KAAK,SAAW,EAC1B,CACJ,kBAAkBi4B,EAAgB+L,EAAe,CAC1C,MAAM9L,EAAa,KAAK,QAClBpf,EAASmf,EAAe,IAAI,CAAC,CAAE,aAAA1mB,EAAe,MAAAvX,KAAW,CAC3D,MAAMsC,EAAO,KAAK,MAAM,eAAeiV,CAAY,EACnD,GAAI,CAACjV,EACD,MAAM,IAAI,MAAM,kCAAoCiV,CAAY,EAEpE,MAAO,CACH,aAAAA,EACA,QAASjV,EAAK,KAAKtC,CAAK,EACxB,MAAAA,CAChB,CACA,CAAS,EACKqD,EAAU,CAACnJ,GAAegkC,EAAYpf,CAAM,EAC5C0wB,EAAkB,KAAK,iBAAiB1wB,EAAQkrB,CAAa,GAC/D3mC,GAAWmsC,KACX,KAAK,QAAU1wB,EACf,KAAK,eAAiBkrB,EACtB,KAAK,oBAAsB,GAC3B,KAAK,OAAO,EAAI,EAEvB,CACJ,YAAY5tC,EAAGgiC,EAAQpD,EAAc,GAAM,CACpC,GAAIoD,GAAU,KAAK,oBACf,MAAO,GAEX,KAAK,oBAAsB,GAC3B,MAAMtjC,EAAU,KAAK,QACfojC,EAAa,KAAK,SAAW,GAC7Bpf,EAAS,KAAK,mBAAmB1iB,EAAG8hC,EAAYE,EAAQpD,CAAW,EACnEwU,EAAkB,KAAK,iBAAiB1wB,EAAQ1iB,CAAC,EACjDiH,EAAU+6B,GAAU,CAAClkC,GAAe4kB,EAAQof,CAAU,GAAKsR,EACjE,OAAInsC,IACA,KAAK,QAAUyb,GACXhkB,EAAQ,SAAWA,EAAQ,YAC3B,KAAK,eAAiB,CAClB,EAAGsB,EAAE,EACL,EAAGA,EAAE,CACzB,EACgB,KAAK,OAAO,GAAMgiC,CAAM,IAGzB/6B,CACV,CACJ,mBAAmBjH,EAAG8hC,EAAYE,EAAQpD,EAAa,CAChD,MAAMlgC,EAAU,KAAK,QACrB,GAAIsB,EAAE,OAAS,WACX,MAAO,GAEX,GAAI,CAAC4+B,EACD,OAAOkD,EAAW,OAAQhpC,GAAI,KAAK,MAAM,KAAK,SAASA,EAAE,YAAY,GAAK,KAAK,MAAM,eAAeA,EAAE,YAAY,EAAE,WAAW,UAAUA,EAAE,KAAK,IAAM,MAAS,EAEnK,MAAM4pB,EAAS,KAAK,MAAM,0BAA0B1iB,EAAGtB,EAAQ,KAAMA,EAASsjC,CAAM,EACpF,OAAItjC,EAAQ,SACRgkB,EAAO,QAAO,EAEXA,CACV,CACJ,iBAAiBA,EAAQ,EAAG,CACrB,KAAM,CAAE,OAAA2wB,EAAS,OAAAC,EAAS,QAAA50C,CAAO,EAAM,KACjC4pB,EAAWolB,GAAYhvC,EAAQ,QAAQ,EAAE,KAAK,KAAMgkB,EAAQ,CAAC,EACnE,OAAO4F,IAAa,KAAU+qB,IAAW/qB,EAAS,GAAKgrB,IAAWhrB,EAAS,EAC9E,CACL,CACG,IAACirB,GAAiB,CACjB,GAAI,UACJ,SAAU1C,GACV,YAAAnD,GACA,UAAW5iC,EAAO8+B,EAAOlrC,EAAS,CAC1BA,IACAoM,EAAM,QAAU,IAAI+lC,GAAQ,CACxB,MAAA/lC,EACA,QAAApM,CAChB,CAAa,EAER,EACD,aAAcoM,EAAO8+B,EAAOlrC,EAAS,CAC7BoM,EAAM,SACNA,EAAM,QAAQ,WAAWpM,CAAO,CAEvC,EACD,MAAOoM,EAAO8+B,EAAOlrC,EAAS,CACtBoM,EAAM,SACNA,EAAM,QAAQ,WAAWpM,CAAO,CAEvC,EACD,UAAWoM,EAAO,CACd,MAAMsjC,EAAUtjC,EAAM,QACtB,GAAIsjC,GAAWA,EAAQ,cAAe,CAClC,MAAM3wC,EAAO,CACT,QAAA2wC,CAChB,EACY,GAAItjC,EAAM,cAAc,oBAAqB,CACzC,GAAGrN,EACH,WAAY,EACf,CAAA,IAAM,GACH,OAEJ2wC,EAAQ,KAAKtjC,EAAM,GAAG,EACtBA,EAAM,cAAc,mBAAoBrN,CAAI,CAC/C,CACJ,EACD,WAAYqN,EAAOrN,EAAM,CACrB,GAAIqN,EAAM,QAAS,CACf,MAAMge,EAAmBrrB,EAAK,OAC1BqN,EAAM,QAAQ,YAAYrN,EAAK,MAAOqrB,EAAkBrrB,EAAK,WAAW,IACxEA,EAAK,QAAU,GAEtB,CACJ,EACD,SAAU,CACN,QAAS,GACT,SAAU,KACV,SAAU,UACV,gBAAiB,kBACjB,WAAY,OACZ,UAAW,CACP,OAAQ,MACX,EACD,aAAc,EACd,kBAAmB,EACnB,WAAY,OACZ,UAAW,OACX,YAAa,EACb,SAAU,CAAE,EACZ,UAAW,OACX,YAAa,OACb,cAAe,EACf,gBAAiB,EACjB,WAAY,CACR,OAAQ,MACX,EACD,YAAa,OACb,QAAS,EACT,aAAc,EACd,UAAW,EACX,aAAc,EACd,UAAW,CAACmM,EAAKkD,IAAOA,EAAK,SAAS,KACtC,SAAU,CAAClD,EAAKkD,IAAOA,EAAK,SAAS,KACrC,mBAAoB,OACpB,cAAe,GACf,WAAY,EACZ,YAAa,gBACb,YAAa,EACb,UAAW,CACP,SAAU,IACV,OAAQ,cACX,EACD,WAAY,CACR,QAAS,CACL,KAAM,SACN,WAAY,CACR,IACA,IACA,QACA,SACA,SACA,QACH,CACJ,EACD,QAAS,CACL,OAAQ,SACR,SAAU,GACb,CACJ,EACD,UAAW2jC,EACd,EACD,cAAe,CACX,SAAU,OACV,WAAY,OACZ,UAAW,MACd,EACD,YAAa,CACT,YAAc7oC,GAAOA,IAAS,UAAYA,IAAS,YAAcA,IAAS,WAC1E,WAAY,GACZ,UAAW,CACP,YAAa,GACb,WAAY,EACf,EACD,UAAW,CACP,UAAW,EACd,EACD,WAAY,CACR,UAAW,WACd,CACJ,EACD,uBAAwB,CACpB,aACH,CACL,EAaA,MAAM4rC,GAAc,CAACxxB,EAAQyQ,EAAK7uB,EAAO6vC,KACjC,OAAOhhB,GAAQ,UACf7uB,EAAQoe,EAAO,KAAKyQ,CAAG,EAAI,EAC3BghB,EAAY,QAAQ,CAChB,MAAA7vC,EACA,MAAO6uB,CACnB,CAAS,GACM,MAAMA,CAAG,IAChB7uB,EAAQ,MAELA,GAEX,SAAS8vC,GAAe1xB,EAAQyQ,EAAK7uB,EAAO6vC,EAAa,CACrD,MAAM3jB,EAAQ9N,EAAO,QAAQyQ,CAAG,EAChC,GAAI3C,IAAU,GACV,OAAO0jB,GAAYxxB,EAAQyQ,EAAK7uB,EAAO6vC,CAAW,EAEtD,MAAMxvC,EAAO+d,EAAO,YAAYyQ,CAAG,EACnC,OAAO3C,IAAU7rB,EAAOL,EAAQksB,CACpC,CACA,MAAM2B,GAAa,CAAC7tB,EAAOzK,IAAMyK,IAAU,KAAO,KAAON,EAAY,KAAK,MAAMM,CAAK,EAAG,EAAGzK,CAAG,EAC9F,SAASw6C,GAAkB72C,EAAO,CAC9B,MAAMklB,EAAS,KAAK,YACpB,OAAIllB,GAAS,GAAKA,EAAQklB,EAAO,OACtBA,EAAOllB,CAAK,EAEhBA,CACX,CACA,MAAM82C,WAAsBphB,EAAM,CAC9B,OAAO,GAAK,WACf,OAAO,SAAW,CACX,MAAO,CACH,SAAUmhB,EACb,CACT,EACI,YAAYj3B,EAAI,CACZ,MAAMA,CAAG,EACR,KAAK,YAAc,OACpB,KAAK,YAAc,EACnB,KAAK,aAAe,EACvB,CACD,KAAKgf,EAAc,CACf,MAAMmY,EAAQ,KAAK,aACnB,GAAIA,EAAM,OAAQ,CACd,MAAM7xB,EAAS,KAAK,YACpB,SAAW,CAAE,MAAApe,EAAQ,MAAA0xB,CAAK,IAAOue,EACzB7xB,EAAOpe,CAAK,IAAM0xB,GAClBtT,EAAO,OAAOpe,EAAO,CAAC,EAG9B,KAAK,aAAe,EACvB,CACD,MAAM,KAAK83B,CAAY,CAC1B,CACD,MAAMjJ,EAAK7uB,EAAO,CACd,GAAI/G,EAAc41B,CAAG,EACjB,OAAO,KAEX,MAAMzQ,EAAS,KAAK,YACpB,OAAApe,EAAQ,SAASA,CAAK,GAAKoe,EAAOpe,CAAK,IAAM6uB,EAAM7uB,EAAQ8vC,GAAe1xB,EAAQyQ,EAAKr1B,EAAewG,EAAO6uB,CAAG,EAAG,KAAK,YAAY,EAC7HhB,GAAW7tB,EAAOoe,EAAO,OAAS,CAAC,CAC7C,CACD,qBAAsB,CAClB,KAAM,CAAE,WAAAtb,EAAa,WAAAC,CAAa,EAAG,KAAK,cAAa,EACvD,GAAI,CAAE,IAAAtN,EAAM,IAAAF,CAAG,EAAM,KAAK,UAAU,EAAI,EACpC,KAAK,QAAQ,SAAW,UACnBuN,IACDrN,EAAM,GAELsN,IACDxN,EAAM,KAAK,YAAY,OAAS,IAGxC,KAAK,IAAME,EACX,KAAK,IAAMF,CACd,CACD,YAAa,CACT,MAAME,EAAM,KAAK,IACXF,EAAM,KAAK,IACXk3B,EAAS,KAAK,QAAQ,OACtB9nB,EAAQ,CAAA,EACd,IAAIyZ,EAAS,KAAK,YAClBA,EAAS3oB,IAAQ,GAAKF,IAAQ6oB,EAAO,OAAS,EAAIA,EAASA,EAAO,MAAM3oB,EAAKF,EAAM,CAAC,EACpF,KAAK,YAAc,KAAK,IAAI6oB,EAAO,QAAUqO,EAAS,EAAI,GAAI,CAAC,EAC/D,KAAK,YAAc,KAAK,KAAOA,EAAS,GAAM,GAC9C,QAAQvzB,EAAQzD,EAAKyD,GAAS3D,EAAK2D,IAC/ByL,EAAM,KAAK,CACP,MAAAzL,CAChB,CAAa,EAEL,OAAOyL,CACV,CACD,iBAAiBzL,EAAO,CACpB,OAAO62C,GAAkB,KAAK,KAAM72C,CAAK,CAC5C,CACJ,WAAY,CACL,MAAM,UAAS,EACV,KAAK,iBACN,KAAK,eAAiB,CAAC,KAAK,eAEnC,CACD,iBAAiBA,EAAO,CACpB,OAAI,OAAOA,GAAU,WACjBA,EAAQ,KAAK,MAAMA,CAAK,GAErBA,IAAU,KAAO,IAAM,KAAK,oBAAoBA,EAAQ,KAAK,aAAe,KAAK,WAAW,CACtG,CACD,gBAAgB8G,EAAO,CACnB,MAAM2E,EAAQ,KAAK,MACnB,OAAI3E,EAAQ,GAAKA,EAAQ2E,EAAM,OAAS,EAC7B,KAEJ,KAAK,iBAAiBA,EAAM3E,CAAK,EAAE,KAAK,CAClD,CACD,iBAAiBmH,EAAO,CACpB,OAAO,KAAK,MAAM,KAAK,YAAc,KAAK,mBAAmBA,CAAK,EAAI,KAAK,WAAW,CACzF,CACD,cAAe,CACX,OAAO,KAAK,MACf,CACL,CAEA,SAAS+oC,GAAgBC,EAAmBC,EAAW,CACnD,MAAMzrC,EAAQ,CAAA,EAER,CAAE,OAAA+Q,EAAS,KAAA2d,EAAO,IAAA59B,EAAM,IAAAF,EAAM,UAAA86C,EAAY,MAAA3tC,EAAQ,SAAA4tC,EAAW,UAAAC,EAAY,cAAAC,CAAa,EAAML,EAC5FM,EAAOpd,GAAQ,EACfqd,EAAYJ,EAAW,EACvB,CAAE,IAAKK,EAAO,IAAKC,CAAI,EAAMR,EAC7BttC,EAAa,CAAC7J,EAAcxD,CAAG,EAC/BsN,EAAa,CAAC9J,EAAc1D,CAAG,EAC/Bs7C,EAAe,CAAC53C,EAAcyJ,CAAK,EACnCouC,GAAcF,EAAOD,IAASJ,EAAY,GAChD,IAAIlkB,EAAUlvB,IAASyzC,EAAOD,GAAQD,EAAYD,CAAI,EAAIA,EACtD93B,EAAQo4B,EAASC,EAASC,EAC9B,GAAI5kB,EAAU,OAAe,CAACvpB,GAAc,CAACC,EACzC,MAAO,CACH,CACI,MAAO4tC,CACV,EACD,CACI,MAAOC,CACV,CACb,EAEIK,EAAY,KAAK,KAAKL,EAAOvkB,CAAO,EAAI,KAAK,MAAMskB,EAAOtkB,CAAO,EAC7D4kB,EAAYP,IACZrkB,EAAUlvB,GAAQ8zC,EAAY5kB,EAAUqkB,EAAYD,CAAI,EAAIA,GAE3Dx3C,EAAco3C,CAAS,IACxB13B,EAAS,KAAK,IAAI,GAAI03B,CAAS,EAC/BhkB,EAAU,KAAK,KAAKA,EAAU1T,CAAM,EAAIA,GAExCjD,IAAW,SACXq7B,EAAU,KAAK,MAAMJ,EAAOtkB,CAAO,EAAIA,EACvC2kB,EAAU,KAAK,KAAKJ,EAAOvkB,CAAO,EAAIA,IAEtC0kB,EAAUJ,EACVK,EAAUJ,GAEV9tC,GAAcC,GAAcswB,GAAQz1B,IAAarI,EAAME,GAAO49B,EAAMhH,EAAU,GAAI,GAClF4kB,EAAY,KAAK,MAAM,KAAK,KAAK17C,EAAME,GAAO42B,EAASikB,CAAQ,CAAC,EAChEjkB,GAAW92B,EAAME,GAAOw7C,EACxBF,EAAUt7C,EACVu7C,EAAUz7C,GACHs7C,GACPE,EAAUjuC,EAAarN,EAAMs7C,EAC7BC,EAAUjuC,EAAaxN,EAAMy7C,EAC7BC,EAAYvuC,EAAQ,EACpB2pB,GAAW2kB,EAAUD,GAAWE,IAEhCA,GAAaD,EAAUD,GAAW1kB,EAC9BtvB,GAAak0C,EAAW,KAAK,MAAMA,CAAS,EAAG5kB,EAAU,GAAI,EAC7D4kB,EAAY,KAAK,MAAMA,CAAS,EAEhCA,EAAY,KAAK,KAAKA,CAAS,GAGvC,MAAMC,EAAgB,KAAK,IAAI7yC,GAAeguB,CAAO,EAAGhuB,GAAe0yC,CAAO,CAAC,EAC/Ep4B,EAAS,KAAK,IAAI,GAAI1f,EAAco3C,CAAS,EAAIa,EAAgBb,CAAS,EAC1EU,EAAU,KAAK,MAAMA,EAAUp4B,CAAM,EAAIA,EACzCq4B,EAAU,KAAK,MAAMA,EAAUr4B,CAAM,EAAIA,EACzC,IAAI9hB,EAAI,EAgBR,IAfIiM,IACI0tC,GAAiBO,IAAYt7C,GAC7BkP,EAAM,KAAK,CACP,MAAOlP,CACvB,CAAa,EACGs7C,EAAUt7C,GACVoB,IAEAkG,GAAa,KAAK,OAAOg0C,EAAUl6C,EAAIw1B,GAAW1T,CAAM,EAAIA,EAAQljB,EAAK07C,GAAkB17C,EAAKq7C,EAAYX,CAAiB,CAAC,GAC9Ht5C,KAEGk6C,EAAUt7C,GACjBoB,KAGFA,EAAIo6C,EAAW,EAAEp6C,EAAE,CACrB,MAAM6N,EAAY,KAAK,OAAOqsC,EAAUl6C,EAAIw1B,GAAW1T,CAAM,EAAIA,EACjE,GAAI5V,GAAc2B,EAAYnP,EAC1B,MAEJoP,EAAM,KAAK,CACP,MAAOD,CACnB,CAAS,CACJ,CACD,OAAI3B,GAAcytC,GAAiBQ,IAAYz7C,EACvCoP,EAAM,QAAU5H,GAAa4H,EAAMA,EAAM,OAAS,CAAC,EAAE,MAAOpP,EAAK47C,GAAkB57C,EAAKu7C,EAAYX,CAAiB,CAAC,EACtHxrC,EAAMA,EAAM,OAAS,CAAC,EAAE,MAAQpP,EAEhCoP,EAAM,KAAK,CACP,MAAOpP,CACvB,CAAa,GAEE,CAACwN,GAAciuC,IAAYz7C,IAClCoP,EAAM,KAAK,CACP,MAAOqsC,CACnB,CAAS,EAEErsC,CACX,CACA,SAASwsC,GAAkBj4C,EAAO43C,EAAY,CAAE,WAAA3uB,EAAa,YAAAoN,CAAW,EAAK,CACzE,MAAMnnB,EAAMnK,GAAUsxB,CAAW,EAC3B33B,GAASuqB,EAAa,KAAK,IAAI/Z,CAAG,EAAI,KAAK,IAAIA,CAAG,IAAM,KACxD0a,EAAS,IAAOguB,GAAc,GAAK53C,GAAO,OAChD,OAAO,KAAK,IAAI43C,EAAal5C,EAAOkrB,CAAM,CAC9C,CACA,MAAMsuB,WAAwBxiB,EAAM,CAChC,YAAY9V,EAAI,CACZ,MAAMA,CAAG,EACR,KAAK,MAAQ,OACb,KAAK,IAAM,OACX,KAAK,YAAc,OACnB,KAAK,UAAY,OAClB,KAAK,YAAc,CACtB,CACD,MAAM+V,EAAK7uB,EAAO,CAId,OAHI/G,EAAc41B,CAAG,IAGhB,OAAOA,GAAQ,UAAYA,aAAe,SAAW,CAAC,SAAS,CAACA,CAAG,EAC7D,KAEJ,CAACA,CACX,CACD,wBAAyB,CACrB,KAAM,CAAE,YAAAvjB,CAAW,EAAM,KAAK,QACxB,CAAE,WAAAxI,EAAa,WAAAC,CAAa,EAAG,KAAK,cAAa,EACvD,GAAI,CAAE,IAAAtN,EAAM,IAAAF,CAAM,EAAG,KACrB,MAAM87C,EAAUn+C,GAAIuC,EAAMqN,EAAarN,EAAMvC,EACvCo+C,EAAUp+C,GAAIqC,EAAMwN,EAAaxN,EAAMrC,EAC7C,GAAIoY,EAAa,CACb,MAAMimC,EAAUz0C,GAAKrH,CAAG,EAClB+7C,EAAU10C,GAAKvH,CAAG,EACpBg8C,EAAU,GAAKC,EAAU,EACzBF,EAAO,CAAC,EACDC,EAAU,GAAKC,EAAU,GAChCH,EAAO,CAAC,CAEf,CACD,GAAI57C,IAAQF,EAAK,CACb,IAAIk3B,EAASl3B,IAAQ,EAAI,EAAI,KAAK,IAAIA,EAAM,GAAI,EAChD+7C,EAAO/7C,EAAMk3B,CAAM,EACdnhB,GACD+lC,EAAO57C,EAAMg3B,CAAM,CAE1B,CACD,KAAK,IAAMh3B,EACX,KAAK,IAAMF,CACd,CACD,cAAe,CACX,MAAMo2B,EAAW,KAAK,QAAQ,MAC9B,GAAI,CAAE,cAAA4B,EAAgB,SAAAkkB,CAAW,EAAG9lB,EAChC2kB,EACJ,OAAImB,GACAnB,EAAW,KAAK,KAAK,KAAK,IAAMmB,CAAQ,EAAI,KAAK,MAAM,KAAK,IAAMA,CAAQ,EAAI,EAC1EnB,EAAW,MACX,QAAQ,KAAK,UAAU,KAAK,EAAE,oBAAoBmB,CAAQ,kCAAkCnB,CAAQ,2BAA2B,EAC/HA,EAAW,OAGfA,EAAW,KAAK,mBAChB/iB,EAAgBA,GAAiB,IAEjCA,IACA+iB,EAAW,KAAK,IAAI/iB,EAAe+iB,CAAQ,GAExCA,CACV,CACJ,kBAAmB,CACZ,OAAO,OAAO,iBACjB,CACD,YAAa,CACT,MAAMpnC,EAAO,KAAK,QACZyiB,EAAWziB,EAAK,MACtB,IAAIonC,EAAW,KAAK,eACpBA,EAAW,KAAK,IAAI,EAAGA,CAAQ,EAC/B,MAAMoB,EAA0B,CAC5B,SAAApB,EACA,OAAQpnC,EAAK,OACb,IAAKA,EAAK,IACV,IAAKA,EAAK,IACV,UAAWyiB,EAAS,UACpB,KAAMA,EAAS,SACf,MAAOA,EAAS,MAChB,UAAW,KAAK,WAAY,EAC5B,WAAY,KAAK,aAAc,EAC/B,YAAaA,EAAS,aAAe,EACrC,cAAeA,EAAS,gBAAkB,EACtD,EACcykB,EAAY,KAAK,QAAU,KAC3BzrC,EAAQurC,GAAgBwB,EAAyBtB,CAAS,EAChE,OAAIlnC,EAAK,SAAW,SAChBpL,GAAmB6G,EAAO,KAAM,OAAO,EAEvCuE,EAAK,SACLvE,EAAM,QAAO,EACb,KAAK,MAAQ,KAAK,IAClB,KAAK,IAAM,KAAK,MAEhB,KAAK,MAAQ,KAAK,IAClB,KAAK,IAAM,KAAK,KAEbA,CACV,CACJ,WAAY,CACL,MAAMA,EAAQ,KAAK,MACnB,IAAIxF,EAAQ,KAAK,IACbC,EAAM,KAAK,IAEf,GADA,MAAM,UAAS,EACX,KAAK,QAAQ,QAAUuF,EAAM,OAAQ,CACrC,MAAM8nB,GAAUrtB,EAAMD,GAAS,KAAK,IAAIwF,EAAM,OAAS,EAAG,CAAC,EAAI,EAC/DxF,GAASstB,EACTrtB,GAAOqtB,CACV,CACD,KAAK,YAActtB,EACnB,KAAK,UAAYC,EACjB,KAAK,YAAcA,EAAMD,CAC5B,CACD,iBAAiBjG,EAAO,CACpB,OAAOqL,GAAarL,EAAO,KAAK,MAAM,QAAQ,OAAQ,KAAK,QAAQ,MAAM,MAAM,CAClF,CACL,CAEA,MAAMy4C,WAAoBP,EAAgB,CACtC,OAAO,GAAK,SACf,OAAO,SAAW,CACX,MAAO,CACH,SAAUjsC,GAAM,WAAW,OAC9B,CACT,EACI,qBAAsB,CAClB,KAAM,CAAE,IAAA1P,EAAM,IAAAF,CAAG,EAAM,KAAK,UAAU,EAAI,EAC1C,KAAK,IAAM8D,EAAe5D,CAAG,EAAIA,EAAM,EACvC,KAAK,IAAM4D,EAAe9D,CAAG,EAAIA,EAAM,EACvC,KAAK,uBAAsB,CAC9B,CACJ,kBAAmB,CACZ,MAAM4sB,EAAa,KAAK,eAClBW,EAASX,EAAa,KAAK,MAAQ,KAAK,OACxCoN,EAActxB,GAAU,KAAK,QAAQ,MAAM,WAAW,EACtDrG,GAASuqB,EAAa,KAAK,IAAIoN,CAAW,EAAI,KAAK,IAAIA,CAAW,IAAM,KACxEoC,EAAW,KAAK,wBAAwB,CAAC,EAC/C,OAAO,KAAK,KAAK7O,EAAS,KAAK,IAAI,GAAI6O,EAAS,WAAa/5B,CAAK,CAAC,CACtE,CACD,iBAAiBsB,EAAO,CACpB,OAAOA,IAAU,KAAO,IAAM,KAAK,oBAAoBA,EAAQ,KAAK,aAAe,KAAK,WAAW,CACtG,CACD,iBAAiBiO,EAAO,CACpB,OAAO,KAAK,YAAc,KAAK,mBAAmBA,CAAK,EAAI,KAAK,WACnE,CACL,CAspBA,MAAMyqC,GAAY,CACd,YAAa,CACT,OAAQ,GACR,KAAM,EACN,MAAO,GACV,EACD,OAAQ,CACJ,OAAQ,GACR,KAAM,IACN,MAAO,EACV,EACD,OAAQ,CACJ,OAAQ,GACR,KAAM,IACN,MAAO,EACV,EACD,KAAM,CACF,OAAQ,GACR,KAAM,KACN,MAAO,EACV,EACD,IAAK,CACD,OAAQ,GACR,KAAM,MACN,MAAO,EACV,EACD,KAAM,CACF,OAAQ,GACR,KAAM,OACN,MAAO,CACV,EACD,MAAO,CACH,OAAQ,GACR,KAAM,OACN,MAAO,EACV,EACD,QAAS,CACL,OAAQ,GACR,KAAM,OACN,MAAO,CACV,EACD,KAAM,CACF,OAAQ,GACR,KAAM,MACT,CACL,EACOC,EAAyB,OAAO,KAAKD,EAAS,EACpD,SAASE,GAAOx9C,EAAGT,EAAG,CACnB,OAAOS,EAAIT,CACf,CACC,SAASk+C,GAAM53B,EAAOliB,EAAO,CAC1B,GAAIgB,EAAchB,CAAK,EACnB,OAAO,KAEX,MAAM+5C,EAAU73B,EAAM,SAChB,CAAE,OAAA83B,EAAS,MAAAh/C,EAAQ,WAAAi/C,CAAU,EAAM/3B,EAAM,WAC/C,IAAIjhB,EAAQjB,EAOZ,OANI,OAAOg6C,GAAW,aAClB/4C,EAAQ+4C,EAAO/4C,CAAK,GAEnBG,EAAeH,CAAK,IACrBA,EAAQ,OAAO+4C,GAAW,SAAWD,EAAQ,MAAM94C,EAAQ+4C,CAAM,EAAID,EAAQ,MAAM94C,CAAK,GAExFA,IAAU,KACH,MAEPjG,IACAiG,EAAQjG,IAAU,SAAW0K,GAASu0C,CAAU,GAAKA,IAAe,IAAQF,EAAQ,QAAQ94C,EAAO,UAAWg5C,CAAU,EAAIF,EAAQ,QAAQ94C,EAAOjG,CAAK,GAErJ,CAACiG,EACZ,CACC,SAASi5C,GAA0BC,EAAS38C,EAAKF,EAAK88C,EAAU,CAC7D,MAAMh4C,EAAOw3C,EAAM,OACnB,QAAQ38C,EAAI28C,EAAM,QAAQO,CAAO,EAAGl9C,EAAImF,EAAO,EAAG,EAAEnF,EAAE,CAClD,MAAMo9C,EAAWV,GAAUC,EAAM38C,CAAC,CAAC,EAC7ByjB,EAAS25B,EAAS,MAAQA,EAAS,MAAQ,OAAO,iBACxD,GAAIA,EAAS,QAAU,KAAK,MAAM/8C,EAAME,IAAQkjB,EAAS25B,EAAS,KAAK,GAAKD,EACxE,OAAOR,EAAM38C,CAAC,CAErB,CACD,OAAO28C,EAAMx3C,EAAO,CAAC,CACzB,CACC,SAASk4C,GAA2Bp4B,EAAOmV,EAAU8iB,EAAS38C,EAAKF,EAAK,CACrE,QAAQL,EAAI28C,EAAM,OAAS,EAAG38C,GAAK28C,EAAM,QAAQO,CAAO,EAAGl9C,IAAI,CAC3D,MAAMu7C,EAAOoB,EAAM38C,CAAC,EACpB,GAAI08C,GAAUnB,CAAI,EAAE,QAAUt2B,EAAM,SAAS,KAAK5kB,EAAKE,EAAKg7C,CAAI,GAAKnhB,EAAW,EAC5E,OAAOmhB,CAEd,CACD,OAAOoB,EAAMO,EAAUP,EAAM,QAAQO,CAAO,EAAI,CAAC,CACrD,CACC,SAASI,GAAmB/B,EAAM,CAC/B,QAAQv7C,EAAI28C,EAAM,QAAQpB,CAAI,EAAI,EAAGp2C,EAAOw3C,EAAM,OAAQ38C,EAAImF,EAAM,EAAEnF,EAClE,GAAI08C,GAAUC,EAAM38C,CAAC,CAAC,EAAE,OACpB,OAAO28C,EAAM38C,CAAC,CAG1B,CACC,SAASu9C,GAAQ9tC,EAAO+tC,EAAMC,EAAY,CACvC,GAAI,CAACA,EACDhuC,EAAM+tC,CAAI,EAAI,WACPC,EAAW,OAAQ,CAC1B,KAAM,CAAE,GAAAzyC,EAAK,GAAAD,CAAE,EAAMJ,GAAQ8yC,EAAYD,CAAI,EACvCE,EAAYD,EAAWzyC,CAAE,GAAKwyC,EAAOC,EAAWzyC,CAAE,EAAIyyC,EAAW1yC,CAAE,EACzE0E,EAAMiuC,CAAS,EAAI,EACtB,CACL,CACC,SAASC,GAAc14B,EAAOxV,EAAOpO,EAAKu8C,EAAW,CAClD,MAAMd,EAAU73B,EAAM,SAChB+R,EAAQ,CAAC8lB,EAAQ,QAAQrtC,EAAM,CAAC,EAAE,MAAOmuC,CAAS,EAClDzyC,EAAOsE,EAAMA,EAAM,OAAS,CAAC,EAAE,MACrC,IAAIouC,EAAO/yC,EACX,IAAI+yC,EAAQ7mB,EAAO6mB,GAAS1yC,EAAM0yC,EAAQ,CAACf,EAAQ,IAAIe,EAAO,EAAGD,CAAS,EACtE9yC,EAAQzJ,EAAIw8C,CAAK,EACb/yC,GAAS,IACT2E,EAAM3E,CAAK,EAAE,MAAQ,IAG7B,OAAO2E,CACX,CACC,SAASquC,GAAoB74B,EAAO1Z,EAAQqyC,EAAW,CACpD,MAAMnuC,EAAQ,CAAA,EACPpO,EAAM,CAAA,EACP8D,EAAOoG,EAAO,OACpB,IAAIvL,EAAGgE,EACP,IAAIhE,EAAI,EAAGA,EAAImF,EAAM,EAAEnF,EACnBgE,EAAQuH,EAAOvL,CAAC,EAChBqB,EAAI2C,CAAK,EAAIhE,EACbyP,EAAM,KAAK,CACP,MAAAzL,EACA,MAAO,EACnB,CAAS,EAEL,OAAOmB,IAAS,GAAK,CAACy4C,EAAYnuC,EAAQkuC,GAAc14B,EAAOxV,EAAOpO,EAAKu8C,CAAS,CACxF,CACA,MAAMG,WAAkBrkB,EAAM,CAC1B,OAAO,GAAK,OACf,OAAO,SAAW,CAClB,OAAQ,OACD,SAAU,CAAE,EACZ,KAAM,CACF,OAAQ,GACR,KAAM,GACN,MAAO,GACP,WAAY,GACZ,QAAS,cACT,eAAgB,CAAE,CACrB,EACD,MAAO,CACd,OAAQ,OACG,SAAU,GACV,MAAO,CACH,QAAS,EACZ,CACJ,CACT,EACC,YAAYrkB,EAAM,CACX,MAAMA,CAAK,EACV,KAAK,OAAS,CACX,KAAM,CAAE,EACR,OAAQ,CAAE,EACV,IAAK,CAAE,CACnB,EACS,KAAK,MAAQ,MACb,KAAK,WAAa,OACnB,KAAK,SAAW,GAChB,KAAK,YAAc,GACnB,KAAK,WAAa,MACrB,CACD,KAAKyxB,EAAW9yB,EAAO,GAAI,CACvB,MAAMwpC,EAAO1W,EAAU,OAASA,EAAU,KAAO,CAAA,GAC1CgW,EAAU,KAAK,SAAW,IAAI7tB,GAAS,MAAM6X,EAAU,SAAS,IAAI,EAC3EgW,EAAQ,KAAK9oC,CAAI,EACjB7N,GAAQq3C,EAAK,eAAgBV,EAAQ,QAAS,CAAA,EAC9C,KAAK,WAAa,CACd,OAAQU,EAAK,OACb,MAAOA,EAAK,MACZ,WAAYA,EAAK,UAC7B,EACQ,MAAM,KAAK1W,CAAS,EACpB,KAAK,YAAc9yB,EAAK,UAC3B,CACJ,MAAM2lB,EAAK7uB,EAAO,CACX,OAAI6uB,IAAQ,OACD,KAEJkjB,GAAM,KAAMljB,CAAG,CACzB,CACD,cAAe,CACX,MAAM,aAAY,EAClB,KAAK,OAAS,CACV,KAAM,CAAE,EACR,OAAQ,CAAE,EACV,IAAK,CAAE,CACnB,CACK,CACD,qBAAsB,CAClB,MAAM/zB,EAAU,KAAK,QACfk3C,EAAU,KAAK,SACfvB,EAAO31C,EAAQ,KAAK,MAAQ,MAClC,GAAI,CAAE,IAAArF,EAAM,IAAAF,EAAM,WAAAuN,EAAa,WAAAC,GAAgB,KAAK,gBAC3D,SAASmwC,EAAax9B,EAAQ,CACf,CAAC5S,GAAc,CAAC,MAAM4S,EAAO,GAAG,IAChCjgB,EAAM,KAAK,IAAIA,EAAKigB,EAAO,GAAG,GAE9B,CAAC3S,GAAc,CAAC,MAAM2S,EAAO,GAAG,IAChCngB,EAAM,KAAK,IAAIA,EAAKmgB,EAAO,GAAG,EAErC,EACG,CAAC5S,GAAc,CAACC,KAChBmwC,EAAa,KAAK,gBAAe,CAAE,GAC/Bp4C,EAAQ,SAAW,SAAWA,EAAQ,MAAM,SAAW,WACvDo4C,EAAa,KAAK,UAAU,EAAK,CAAC,GAG1Cz9C,EAAM4D,EAAe5D,CAAG,GAAK,CAAC,MAAMA,CAAG,EAAIA,EAAM,CAACu8C,EAAQ,QAAQ,KAAK,IAAK,EAAEvB,CAAI,EAClFl7C,EAAM8D,EAAe9D,CAAG,GAAK,CAAC,MAAMA,CAAG,EAAIA,EAAM,CAACy8C,EAAQ,MAAM,KAAK,IAAG,EAAIvB,CAAI,EAAI,EACpF,KAAK,IAAM,KAAK,IAAIh7C,EAAKF,EAAM,CAAC,EAChC,KAAK,IAAM,KAAK,IAAIE,EAAM,EAAGF,CAAG,CACnC,CACJ,iBAAkB,CACX,MAAMsY,EAAM,KAAK,qBACjB,IAAIpY,EAAM,OAAO,kBACbF,EAAM,OAAO,kBACjB,OAAIsY,EAAI,SACJpY,EAAMoY,EAAI,CAAC,EACXtY,EAAMsY,EAAIA,EAAI,OAAS,CAAC,GAErB,CACH,IAAApY,EACA,IAAAF,CACZ,CACK,CACJ,YAAa,CACN,MAAMuF,EAAU,KAAK,QACfq4C,EAAWr4C,EAAQ,KACnB6wB,EAAW7wB,EAAQ,MACnB63C,EAAahnB,EAAS,SAAW,SAAW,KAAK,mBAAoB,EAAG,KAAK,YAC/E7wB,EAAQ,SAAW,SAAW63C,EAAW,SACzC,KAAK,IAAM,KAAK,UAAYA,EAAW,CAAC,EACxC,KAAK,IAAM,KAAK,UAAYA,EAAWA,EAAW,OAAS,CAAC,GAEhE,MAAMl9C,EAAM,KAAK,IACXF,EAAM,KAAK,IACXoP,EAAQnE,GAAemyC,EAAYl9C,EAAKF,CAAG,EACjD,YAAK,MAAQ49C,EAAS,OAASxnB,EAAS,SAAWwmB,GAA0BgB,EAAS,QAAS,KAAK,IAAK,KAAK,IAAK,KAAK,kBAAkB19C,CAAG,CAAC,EAAI88C,GAA2B,KAAM5tC,EAAM,OAAQwuC,EAAS,QAAS,KAAK,IAAK,KAAK,GAAG,GACrO,KAAK,WAAa,CAACxnB,EAAS,MAAM,SAAW,KAAK,QAAU,OAAS,OAAY6mB,GAAmB,KAAK,KAAK,EAC9G,KAAK,YAAYG,CAAU,EACvB73C,EAAQ,SACR6J,EAAM,QAAO,EAEVquC,GAAoB,KAAMruC,EAAO,KAAK,UAAU,CAC1D,CACD,eAAgB,CACR,KAAK,QAAQ,qBACb,KAAK,YAAY,KAAK,MAAM,IAAK2pB,GAAO,CAACA,EAAK,KAAK,CAAC,CAE3D,CACJ,YAAYqkB,EAAa,GAAI,CACtB,IAAIxzC,EAAQ,EACRC,EAAM,EACN8sB,EAAO7rB,EACP,KAAK,QAAQ,QAAUsyC,EAAW,SAClCzmB,EAAQ,KAAK,mBAAmBymB,EAAW,CAAC,CAAC,EACzCA,EAAW,SAAW,EACtBxzC,EAAQ,EAAI+sB,EAEZ/sB,GAAS,KAAK,mBAAmBwzC,EAAW,CAAC,CAAC,EAAIzmB,GAAS,EAE/D7rB,EAAO,KAAK,mBAAmBsyC,EAAWA,EAAW,OAAS,CAAC,CAAC,EAC5DA,EAAW,SAAW,EACtBvzC,EAAMiB,EAENjB,GAAOiB,EAAO,KAAK,mBAAmBsyC,EAAWA,EAAW,OAAS,CAAC,CAAC,GAAK,GAGpF,MAAMvf,EAAQuf,EAAW,OAAS,EAAI,GAAM,IAC5CxzC,EAAQO,EAAYP,EAAO,EAAGi0B,CAAK,EACnCh0B,EAAMM,EAAYN,EAAK,EAAGg0B,CAAK,EAC/B,KAAK,SAAW,CACZ,MAAAj0B,EACA,IAAAC,EACA,OAAQ,GAAKD,EAAQ,EAAIC,EACrC,CACK,CACJ,WAAY,CACL,MAAM4yC,EAAU,KAAK,SACfv8C,EAAM,KAAK,IACXF,EAAM,KAAK,IACXuF,EAAU,KAAK,QACfq4C,EAAWr4C,EAAQ,KACnBs4C,EAAQD,EAAS,MAAQhB,GAA0BgB,EAAS,QAAS19C,EAAKF,EAAK,KAAK,kBAAkBE,CAAG,CAAC,EAC1Gg8C,EAAWj4C,EAAesB,EAAQ,MAAM,SAAU,CAAC,EACnDu4C,EAAUD,IAAU,OAASD,EAAS,WAAa,GACnDG,EAAa31C,GAAS01C,CAAO,GAAKA,IAAY,GAC9C1uC,EAAQ,CAAA,EACd,IAAIunB,EAAQz2B,EACRi9C,EAAMhwC,EAKV,GAJI4wC,IACApnB,EAAQ,CAAC8lB,EAAQ,QAAQ9lB,EAAO,UAAWmnB,CAAO,GAEtDnnB,EAAQ,CAAC8lB,EAAQ,QAAQ9lB,EAAOonB,EAAa,MAAQF,CAAK,EACtDpB,EAAQ,KAAKz8C,EAAKE,EAAK29C,CAAK,EAAI,IAAS3B,EACzC,MAAM,IAAI,MAAMh8C,EAAM,QAAUF,EAAM,uCAAyCk8C,EAAW,IAAM2B,CAAK,EAEzG,MAAMT,EAAa73C,EAAQ,MAAM,SAAW,QAAU,KAAK,oBAC3D,IAAI43C,EAAOxmB,EAAOxpB,EAAQ,EAAGgwC,EAAOn9C,EAAKm9C,EAAO,CAACV,EAAQ,IAAIU,EAAMjB,EAAU2B,CAAK,EAAG1wC,IACjF+vC,GAAQ9tC,EAAO+tC,EAAMC,CAAU,EAEnC,OAAID,IAASn9C,GAAOuF,EAAQ,SAAW,SAAW4H,IAAU,IACxD+vC,GAAQ9tC,EAAO+tC,EAAMC,CAAU,EAE5B,OAAO,KAAKhuC,CAAK,EAAE,KAAKmtC,EAAM,EAAE,IAAK90C,GAAI,CAACA,CAAC,CACrD,CACJ,iBAAiB9D,EAAO,CACjB,MAAM84C,EAAU,KAAK,SACfmB,EAAW,KAAK,QAAQ,KAC9B,OAAIA,EAAS,cACFnB,EAAQ,OAAO94C,EAAOi6C,EAAS,aAAa,EAEhDnB,EAAQ,OAAO94C,EAAOi6C,EAAS,eAAe,QAAQ,CAChE,CACJ,OAAOj6C,EAAOq6C,EAAQ,CAEf,MAAMC,EADU,KAAK,QACG,KAAK,eACvB/C,EAAO,KAAK,MACZgD,EAAMF,GAAUC,EAAQ/C,CAAI,EAClC,OAAO,KAAK,SAAS,OAAOv3C,EAAOu6C,CAAG,CACzC,CACJ,oBAAoBf,EAAM1yC,EAAO2E,EAAO4uC,EAAQ,CACzC,MAAMz4C,EAAU,KAAK,QACfwJ,EAAYxJ,EAAQ,MAAM,SAChC,GAAIwJ,EACA,OAAO3K,EAAS2K,EAAW,CACvBouC,EACA1yC,EACA2E,CACH,EAAE,IAAI,EAEX,MAAM6uC,EAAU14C,EAAQ,KAAK,eACvB21C,EAAO,KAAK,MACZqC,EAAY,KAAK,WACjBY,EAAcjD,GAAQ+C,EAAQ/C,CAAI,EAClCkD,EAAcb,GAAaU,EAAQV,CAAS,EAC5CxkB,EAAO3pB,EAAM3E,CAAK,EAClB+yC,EAAQD,GAAaa,GAAerlB,GAAQA,EAAK,MACvD,OAAO,KAAK,SAAS,OAAOokB,EAAMa,IAAWR,EAAQY,EAAcD,EAAY,CAClF,CACJ,mBAAmB/uC,EAAO,CACnB,IAAIzP,EAAGmF,EAAMi0B,EACb,IAAIp5B,EAAI,EAAGmF,EAAOsK,EAAM,OAAQzP,EAAImF,EAAM,EAAEnF,EACxCo5B,EAAO3pB,EAAMzP,CAAC,EACdo5B,EAAK,MAAQ,KAAK,oBAAoBA,EAAK,MAAOp5B,EAAGyP,CAAK,CAEjE,CACJ,mBAAmBzL,EAAO,CACnB,OAAOA,IAAU,KAAO,KAAOA,EAAQ,KAAK,MAAQ,KAAK,IAAM,KAAK,IACvE,CACJ,iBAAiBA,EAAO,CACjB,MAAM06C,EAAU,KAAK,SACf1hC,EAAM,KAAK,mBAAmBhZ,CAAK,EACzC,OAAO,KAAK,oBAAoB06C,EAAQ,MAAQ1hC,GAAO0hC,EAAQ,MAAM,CACxE,CACJ,iBAAiBzsC,EAAO,CACjB,MAAMysC,EAAU,KAAK,SACf1hC,EAAM,KAAK,mBAAmB/K,CAAK,EAAIysC,EAAQ,OAASA,EAAQ,IACtE,OAAO,KAAK,IAAM1hC,GAAO,KAAK,IAAM,KAAK,IAC5C,CACJ,cAAcwf,EAAO,CACd,MAAMmiB,EAAY,KAAK,QAAQ,MACzBC,EAAiB,KAAK,IAAI,YAAYpiB,CAAK,EAAE,MAC7C9yB,EAAQX,GAAU,KAAK,aAAY,EAAK41C,EAAU,YAAcA,EAAU,WAAW,EACrFE,EAAc,KAAK,IAAIn1C,CAAK,EAC5Bo1C,EAAc,KAAK,IAAIp1C,CAAK,EAC5Bq1C,EAAe,KAAK,wBAAwB,CAAC,EAAE,KACrD,MAAO,CACH,EAAGH,EAAiBC,EAAcE,EAAeD,EACjD,EAAGF,EAAiBE,EAAcC,EAAeF,CAC7D,CACK,CACJ,kBAAkBG,EAAa,CACxB,MAAMf,EAAW,KAAK,QAAQ,KACxBgB,EAAiBhB,EAAS,eAC1BI,EAASY,EAAehB,EAAS,IAAI,GAAKgB,EAAe,YACzDC,EAAe,KAAK,oBAAoBF,EAAa,EAAGlB,GAAoB,KAAM,CACpFkB,CACH,EAAE,KAAK,UAAU,EAAGX,CAAM,EACrB1rC,EAAO,KAAK,cAAcusC,CAAY,EACtC/B,EAAW,KAAK,MAAM,KAAK,aAAc,EAAG,KAAK,MAAQxqC,EAAK,EAAI,KAAK,OAASA,EAAK,CAAC,EAAI,EAChG,OAAOwqC,EAAW,EAAIA,EAAW,CACpC,CACJ,mBAAoB,CACb,IAAIM,EAAa,KAAK,OAAO,MAAQ,CAAA,EACjCz9C,EAAGmF,EACP,GAAIs4C,EAAW,OACX,OAAOA,EAEX,MAAMzjB,EAAQ,KAAK,0BACnB,GAAI,KAAK,aAAeA,EAAM,OAC1B,OAAO,KAAK,OAAO,KAAOA,EAAM,CAAC,EAAE,WAAW,mBAAmB,IAAI,EAEzE,IAAIh6B,EAAI,EAAGmF,EAAO60B,EAAM,OAAQh6B,EAAImF,EAAM,EAAEnF,EACxCy9C,EAAaA,EAAW,OAAOzjB,EAAMh6B,CAAC,EAAE,WAAW,mBAAmB,IAAI,CAAC,EAE/E,OAAO,KAAK,OAAO,KAAO,KAAK,UAAUy9C,CAAU,CACtD,CACJ,oBAAqB,CACd,MAAMA,EAAa,KAAK,OAAO,QAAU,CAAA,EACzC,IAAIz9C,EAAGmF,EACP,GAAIs4C,EAAW,OACX,OAAOA,EAEX,MAAMv0B,EAAS,KAAK,YACpB,IAAIlpB,EAAI,EAAGmF,EAAO+jB,EAAO,OAAQlpB,EAAImF,EAAM,EAAEnF,EACzCy9C,EAAW,KAAKZ,GAAM,KAAM3zB,EAAOlpB,CAAC,CAAC,CAAC,EAE1C,OAAO,KAAK,OAAO,OAAS,KAAK,YAAcy9C,EAAa,KAAK,UAAUA,CAAU,CACxF,CACJ,UAAUlyC,EAAQ,CACX,OAAOW,GAAaX,EAAO,KAAKqxC,EAAM,CAAC,CAC1C,CACL,CAEA,SAASv6C,GAAYuI,EAAOjH,EAAKoB,EAAS,CACtC,IAAIiG,EAAK,EACLD,EAAKH,EAAM,OAAS,EACpBu0C,EAAYC,EAAYC,EAAYC,EACpCv6C,GACIpB,GAAOiH,EAAMI,CAAE,EAAE,KAAOrH,GAAOiH,EAAMG,CAAE,EAAE,MACxC,CAAE,GAAAC,EAAK,GAAAD,CAAK,EAAGG,GAAaN,EAAO,MAAOjH,CAAG,GAEjD,CAAE,IAAKw7C,EAAa,KAAME,GAAgBz0C,EAAMI,CAAE,EAClD,CAAE,IAAKo0C,EAAa,KAAME,GAAgB10C,EAAMG,CAAE,IAE/CpH,GAAOiH,EAAMI,CAAE,EAAE,MAAQrH,GAAOiH,EAAMG,CAAE,EAAE,OACzC,CAAE,GAAAC,EAAK,GAAAD,CAAK,EAAGG,GAAaN,EAAO,OAAQjH,CAAG,GAElD,CAAE,KAAMw7C,EAAa,IAAKE,GAAgBz0C,EAAMI,CAAE,EAClD,CAAE,KAAMo0C,EAAa,IAAKE,GAAgB10C,EAAMG,CAAE,GAEvD,MAAMw0C,EAAOH,EAAaD,EAC1B,OAAOI,EAAOF,GAAcC,EAAaD,IAAe17C,EAAMw7C,GAAcI,EAAOF,CACvF,CACA,MAAMG,WAAwBzB,EAAU,CACpC,OAAO,GAAK,aACf,OAAO,SAAWA,GAAU,SAC5B,YAAY1oC,EAAM,CACX,MAAMA,CAAK,EACV,KAAK,OAAS,GACd,KAAK,QAAU,OACf,KAAK,YAAc,MACvB,CACJ,aAAc,CACP,MAAMooC,EAAa,KAAK,yBAClB7yC,EAAQ,KAAK,OAAS,KAAK,iBAAiB6yC,CAAU,EAC5D,KAAK,QAAUp7C,GAAYuI,EAAO,KAAK,GAAG,EAC1C,KAAK,YAAcvI,GAAYuI,EAAO,KAAK,GAAG,EAAI,KAAK,QACvD,MAAM,YAAY6yC,CAAU,CAC/B,CACJ,iBAAiBA,EAAY,CACtB,KAAM,CAAE,IAAAl9C,EAAM,IAAAF,CAAM,EAAG,KACjB8L,EAAQ,CAAA,EACRvB,EAAQ,CAAA,EACd,IAAI5K,EAAGmF,EAAM6W,EAAM+O,EAAMhR,EACzB,IAAI/Z,EAAI,EAAGmF,EAAOs4C,EAAW,OAAQz9C,EAAImF,EAAM,EAAEnF,EAC7C+qB,EAAO0yB,EAAWz9C,CAAC,EACf+qB,GAAQxqB,GAAOwqB,GAAQ1qB,GACvB8L,EAAM,KAAK4e,CAAI,EAGvB,GAAI5e,EAAM,OAAS,EACf,MAAO,CACH,CACI,KAAM5L,EACN,IAAK,CACR,EACD,CACI,KAAMF,EACN,IAAK,CACR,CACjB,EAEQ,IAAIL,EAAI,EAAGmF,EAAOgH,EAAM,OAAQnM,EAAImF,EAAM,EAAEnF,EACxC+Z,EAAO5N,EAAMnM,EAAI,CAAC,EAClBgc,EAAO7P,EAAMnM,EAAI,CAAC,EAClB+qB,EAAO5e,EAAMnM,CAAC,EACV,KAAK,OAAO+Z,EAAOiC,GAAQ,CAAC,IAAM+O,GAClCngB,EAAM,KAAK,CACP,KAAMmgB,EACN,IAAK/qB,GAAKmF,EAAO,EACrC,CAAiB,EAGT,OAAOyF,CACV,CACJ,WAAY,CACL,MAAMrK,EAAM,KAAK,IACXF,EAAM,KAAK,IACjB,IAAIo9C,EAAa,MAAM,oBACvB,OAAI,CAACA,EAAW,SAASl9C,CAAG,GAAK,CAACk9C,EAAW,SACzCA,EAAW,OAAO,EAAG,EAAGl9C,CAAG,GAE3B,CAACk9C,EAAW,SAASp9C,CAAG,GAAKo9C,EAAW,SAAW,IACnDA,EAAW,KAAKp9C,CAAG,EAEhBo9C,EAAW,KAAK,CAACr+C,EAAGT,IAAIS,EAAIT,CAAC,CACvC,CACJ,wBAAyB,CAClB,IAAI8+C,EAAa,KAAK,OAAO,KAAO,CAAA,EACpC,GAAIA,EAAW,OACX,OAAOA,EAEX,MAAM/rC,EAAO,KAAK,oBACZ8qB,EAAQ,KAAK,qBACnB,OAAI9qB,EAAK,QAAU8qB,EAAM,OACrBihB,EAAa,KAAK,UAAU/rC,EAAK,OAAO8qB,CAAK,CAAC,EAE9CihB,EAAa/rC,EAAK,OAASA,EAAO8qB,EAEtCihB,EAAa,KAAK,OAAO,IAAMA,EACxBA,CACV,CACJ,mBAAmBz5C,EAAO,CACnB,OAAQ3B,GAAY,KAAK,OAAQ2B,CAAK,EAAI,KAAK,SAAW,KAAK,WAClE,CACJ,iBAAiBiO,EAAO,CACjB,MAAMysC,EAAU,KAAK,SACf3hB,EAAU,KAAK,mBAAmB9qB,CAAK,EAAIysC,EAAQ,OAASA,EAAQ,IAC1E,OAAOr8C,GAAY,KAAK,OAAQ06B,EAAU,KAAK,YAAc,KAAK,QAAS,EAAI,CAClF,CACL,CCxrWA,MAAM0iB,GAAc,CAChB,KAAM,CACF,KAAM,OACN,SAAU,EACb,EACD,QAAS,CACL,KAAM,OACN,QAAS,KAAK,CAAA,EACjB,EACD,QAAS,CACL,KAAM,MACN,QAAS,IAAI,CAAE,CAClB,EACD,aAAc,CACV,KAAM,OACN,QAAS,OACZ,EACD,WAAY,CACR,KAAM,OACN,QAAS,MACZ,CACL,EACMC,GAAY,CACd,UAAW,CACP,KAAM,MACT,EACD,gBAAiB,CACb,KAAM,MACT,CACL,EACMC,GAAQ,CACV,KAAM,CACF,KAAM,OACN,SAAU,EACb,EACD,aAAc,CACV,KAAM,OACN,QAAS,CACZ,EACD,GAAGF,GACH,GAAGC,EACP,EAEME,GAAc7a,GAAQ,CAAC,IAAM,IAAM,CAAC8a,EAAWxqC,IAAQ,OAAO,OAAOwqC,EAAW,CAC9E,MAAOxqC,CACf,CAAK,EAAI,CAACwqC,EAAWxqC,IAAQ,OAAO,OAAOwqC,EAAWxqC,CAAK,EAC3D,SAASyqC,GAAa38C,EAAK,CACvB,OAAO48C,GAAQ58C,CAAG,EAAI68C,GAAM78C,CAAG,EAAIA,CACvC,CACA,SAAS88C,GAAW98C,EAAK,CACrB,IAAIqtC,EAAM,UAAU,OAAS,GAAK,UAAU,CAAC,IAAM,OAAS,UAAU,CAAC,EAAIrtC,EAC3E,OAAO48C,GAAQvP,CAAG,EAAI,IAAI,MAAMrtC,EAAK,CAAA,CAAE,EAAIA,CAC/C,CACA,SAAS+8C,GAAWluC,EAAOmuC,EAAa,CACpC,MAAMv6C,EAAUoM,EAAM,QAClBpM,GAAWu6C,GACX,OAAO,OAAOv6C,EAASu6C,CAAW,CAE1C,CACA,SAASC,GAAUC,EAAaC,EAAY,CACxCD,EAAY,OAASC,CACzB,CACA,SAASC,GAAYF,EAAaG,EAAcC,EAAc,CAC1D,MAAMC,EAAgB,CAAA,EACtBL,EAAY,SAAWG,EAAa,IAAKG,GAAc,CAEnD,MAAMC,EAAiBP,EAAY,SAAS,KAAMn4B,GAAUA,EAAQu4B,CAAY,IAAME,EAAYF,CAAY,CAAC,EAE/G,MAAI,CAACG,GAAkB,CAACD,EAAY,MAAQD,EAAc,SAASE,CAAc,EACtE,CACH,GAAGD,CACnB,GAEQD,EAAc,KAAKE,CAAc,EACjC,OAAO,OAAOA,EAAgBD,CAAW,EAClCC,EACf,CAAK,CACL,CACA,SAASC,GAAUnvC,EAAM+uC,EAAc,CACnC,MAAMK,EAAW,CACb,OAAQ,CAAE,EACV,SAAU,CAAE,CACpB,EACI,OAAAV,GAAUU,EAAUpvC,EAAK,MAAM,EAC/B6uC,GAAYO,EAAUpvC,EAAK,SAAU+uC,CAAY,EAC1CK,CACX,CAgCA,MAAMvX,GAAQwX,GAAgB,CAC1B,MAAOpB,GACP,MAAOtqC,EAAO2rC,EAAO,CACjB,GAAI,CAAE,OAAAC,EAAS,MAAAC,CAAQ,EAAGF,EAC1B,MAAMG,EAAYC,GAAI,IAAI,EACpBC,EAAWC,GAAW,IAAI,EAChCL,EAAO,CACH,MAAOI,CACnB,CAAS,EACD,MAAME,EAAc,IAAI,CACpB,GAAI,CAACJ,EAAU,MAAO,OACtB,KAAM,CAAE,KAAAj+C,EAAO,KAAAwO,EAAO,QAAA9L,EAAU,QAAAk8B,EAAU,aAAA2e,CAAe,EAAGprC,EACtDmsC,EAAaX,GAAUnvC,EAAM+uC,CAAY,EACzCgB,EAAcxB,GAAWuB,EAAY9vC,CAAI,EAC/C2vC,EAAS,MAAQ,IAAIlb,GAAQgb,EAAU,MAAO,CAC1C,KAAAj+C,EACA,KAAMu+C,EACN,QAAS,CACL,GAAG77C,CACN,EACD,QAAAk8B,CAChB,CAAa,CACb,EACc4f,EAAe,IAAI,CACrB,MAAM1vC,EAAQguC,GAAMqB,EAAS,KAAK,EAC9BrvC,IACIqD,EAAM,aAAe,EACrB,WAAW,IAAI,CACXrD,EAAM,QAAO,EACbqvC,EAAS,MAAQ,IACzC,EAAuBhsC,EAAM,YAAY,GAErBrD,EAAM,QAAO,EACbqvC,EAAS,MAAQ,MAGrC,EACcM,EAAU3vC,GAAQ,CACpBA,EAAM,OAAOqD,EAAM,UAAU,CACzC,EACQ,OAAAusC,GAAUL,CAAW,EACrBM,GAAYH,CAAY,EACxBI,GAAM,CACF,IAAIzsC,EAAM,QACV,IAAIA,EAAM,IACtB,EAAW,CAAC2rC,EAAOe,IAAS,CAChB,GAAI,CAACC,EAAkBC,CAAa,EAAIjB,EAAO,CAACkB,EAAkBC,CAAa,EAAIJ,EACnF,MAAM/vC,EAAQguC,GAAMqB,EAAS,KAAK,EAClC,GAAI,CAACrvC,EACD,OAEJ,IAAIowC,EAAe,GACnB,GAAIJ,EAAkB,CAClB,MAAM7B,EAAcL,GAAakC,CAAgB,EAC3CK,EAAcvC,GAAaoC,CAAgB,EAC7C/B,GAAeA,IAAgBkC,IAC/BnC,GAAWluC,EAAOmuC,CAAW,EAC7BiC,EAAe,GAEtB,CACD,GAAIH,EAAe,CACf,MAAM3B,EAAaR,GAAamC,EAAc,MAAM,EAC9CK,EAAaxC,GAAaqC,EAAc,MAAM,EAC9C3B,EAAeV,GAAamC,EAAc,QAAQ,EAClDM,EAAezC,GAAaqC,EAAc,QAAQ,EACpD7B,IAAegC,IACflC,GAAUpuC,EAAM,OAAO,KAAMsuC,CAAU,EACvC8B,EAAe,IAEf5B,GAAgBA,IAAiB+B,IACjChC,GAAYvuC,EAAM,OAAO,KAAMwuC,EAAcnrC,EAAM,YAAY,EAC/D+sC,EAAe,GAEtB,CACGA,GACAI,GAAS,IAAI,CACTb,EAAO3vC,CAAK,CAChC,CAAiB,CAEjB,EAAW,CACC,KAAM,EAClB,CAAS,EACM,IACI7T,GAAE,SAAU,CACf,KAAM,MACN,UAAWkX,EAAM,UACjB,gBAAiBA,EAAM,gBACvB,IAAK8rC,CACrB,EAAe,CACChjD,GAAE,IAAK,GAAI,CACP+iD,EAAM,QAAUA,EAAM,QAAS,EAAG,EACtD,CAAiB,CACjB,CAAa,CAER,CACL,CAAC,EAED,SAASuB,GAAiBv/C,EAAMw/C,EAAe,CAC3C,OAAAvc,GAAQ,SAASuc,CAAa,EACvB3B,GAAgB,CACnB,MAAOtB,GACP,MAAOpqC,EAAO2rC,EAAO,CACjB,GAAI,CAAE,OAAAC,CAAS,EAAGD,EAClB,MAAMI,EAAME,GAAW,IAAI,EACrBqB,EAAgBtB,GAAW,CAC7BD,EAAI,MAAQC,GAAU,KACtC,EACY,OAAAJ,EAAO,CACH,MAAOG,CACvB,CAAa,EACM,IACIjjD,GAAEorC,GAAOqW,GAAY,CACxB,IAAK+C,CACzB,EAAmB,CACC,KAAAz/C,EACA,GAAGmS,CACN,CAAA,CAAC,CAET,CACT,CAAK,CACL,CACK,MAACutC,GAAsBH,GAAiB,MAAO31B,EAAa,EAE3D+1B,GAAuBJ,GAAiB,OAAQp0B,EAAc","x_google_ignoreList":[0,1,2,3]}