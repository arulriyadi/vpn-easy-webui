{"version":3,"file":"routing-QeK2GZsg.js","sources":["../../src/views/routing.vue"],"sourcesContent":["<template>\n  <div class=\"container-fluid\">\n    <div class=\"row\">\n      <div class=\"col-12\">\n        <div class=\"d-flex justify-content-between align-items-center mb-4\">\n          <h2 class=\"mb-0\">\n            <i class=\"bi bi-diagram-3 me-2\"></i>\n            Routing Management\n          </h2>\n          <div>\n            <button class=\"btn btn-primary\" @click=\"showAddRouteModal = true\">\n              <i class=\"bi bi-plus-circle me-1\"></i>\n              Add Route\n            </button>\n          </div>\n        </div>\n\n\n        <!-- Routing Table -->\n        <div class=\"card\">\n          <div class=\"card-header\">\n            <h5 class=\"mb-0\">\n              <i class=\"bi bi-diagram-3 me-2\"></i>\n              Routing Table\n            </h5>\n          </div>\n          <div class=\"card-body\">\n            <div v-if=\"loading\" class=\"text-center py-4\">\n              <div class=\"spinner-border text-primary\" role=\"status\">\n                <span class=\"visually-hidden\">Loading...</span>\n              </div>\n            </div>\n            \n            <div v-else-if=\"routes.length === 0\" class=\"text-center py-4 text-muted\">\n              <i class=\"bi bi-diagram-3 fs-1\"></i>\n              <p class=\"mt-2\">No routes found</p>\n            </div>\n            \n            <div v-else class=\"table-responsive\">\n              <table class=\"table table-striped table-hover\">\n                <thead class=\"table-dark\">\n                  <tr>\n                    <th>ID</th>\n                    <th>Destination</th>\n                    <th>Gateway</th>\n                    <th>Interface</th>\n                    <th>Metric</th>\n                    <th>Source</th>\n                    <th>Actions</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr v-for=\"route in routes\" :key=\"route.id\">\n                    <td>{{ route.id }}</td>\n                    <td>\n                      <span class=\"badge bg-primary\">{{ route.destination || 'default' }}</span>\n                    </td>\n                    <td>{{ route.gateway || 'N/A' }}</td>\n                    <td>\n                      <span v-if=\"route.interface\" class=\"badge bg-info\">{{ route.interface }}</span>\n                      <span v-else class=\"text-muted\">N/A</span>\n                    </td>\n                    <td>{{ route.metric || 'N/A' }}</td>\n                    <td>{{ route.source || 'N/A' }}</td>\n                    <td>\n                      <button class=\"btn btn-sm btn-outline-danger\" @click=\"deleteRoute(route.id)\">\n                        <i class=\"bi bi-trash\"></i>\n                      </button>\n                    </td>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- Add Route Modal -->\n    <div v-if=\"showAddRouteModal\" class=\"modal show d-block\" tabindex=\"-1\" style=\"background-color: rgba(0,0,0,0.5)\">\n      <div class=\"modal-dialog modal-lg\">\n        <div class=\"modal-content\">\n          <div class=\"modal-header\">\n            <h5 class=\"modal-title\">\n              <i class=\"bi bi-plus-circle me-2\"></i>\n              Add Static Route\n            </h5>\n            <button type=\"button\" class=\"btn-close\" @click=\"showAddRouteModal = false\"></button>\n          </div>\n          <div class=\"modal-body\">\n            <form @submit.prevent=\"addRoute\">\n              <div class=\"row\">\n                <div class=\"col-md-6 mb-3\">\n                  <label for=\"destination\" class=\"form-label\">Destination Network</label>\n                  <input type=\"text\" id=\"destination\" v-model=\"newRoute.destination\" class=\"form-control\" \n                         placeholder=\"e.g., 192.168.1.0/24\" required>\n                  <div class=\"form-text\">Network address with CIDR notation</div>\n                </div>\n                <div class=\"col-md-6 mb-3\">\n                  <label for=\"gateway\" class=\"form-label\">Gateway</label>\n                  <input type=\"text\" id=\"gateway\" v-model=\"newRoute.gateway\" class=\"form-control\" \n                         placeholder=\"e.g., 192.168.1.1\" required>\n                  <div class=\"form-text\">Next hop IP address</div>\n                </div>\n              </div>\n              \n              <div class=\"row\">\n                <div class=\"col-md-6 mb-3\">\n                  <label for=\"interface\" class=\"form-label\">Interface</label>\n                  <select id=\"interface\" v-model=\"newRoute.interface\" class=\"form-select\">\n                    <option value=\"\">Auto-detect</option>\n                    <option value=\"ens18\">ens18</option>\n                    <option value=\"docker0\">docker0</option>\n                    <option value=\"tailscale0\">tailscale0</option>\n                    <option value=\"wg0\">wg0</option>\n                    <option value=\"lo\">lo</option>\n                  </select>\n                </div>\n                <div class=\"col-md-6 mb-3\">\n                  <label for=\"metric\" class=\"form-label\">Metric</label>\n                  <input type=\"number\" id=\"metric\" v-model=\"newRoute.metric\" class=\"form-control\" \n                         placeholder=\"e.g., 100\" min=\"1\" max=\"65535\">\n                  <div class=\"form-text\">Route priority (lower = higher priority)</div>\n                </div>\n              </div>\n              \n              <div class=\"row\">\n                <div class=\"col-md-12 mb-3\">\n                  <label for=\"source\" class=\"form-label\">Source IP</label>\n                  <input type=\"text\" id=\"source\" v-model=\"newRoute.source\" class=\"form-control\" \n                         placeholder=\"e.g., 192.168.1.100\">\n                  <div class=\"form-text\">Optional: Source IP for the route</div>\n                </div>\n              </div>\n            </form>\n          </div>\n          <div class=\"modal-footer\">\n            <button type=\"button\" class=\"btn btn-secondary\" @click=\"showAddRouteModal = false\">Cancel</button>\n            <button type=\"button\" class=\"btn btn-primary\" @click=\"addRoute\" :disabled=\"addingRoute\">\n              <span v-if=\"addingRoute\" class=\"spinner-border spinner-border-sm me-1\"></span>\n              Add Route\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- Toast Notifications -->\n    <div class=\"toast-container position-fixed bottom-0 end-0 p-3\">\n      <div v-if=\"toast.show\" class=\"toast show\" role=\"alert\">\n        <div class=\"toast-header\">\n          <i :class=\"toast.type === 'success' ? 'bi bi-check-circle-fill text-success' : 'bi bi-exclamation-triangle-fill text-danger'\"></i>\n          <strong class=\"ms-2\">{{ toast.type === 'success' ? 'Success' : 'Error' }}</strong>\n          <button type=\"button\" class=\"btn-close ms-auto\" @click=\"toast.show = false\"></button>\n        </div>\n        <div class=\"toast-body\">\n          {{ toast.message }}\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, onMounted } from 'vue'\nimport { fetchGet, fetchPost, fetchDelete } from '@/utilities/fetch.js'\n\n// Reactive data\nconst loading = ref(true)\nconst addingRoute = ref(false)\nconst showAddRouteModal = ref(false)\nconst routes = ref([])\nconst newRoute = ref({\n  destination: '',\n  gateway: '',\n  interface: '',\n  metric: '',\n  source: ''\n})\nconst toast = ref({\n  show: false,\n  type: 'success',\n  message: ''\n})\n\n// Methods\nconst loadRoutes = async () => {\n  try {\n    loading.value = true\n    const response = await fetchGet('/api/routes')\n    if (response.status) {\n      routes.value = response.data || []\n    } else {\n      showToast('error', 'Failed to load routes')\n    }\n  } catch (error) {\n    showToast('error', 'Error loading routes: ' + error.message)\n  } finally {\n    loading.value = false\n  }\n}\n\n\nconst addRoute = async () => {\n  try {\n    addingRoute.value = true\n    const response = await fetchPost('/api/routes', newRoute.value)\n    if (response.status) {\n      showToast('success', 'Route added successfully')\n      showAddRouteModal.value = false\n      resetNewRoute()\n      await loadRoutes()\n    } else {\n      showToast('error', response.message || 'Failed to add route')\n    }\n  } catch (error) {\n    showToast('error', 'Error adding route: ' + error.message)\n  } finally {\n    addingRoute.value = false\n  }\n}\n\nconst deleteRoute = async (routeId) => {\n  if (!confirm('Are you sure you want to delete this route?')) {\n    return\n  }\n  \n  try {\n    const response = await fetchDelete(`/api/routes/${routeId}`)\n    if (response.status) {\n      showToast('success', 'Route deleted successfully')\n      await loadRoutes()\n    } else {\n      showToast('error', response.message || 'Failed to delete route')\n    }\n  } catch (error) {\n    showToast('error', 'Error deleting route: ' + error.message)\n  }\n}\n\nconst resetNewRoute = () => {\n  newRoute.value = {\n    destination: '',\n    gateway: '',\n    interface: '',\n    metric: '',\n    source: ''\n  }\n}\n\nconst showToast = (type, message) => {\n  toast.value = {\n    show: true,\n    type,\n    message\n  }\n  setTimeout(() => {\n    toast.value.show = false\n  }, 5000)\n}\n\n// Lifecycle\nonMounted(() => {\n  loadRoutes()\n})\n</script>\n\n<style scoped>\n.table th {\n  border-top: none;\n}\n\n.badge {\n  font-size: 0.75em;\n}\n\n.modal {\n  z-index: 1055;\n}\n\n.toast {\n  z-index: 1060;\n}\n\n.card.bg-light {\n  border: 1px solid #dee2e6;\n}\n\n.progress {\n  background-color: #e9ecef;\n}\n</style>\n"],"names":["loading","ref","addingRoute","showAddRouteModal","routes","newRoute","toast","loadRoutes","response","fetchGet","showToast","error","addRoute","fetchPost","resetNewRoute","deleteRoute","routeId","fetchDelete","type","message","onMounted"],"mappings":"0xCAwKA,MAAMA,EAAUC,EAAI,EAAI,EAClBC,EAAcD,EAAI,EAAK,EACvBE,EAAoBF,EAAI,EAAK,EAC7BG,EAASH,EAAI,EAAE,EACfI,EAAWJ,EAAI,CACnB,YAAa,GACb,QAAS,GACT,UAAW,GACX,OAAQ,GACR,OAAQ,EACV,CAAC,EACKK,EAAQL,EAAI,CAChB,KAAM,GACN,KAAM,UACN,QAAS,EACX,CAAC,EAGKM,EAAa,SAAY,CAC7B,GAAI,CACFP,EAAQ,MAAQ,GAChB,MAAMQ,EAAW,MAAMC,EAAS,aAAa,EACzCD,EAAS,OACXJ,EAAO,MAAQI,EAAS,MAAQ,CAAE,EAElCE,EAAU,QAAS,uBAAuB,CAE7C,OAAQC,EAAO,CACdD,EAAU,QAAS,yBAA2BC,EAAM,OAAO,CAC/D,QAAY,CACRX,EAAQ,MAAQ,EACjB,CACH,EAGMY,EAAW,SAAY,CAC3B,GAAI,CACFV,EAAY,MAAQ,GACpB,MAAMM,EAAW,MAAMK,EAAU,cAAeR,EAAS,KAAK,EAC1DG,EAAS,QACXE,EAAU,UAAW,0BAA0B,EAC/CP,EAAkB,MAAQ,GAC1BW,EAAe,EACf,MAAMP,EAAY,GAElBG,EAAU,QAASF,EAAS,SAAW,qBAAqB,CAE/D,OAAQG,EAAO,CACdD,EAAU,QAAS,uBAAyBC,EAAM,OAAO,CAC7D,QAAY,CACRT,EAAY,MAAQ,EACrB,CACH,EAEMa,EAAc,MAAOC,GAAY,CACrC,GAAK,QAAQ,6CAA6C,EAI1D,GAAI,CACF,MAAMR,EAAW,MAAMS,EAAY,eAAeD,CAAO,EAAE,EACvDR,EAAS,QACXE,EAAU,UAAW,4BAA4B,EACjD,MAAMH,EAAY,GAElBG,EAAU,QAASF,EAAS,SAAW,wBAAwB,CAElE,OAAQG,EAAO,CACdD,EAAU,QAAS,yBAA2BC,EAAM,OAAO,CAC5D,CACH,EAEMG,EAAgB,IAAM,CAC1BT,EAAS,MAAQ,CACf,YAAa,GACb,QAAS,GACT,UAAW,GACX,OAAQ,GACR,OAAQ,EACT,CACH,EAEMK,EAAY,CAACQ,EAAMC,IAAY,CACnCb,EAAM,MAAQ,CACZ,KAAM,GACN,KAAAY,EACA,QAAAC,CACD,EACD,WAAW,IAAM,CACfb,EAAM,MAAM,KAAO,EACpB,EAAE,GAAI,CACT,EAGA,OAAAc,EAAU,IAAM,CACdb,EAAY,CACd,CAAC"}