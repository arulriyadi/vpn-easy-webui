{"version":3,"file":"enhancedRbacManagement-B9BlSxEj.js","sources":["../../src/views/enhancedRbacManagement.vue"],"sourcesContent":["<template>\n  <div class=\"container-fluid\">\n    <!-- Header -->\n    <div class=\"d-flex justify-content-between align-items-center mb-4\">\n      <div>\n        <h2 class=\"mb-1\">\n          <i class=\"bi bi-shield-check me-2\"></i>\n          Enhanced RBAC Management\n        </h2>\n        <p class=\"text-muted mb-0\">Scalable User ↔ Group ↔ Organization ↔ Policy Management</p>\n      </div>\n      <div class=\"d-flex gap-2\">\n        <button class=\"btn btn-outline-primary\" @click=\"refreshData\">\n          <i class=\"bi bi-arrow-clockwise me-1\"></i>\n          Refresh\n        </button>\n        <button class=\"btn btn-primary\" @click=\"openCreateGroupModal\">\n          <i class=\"bi bi-plus-circle me-1\"></i>\n          Create Group\n        </button>\n      </div>\n    </div>\n\n    <!-- Statistics Cards -->\n    <div class=\"row mb-4\">\n      <div class=\"col-md-3\">\n        <div class=\"card bg-primary text-white\">\n          <div class=\"card-body\">\n            <div class=\"d-flex justify-content-between\">\n              <div>\n                <h4 class=\"mb-1\">{{ stats.totalGroups }}</h4>\n                <p class=\"mb-0\">Total Groups</p>\n              </div>\n              <div class=\"align-self-center\">\n                <i class=\"bi bi-people-fill\" style=\"font-size: 2rem;\"></i>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-md-3\">\n        <div class=\"card bg-success text-white\">\n          <div class=\"card-body\">\n            <div class=\"d-flex justify-content-between\">\n              <div>\n                <h4 class=\"mb-1\">{{ stats.totalOrganizations }}</h4>\n                <p class=\"mb-0\">Organizations</p>\n              </div>\n              <div class=\"align-self-center\">\n                <i class=\"bi bi-building\" style=\"font-size: 2rem;\"></i>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-md-3\">\n        <div class=\"card bg-info text-white\">\n          <div class=\"card-body\">\n            <div class=\"d-flex justify-content-between\">\n              <div>\n                <h4 class=\"mb-1\">{{ stats.totalPeers }}</h4>\n                <p class=\"mb-0\">Assigned Peers</p>\n              </div>\n              <div class=\"align-self-center\">\n                <i class=\"bi bi-person-check\" style=\"font-size: 2rem;\"></i>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-md-3\">\n        <div class=\"card bg-warning text-white\">\n          <div class=\"card-body\">\n            <div class=\"d-flex justify-content-between\">\n              <div>\n                <h4 class=\"mb-1\">{{ stats.activeRelations }}</h4>\n                <p class=\"mb-0\">Group ↔ Org Relations</p>\n              </div>\n              <div class=\"align-self-center\">\n                <i class=\"bi bi-diagram-3\" style=\"font-size: 2rem;\"></i>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- Enhanced Groups Table -->\n    <div class=\"card\">\n      <div class=\"card-header\">\n        <h5 class=\"mb-0\">\n          <i class=\"bi bi-people me-2\"></i>\n          Enhanced Groups with Organization Relations\n        </h5>\n      </div>\n      <div class=\"card-body\">\n        <div v-if=\"loading\" class=\"text-center py-4\">\n          <div class=\"spinner-border\" role=\"status\">\n            <span class=\"visually-hidden\">Loading...</span>\n          </div>\n        </div>\n        \n        <div v-else class=\"table-responsive\">\n          <table class=\"table table-hover\">\n            <thead>\n              <tr>\n                <th>Group</th>\n                <th>Organizations</th>\n                <th>Peers</th>\n                <th>Policies</th>\n                <th>Actions</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr v-for=\"group in enhancedGroups\" :key=\"group.id\">\n                <td>\n                  <div class=\"d-flex align-items-center\">\n                    <div class=\"me-3\" \n                         :style=\"`width: 12px; height: 12px; background-color: ${group.color}; border-radius: 50%;`\">\n                    </div>\n                    <div>\n                      <strong>{{ group.name }}</strong>\n                      <br>\n                      <small class=\"text-muted\">{{ group.description || 'No description' }}</small>\n                    </div>\n                  </div>\n                </td>\n                <td>\n                  <span v-if=\"group.organization_count === 0\" class=\"text-muted\">\n                    <i class=\"bi bi-exclamation-circle me-1\"></i>\n                    No organizations\n                  </span>\n                  <span v-else class=\"badge bg-primary\">\n                    {{ group.organization_count }} organization{{ group.organization_count > 1 ? 's' : '' }}\n                  </span>\n                </td>\n                <td>\n                  <span v-if=\"group.peer_count === 0\" class=\"text-muted\">\n                    <i class=\"bi bi-person-x me-1\"></i>\n                    No peers\n                  </span>\n                  <span v-else class=\"badge bg-success\">\n                    {{ group.peer_count }} peer{{ group.peer_count > 1 ? 's' : '' }}\n                  </span>\n                </td>\n                <td>\n                  <div class=\"d-flex gap-1\">\n                    <span class=\"badge bg-info\">Filter</span>\n                    <span class=\"badge bg-warning\">NAT</span>\n                  </div>\n                </td>\n                <td>\n                  <i class=\"bi\" :class=\"group.inherit_org_policies ? 'bi-check-circle text-success' : 'bi-x-circle text-danger'\"></i>\n                  <span class=\"ms-1\">{{ group.inherit_org_policies ? 'Yes' : 'No' }}</span>\n                </td>\n                <td>\n                  <div class=\"btn-group btn-group-sm\">\n                    <button class=\"btn btn-outline-primary\" @click=\"viewGroupDetails(group)\">\n                      <i class=\"bi bi-eye\"></i>\n                    </button>\n                    <button class=\"btn btn-outline-success\" @click=\"manageOrganizations(group)\">\n                      <i class=\"bi bi-building\"></i>\n                    </button>\n                    <button class=\"btn btn-outline-info\" @click=\"viewEffectiveAccess(group)\">\n                      <i class=\"bi bi-diagram-3\"></i>\n                    </button>\n                    <button class=\"btn btn-outline-warning\" @click=\"editGroup(group)\">\n                      <i class=\"bi bi-pencil\"></i>\n                    </button>\n                    <button class=\"btn btn-outline-danger\" @click=\"deleteGroup(group)\">\n                      <i class=\"bi bi-trash\"></i>\n                    </button>\n                  </div>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n\n    <!-- Group Details Modal -->\n    <div class=\"modal fade\" id=\"groupDetailsModal\" tabindex=\"-1\" aria-labelledby=\"groupDetailsModalLabel\" aria-hidden=\"true\">\n      <div class=\"modal-dialog modal-xl\">\n        <div class=\"modal-content\">\n          <div class=\"modal-header\">\n            <h5 class=\"modal-title\" id=\"groupDetailsModalLabel\">\n              <i class=\"bi bi-people me-2\"></i>\n              {{ selectedGroup?.name }} - Details\n            </h5>\n            <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n          </div>\n          <div class=\"modal-body\">\n            <div v-if=\"selectedGroup\">\n              <!-- Tab Navigation -->\n              <ul class=\"nav nav-tabs\" id=\"groupDetailsTabs\">\n                <li class=\"nav-item\">\n                  <a class=\"nav-link\" :class=\"{ active: activeGroupTab === 'groupInfo' }\" \n                     href=\"#groupInfo\" @click.prevent=\"activeGroupTab = 'groupInfo'\">Group Info</a>\n                </li>\n                <li class=\"nav-item\">\n                  <a class=\"nav-link\" :class=\"{ active: activeGroupTab === 'organizations' }\" \n                     href=\"#organizations\" @click.prevent=\"activeGroupTab = 'organizations'\">Organizations</a>\n                </li>\n                <li class=\"nav-item\">\n                  <a class=\"nav-link\" :class=\"{ active: activeGroupTab === 'vpnIntegration' }\" \n                     href=\"#vpnIntegration\" @click.prevent=\"activeGroupTab = 'vpnIntegration'\">VPN Integration</a>\n                </li>\n                <li class=\"nav-item\">\n                  <a class=\"nav-link\" :class=\"{ active: activeGroupTab === 'usersPeers' }\" \n                     href=\"#usersPeers\" @click.prevent=\"activeGroupTab = 'usersPeers'\">Users & Peers</a>\n                </li>\n              </ul>\n              \n              <div class=\"tab-content\">\n                <!-- Group Info Tab -->\n                <div class=\"tab-pane fade\" :class=\"{ 'show active': activeGroupTab === 'groupInfo' }\" id=\"groupInfo\">\n              <!-- Group Information -->\n              <div class=\"row mb-4\">\n                <div class=\"col-md-6\">\n                  <h6>Group Information</h6>\n                  <p><strong>Name:</strong> {{ selectedGroup.name }}</p>\n                  <p><strong>Description:</strong> {{ selectedGroup.description || 'No description' }}</p>\n                  <p><strong>Created:</strong> {{ formatDate(selectedGroup.created_at) }}</p>\n                </div>\n                <div class=\"col-md-6\">\n                  <h6>Color</h6>\n                  <div class=\"d-flex align-items-center\">\n                    <div class=\"me-3\" \n                         :style=\"`width: 30px; height: 30px; background-color: ${selectedGroup.color}; border-radius: 50%;`\">\n                    </div>\n                    <code>{{ selectedGroup.color }}</code>\n                  </div>\n                </div>\n              </div>\n\n              <!-- Attached Organizations -->\n              <div class=\"mb-4\">\n                <div class=\"d-flex justify-content-between align-items-center mb-2\">\n                  <h6>Attached Organizations</h6>\n                  <button class=\"btn btn-sm btn-primary\" @click=\"openAttachOrgModal\">\n                    <i class=\"bi bi-plus-circle me-1\"></i>\n                    Attach Organization\n                  </button>\n                </div>\n                <div v-if=\"groupOrganizations.length === 0\" class=\"text-center p-3 border rounded\">\n                  <i class=\"bi bi-building text-muted\" style=\"font-size: 2rem;\"></i>\n                  <p class=\"text-muted mt-2 mb-0\">No organizations attached to this group</p>\n                </div>\n                <div v-else class=\"table-responsive\">\n                  <table class=\"table table-sm\">\n                    <thead>\n                      <tr>\n                        <th>Organization</th>\n                        <th>Subnets</th>\n                        <th>Attached</th>\n                        <th>Actions</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      <tr v-for=\"org in groupOrganizations\" :key=\"org.id\">\n                        <td>\n                          <div class=\"d-flex align-items-center\">\n                            <div class=\"me-2\" \n                                 :style=\"`width: 12px; height: 12px; background-color: ${org.color}; border-radius: 50%;`\">\n                            </div>\n                            <div>\n                              <strong>{{ org.name }}</strong>\n                              <br>\n                              <small class=\"text-muted\">{{ org.description || 'No description' }}</small>\n                            </div>\n                          </div>\n                        </td>\n                        <td>\n                          <span class=\"badge bg-info\">{{ org.subnet_count || 0 }} subnet{{ (org.subnet_count || 0) > 1 ? 's' : '' }}</span>\n                        </td>\n                        <td>{{ formatDate(org.attached_at) }}</td>\n                        <td>\n                          <button class=\"btn btn-sm btn-outline-danger\" @click=\"detachOrganization(org.id)\">\n                            <i class=\"bi bi-unlink\"></i>\n                          </button>\n                        </td>\n                      </tr>\n                    </tbody>\n                  </table>\n                </div>\n              </div>\n\n\n              <!-- VPN Server Integration -->\n              <div class=\"mb-4\">\n                <div class=\"d-flex justify-content-between align-items-center mb-2\">\n                  <h6>VPN Server Integration</h6>\n                  <button class=\"btn btn-sm btn-warning\" @click=\"openVpnAssignmentModal\">\n                    <i class=\"bi bi-gear me-1\"></i>\n                    Configure VPN\n                  </button>\n                </div>\n                \n                <div v-if=\"!vpnAssignment.vpn_enabled\" class=\"text-center p-3 border rounded\">\n                  <i class=\"bi bi-shield-lock text-muted\" style=\"font-size: 2rem;\"></i>\n                  <p class=\"text-muted mt-2 mb-0\">VPN integration not configured</p>\n                  <button class=\"btn btn-sm btn-primary mt-2\" @click=\"openVpnAssignmentModal\">\n                    <i class=\"bi bi-plus-circle me-1\"></i>\n                    Enable VPN Integration\n                  </button>\n                </div>\n                \n                <div v-else>\n                  <div class=\"row\">\n                    <div class=\"col-md-6\">\n                      <div class=\"d-flex align-items-center mb-2\">\n                        <i class=\"bi bi-shield-check text-success me-2\"></i>\n                        <strong>VPN Integration Active</strong>\n                      </div>\n                      <div class=\"d-flex align-items-center mb-2\">\n                        <i class=\"bi bi-router me-2\"></i>\n                        <span><strong>VPN Type:</strong> {{ vpnAssignment.vpn_type }}</span>\n                      </div>\n                      <div class=\"d-flex align-items-center mb-2\">\n                        <i class=\"bi bi-server me-2\"></i>\n                        <span><strong>VPN Server:</strong> {{ vpnAssignment.vpn_server_name }}</span>\n                      </div>\n                      <div class=\"d-flex align-items-center mb-2\">\n                        <i class=\"bi bi-arrow-repeat me-2\"></i>\n                        <span><strong>Auto-Route Subnets:</strong> \n                          <i class=\"bi bi-check-circle text-success\" v-if=\"vpnAssignment.auto_route_subnets\"></i>\n                          <i class=\"bi bi-x-circle text-danger\" v-else></i>\n                        </span>\n                      </div>\n                    </div>\n                    <div class=\"col-md-6\">\n                      <h6 class=\"text-muted\">Configuration Options</h6>\n                      <div class=\"d-flex align-items-center mb-2\">\n                        <i class=\"bi bi-gear me-2\"></i>\n                        <span><strong>Custom Routing:</strong> \n                          <i class=\"bi bi-check-circle text-success\" v-if=\"vpnAssignment.custom_routing_enabled\"></i>\n                          <i class=\"bi bi-x-circle text-danger\" v-else></i>\n                        </span>\n                      </div>\n                      <div class=\"d-flex align-items-center mb-2\">\n                        <i class=\"bi bi-fire me-2\"></i>\n                        <span><strong>Firewall Rules:</strong> \n                          <i class=\"bi bi-check-circle text-success\" v-if=\"vpnAssignment.firewall_rules_enabled\"></i>\n                          <i class=\"bi bi-x-circle text-danger\" v-else></i>\n                        </span>\n                      </div>\n                      <div class=\"d-flex align-items-center mb-2\">\n                        <i class=\"bi bi-clock me-2\"></i>\n                        <span><strong>Last Updated:</strong> {{ formatDate(vpnAssignment.vpn_assignment_updated) }}</span>\n                      </div>\n                    </div>\n                  </div>\n                  \n                  <div class=\"mt-3\">\n                    <button class=\"btn btn-sm btn-outline-primary me-2\" @click=\"testVpnConnection\">\n                      <i class=\"bi bi-wifi me-1\"></i>\n                      Test Connection\n                    </button>\n                    <button class=\"btn btn-sm btn-outline-info\" @click=\"viewVpnConfig\">\n                      <i class=\"bi bi-eye me-1\"></i>\n                      View Generated Config\n                    </button>\n                  </div>\n                </div>\n              </div>\n\n              <!-- VPN Subnets Preview -->\n              <div v-if=\"vpnAssignment.vpn_enabled && vpnSubnets.length > 0\" class=\"mb-4\">\n                <h6>VPN Subnets Preview ({{ vpnSubnets.length }} subnets)</h6>\n                <div class=\"table-responsive\">\n                  <table class=\"table table-sm\">\n                    <thead>\n                      <tr>\n                        <th>Subnet</th>\n                        <th>Description</th>\n                        <th>Organization</th>\n                        <th>Primary</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      <tr v-for=\"subnet in vpnSubnets\" :key=\"subnet.id\">\n                        <td>\n                          <code>{{ subnet.subnet_cidr }}</code>\n                        </td>\n                        <td>{{ subnet.description || 'No description' }}</td>\n                        <td>\n                          <div class=\"d-flex align-items-center\">\n                            <div class=\"me-2\" \n                                 :style=\"`width: 12px; height: 12px; background-color: ${subnet.organization_color}; border-radius: 50%;`\">\n                            </div>\n                            {{ subnet.organization_name }}\n                          </div>\n                        </td>\n                        <td>\n                          <i class=\"bi bi-check-circle text-success\" v-if=\"subnet.is_primary\"></i>\n                          <i class=\"bi bi-circle text-muted\" v-else></i>\n                        </td>\n                      </tr>\n                    </tbody>\n                  </table>\n                </div>\n              </div>\n                </div>\n                \n                <!-- Organizations Tab -->\n                <div class=\"tab-pane fade\" :class=\"{ 'show active': activeGroupTab === 'organizations' }\" id=\"organizations\">\n                  <div class=\"mt-3\">\n                    <!-- Attached Organizations -->\n                    <div class=\"mb-4\">\n                      <div class=\"d-flex justify-content-between align-items-center mb-2\">\n                        <h6>Attached Organizations</h6>\n                        <button class=\"btn btn-sm btn-primary\" @click=\"openAttachOrgModal\">\n                          <i class=\"bi bi-plus-circle me-1\"></i>\n                          Attach Organization\n                        </button>\n                      </div>\n                      <div v-if=\"groupOrganizations.length === 0\" class=\"text-center p-3 border rounded\">\n                        <i class=\"bi bi-building text-muted\" style=\"font-size: 2rem;\"></i>\n                        <p class=\"text-muted mt-2 mb-0\">No organizations attached to this group</p>\n                      </div>\n                      <div v-else class=\"table-responsive\">\n                        <table class=\"table table-sm\">\n                          <thead>\n                            <tr>\n                              <th>Organization</th>\n                              <th>Subnets</th>\n                              <th>Attached</th>\n                              <th>Actions</th>\n                            </tr>\n                          </thead>\n                          <tbody>\n                            <tr v-for=\"org in groupOrganizations\" :key=\"org.id\">\n                              <td>\n                                <div class=\"d-flex align-items-center\">\n                                  <div class=\"me-2\" \n                                       :style=\"`width: 12px; height: 12px; background-color: ${org.color}; border-radius: 50%;`\">\n                                  </div>\n                                  <div>\n                                    <strong>{{ org.name }}</strong>\n                                    <br>\n                                    <small class=\"text-muted\">{{ org.description || 'No description' }}</small>\n                                  </div>\n                                </div>\n                              </td>\n                              <td>\n                                <span class=\"badge bg-info\">{{ org.subnet_count || 0 }} subnet{{ (org.subnet_count || 0) > 1 ? 's' : '' }}</span>\n                              </td>\n                              <td>{{ formatDate(org.attached_at) }}</td>\n                              <td>\n                                <button class=\"btn btn-sm btn-outline-danger\" @click=\"detachOrganization(org.id)\">\n                                  <i class=\"bi bi-unlink\"></i>\n                                </button>\n                              </td>\n                            </tr>\n                          </tbody>\n                        </table>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                \n                <!-- VPN Integration Tab -->\n                <div class=\"tab-pane fade\" :class=\"{ 'show active': activeGroupTab === 'vpnIntegration' }\" id=\"vpnIntegration\">\n                  <div class=\"mt-3\">\n                    <!-- VPN Server Integration -->\n                    <div class=\"mb-4\">\n                      <div class=\"d-flex justify-content-between align-items-center mb-2\">\n                        <h6>VPN Server Integration</h6>\n                        <button class=\"btn btn-sm btn-warning\" @click=\"openVpnAssignmentModal\">\n                          <i class=\"bi bi-gear me-1\"></i>\n                          Configure VPN\n                        </button>\n                      </div>\n                      \n                      <div v-if=\"!vpnAssignment.vpn_enabled\" class=\"text-center p-3 border rounded\">\n                        <i class=\"bi bi-shield-lock text-muted\" style=\"font-size: 2rem;\"></i>\n                        <p class=\"text-muted mt-2 mb-0\">VPN integration not configured</p>\n                        <button class=\"btn btn-sm btn-primary mt-2\" @click=\"openVpnAssignmentModal\">\n                          <i class=\"bi bi-plus-circle me-1\"></i>\n                          Enable VPN Integration\n                        </button>\n                      </div>\n                      \n                      <div v-else>\n                        <div class=\"row\">\n                          <div class=\"col-md-6\">\n                            <div class=\"d-flex align-items-center mb-2\">\n                              <i class=\"bi bi-shield-check text-success me-2\"></i>\n                              <strong>VPN Integration Active</strong>\n                            </div>\n                            <div class=\"d-flex align-items-center mb-2\">\n                              <i class=\"bi bi-router me-2\"></i>\n                              <span><strong>VPN Type:</strong> {{ vpnAssignment.vpn_type }}</span>\n                            </div>\n                            <div class=\"d-flex align-items-center mb-2\">\n                              <i class=\"bi bi-server me-2\"></i>\n                              <span><strong>VPN Server:</strong> {{ vpnAssignment.vpn_server_name }}</span>\n                            </div>\n                            <div class=\"d-flex align-items-center mb-2\">\n                              <i class=\"bi bi-arrow-repeat me-2\"></i>\n                              <span><strong>Auto-Route Subnets:</strong> \n                                <i class=\"bi bi-check-circle text-success\" v-if=\"vpnAssignment.auto_route_subnets\"></i>\n                                <i class=\"bi bi-x-circle text-danger\" v-else></i>\n                              </span>\n                            </div>\n                          </div>\n                          <div class=\"col-md-6\">\n                            <h6 class=\"text-muted\">Configuration Options</h6>\n                            <div class=\"d-flex align-items-center mb-2\">\n                              <i class=\"bi bi-gear me-2\"></i>\n                              <span><strong>Custom Routing:</strong> \n                                <i class=\"bi bi-check-circle text-success\" v-if=\"vpnAssignment.custom_routing_enabled\"></i>\n                                <i class=\"bi bi-x-circle text-danger\" v-else></i>\n                              </span>\n                            </div>\n                            <div class=\"d-flex align-items-center mb-2\">\n                              <i class=\"bi bi-fire me-2\"></i>\n                              <span><strong>Firewall Rules:</strong> \n                                <i class=\"bi bi-check-circle text-success\" v-if=\"vpnAssignment.firewall_rules_enabled\"></i>\n                                <i class=\"bi bi-x-circle text-danger\" v-else></i>\n                              </span>\n                            </div>\n                            <div class=\"d-flex align-items-center mb-2\">\n                              <i class=\"bi bi-clock me-2\"></i>\n                              <span><strong>Last Updated:</strong> {{ formatDate(vpnAssignment.vpn_assignment_updated) }}</span>\n                            </div>\n                          </div>\n                        </div>\n                        \n                        <div class=\"mt-3\">\n                          <button class=\"btn btn-sm btn-outline-primary me-2\" @click=\"testVpnConnection\">\n                            <i class=\"bi bi-wifi me-1\"></i>\n                            Test Connection\n                          </button>\n                          <button class=\"btn btn-sm btn-outline-info\" @click=\"viewVpnConfig\">\n                            <i class=\"bi bi-eye me-1\"></i>\n                            View Generated Config\n                          </button>\n                        </div>\n                      </div>\n                    </div>\n\n                    <!-- VPN Subnets Preview -->\n                    <div v-if=\"vpnAssignment.vpn_enabled && vpnSubnets.length > 0\" class=\"mb-4\">\n                      <h6>VPN Subnets Preview ({{ vpnSubnets.length }} subnets)</h6>\n                      <div class=\"table-responsive\">\n                        <table class=\"table table-sm\">\n                          <thead>\n                            <tr>\n                              <th>Subnet</th>\n                              <th>Description</th>\n                              <th>Organization</th>\n                              <th>Primary</th>\n                            </tr>\n                          </thead>\n                          <tbody>\n                            <tr v-for=\"subnet in vpnSubnets\" :key=\"subnet.id\">\n                              <td>\n                                <code>{{ subnet.subnet_cidr }}</code>\n                              </td>\n                              <td>{{ subnet.description || 'No description' }}</td>\n                              <td>\n                                <div class=\"d-flex align-items-center\">\n                                  <div class=\"me-2\" \n                                       :style=\"`width: 12px; height: 12px; background-color: ${subnet.organization_color}; border-radius: 50%;`\">\n                                  </div>\n                                  {{ subnet.organization_name }}\n                                </div>\n                              </td>\n                              <td>\n                                <i class=\"bi bi-check-circle text-success\" v-if=\"subnet.is_primary\"></i>\n                                <i class=\"bi bi-circle text-muted\" v-else></i>\n                              </td>\n                            </tr>\n                          </tbody>\n                        </table>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                \n                <!-- Users & Peers Tab -->\n                <div class=\"tab-pane fade\" :class=\"{ 'show active': activeGroupTab === 'usersPeers' }\" id=\"usersPeers\">\n                  <div class=\"mt-3\">\n                    <div class=\"row\">\n                      <div class=\"col-md-8\">\n                        <h6>Group Members</h6>\n                        <div v-if=\"loadingGroupUsers\" class=\"text-center p-3\">\n                          <div class=\"spinner-border\" role=\"status\">\n                            <span class=\"visually-hidden\">Loading...</span>\n                          </div>\n                        </div>\n                        <div v-else-if=\"groupUsers.length === 0\" class=\"text-center p-4 text-muted\">\n                          <i class=\"bi bi-people\" style=\"font-size: 2rem;\"></i>\n                          <p class=\"mt-2 mb-0\">No users assigned to this group</p>\n                        </div>\n                        <div v-else class=\"table-responsive\">\n                          <table class=\"table table-sm\">\n                            <thead>\n                              <tr>\n                                <th>Username</th>\n                                <th>Email</th>\n                                <th>Full Name</th>\n                                <th>VPN Status</th>\n                                <th>Actions</th>\n                              </tr>\n                            </thead>\n                            <tbody>\n                              <tr v-for=\"user in groupUsers\" :key=\"user.id\">\n                                <td>\n                                  <strong>{{ user.username }}</strong>\n                                </td>\n                                <td>{{ user.email || 'Not set' }}</td>\n                                <td>{{ user.full_name || 'Not set' }}</td>\n                                <td>\n                                  <span class=\"badge\" :class=\"getUserVpnStatusBadge(user)\">\n                                    {{ user.vpn_peer_generated ? 'Active' : 'Pending' }}\n                                  </span>\n                                </td>\n                                <td>\n                                  <button v-if=\"!user.vpn_peer_generated\" \n                                          class=\"btn btn-sm btn-success\" \n                                          @click=\"generateVpnPeer(user.id)\"\n                                          :disabled=\"loadingVpnGeneration\">\n                                    <i class=\"bi bi-plus-circle\"></i> Generate VPN\n                                  </button>\n                                  <button v-else \n                                          class=\"btn btn-sm btn-outline-danger\" \n                                          @click=\"removeUserFromGroup(user.id)\">\n                                    <i class=\"bi bi-trash\"></i> Remove\n                                  </button>\n                                </td>\n                              </tr>\n                            </tbody>\n                          </table>\n                        </div>\n                      </div>\n                      \n                      <div class=\"col-md-4\">\n                        <h6>VPN Peers Summary</h6>\n                        <div class=\"card\">\n                          <div class=\"card-body\">\n                            <div class=\"row text-center\">\n                              <div class=\"col-4\">\n                                <h4 class=\"text-primary\">{{ vpnPeersSummary.total || 0 }}</h4>\n                                <small>Total Peers</small>\n                              </div>\n                              <div class=\"col-4\">\n                                <h4 class=\"text-success\">{{ vpnPeersSummary.active || 0 }}</h4>\n                                <small>Active</small>\n                              </div>\n                              <div class=\"col-4\">\n                                <h4 class=\"text-warning\">{{ vpnPeersSummary.pending || 0 }}</h4>\n                                <small>Pending</small>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                        \n                        <div class=\"mt-3\">\n                          <button class=\"btn btn-primary btn-sm w-100\" @click=\"addUserToGroup\">\n                            <i class=\"bi bi-plus-circle\"></i> Add User to Group\n                          </button>\n                          <button class=\"btn btn-outline-secondary btn-sm w-100 mt-2\" @click=\"updateAllRoutes\">\n                            <i class=\"bi bi-arrow-repeat\"></i> Update All Routes\n                          </button>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"modal-footer\">\n            <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\n            <button type=\"button\" class=\"btn btn-primary\" @click=\"editGroup(selectedGroup)\">\n              <i class=\"bi bi-pencil me-2\"></i>\n              Edit Group\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- Attach Organization Modal -->\n    <div class=\"modal fade\" id=\"attachOrgModal\" tabindex=\"-1\" aria-labelledby=\"attachOrgModalLabel\" aria-hidden=\"true\">\n      <div class=\"modal-dialog\">\n        <div class=\"modal-content\">\n          <div class=\"modal-header\">\n            <h5 class=\"modal-title\" id=\"attachOrgModalLabel\">Attach Organization to Group</h5>\n            <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n          </div>\n          <div class=\"modal-body\">\n            <div v-if=\"availableOrganizations.length === 0\" class=\"text-center p-3\">\n              <i class=\"bi bi-info-circle text-muted\" style=\"font-size: 2rem;\"></i>\n              <p class=\"text-muted mt-2 mb-0\">No available organizations to attach</p>\n            </div>\n            <div v-else>\n              <p>Select an organization to attach to <strong>{{ selectedGroup?.name }}</strong>:</p>\n              <div class=\"list-group\">\n                <button v-for=\"org in availableOrganizations\" \n                        :key=\"org.id\"\n                        class=\"list-group-item list-group-item-action\"\n                        @click=\"attachOrganization(org.id)\">\n                  <div class=\"d-flex align-items-center\">\n                    <div class=\"me-3\" \n                         :style=\"`width: 12px; height: 12px; background-color: ${org.color}; border-radius: 50%;`\">\n                    </div>\n                    <div>\n                      <strong>{{ org.name }}</strong>\n                      <br>\n                      <small class=\"text-muted\">{{ org.description || 'No description' }}</small>\n                    </div>\n                  </div>\n                </button>\n              </div>\n            </div>\n          </div>\n          <div class=\"modal-footer\">\n            <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Cancel</button>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- VPN Assignment Modal -->\n    <div class=\"modal fade\" id=\"vpnAssignmentModal\" tabindex=\"-1\" aria-labelledby=\"vpnAssignmentModalLabel\" aria-hidden=\"true\">\n      <div class=\"modal-dialog\">\n        <div class=\"modal-content\">\n          <div class=\"modal-header\">\n            <h5 class=\"modal-title\" id=\"vpnAssignmentModalLabel\">\n              <i class=\"bi bi-shield-lock me-2\"></i>\n              VPN Assignment - {{ selectedGroup?.name }}\n            </h5>\n            <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n          </div>\n          <div class=\"modal-body\">\n            <form @submit.prevent=\"saveVpnAssignment\">\n              <div class=\"mb-3\">\n                <div class=\"form-check form-switch\">\n                  <input class=\"form-check-input\" \n                         type=\"checkbox\" \n                         id=\"vpnEnabled\" \n                         v-model=\"vpnForm.vpn_enabled\">\n                  <label class=\"form-check-label\" for=\"vpnEnabled\">\n                    <strong>Enable VPN Integration</strong>\n                  </label>\n                </div>\n                <small class=\"form-text text-muted\">\n                  Enable VPN server integration for this group\n                </small>\n              </div>\n\n              <div v-if=\"vpnForm.vpn_enabled\">\n                <div class=\"mb-3\">\n                  <label for=\"vpnType\" class=\"form-label\">VPN Type</label>\n                  <select class=\"form-select\" id=\"vpnType\" v-model=\"vpnForm.vpn_type\" required>\n                    <option value=\"wireguard\">WireGuard</option>\n                    <option value=\"openvpn\" disabled>OpenVPN (Coming Soon)</option>\n                  </select>\n                </div>\n\n                <div class=\"mb-3\">\n                  <label for=\"vpnServer\" class=\"form-label\">VPN Server</label>\n                  <select class=\"form-select\" id=\"vpnServer\" v-model=\"vpnForm.vpn_server_name\" required>\n                    <option value=\"\">Select VPN Server</option>\n                    <option v-for=\"server in availableVpnServers\" \n                            :key=\"server.name\" \n                            :value=\"server.name\">\n                      {{ server.name }} - {{ server.status }} ({{ server.peer_count }} peers)\n                    </option>\n                  </select>\n                </div>\n\n                <div class=\"mb-3\">\n                  <h6>Auto-Route Options</h6>\n                  <div class=\"form-check\">\n                    <input class=\"form-check-input\" \n                           type=\"checkbox\" \n                           id=\"autoRouteSubnets\" \n                           v-model=\"vpnForm.auto_route_subnets\">\n                    <label class=\"form-check-label\" for=\"autoRouteSubnets\">\n                      Push all organization subnets to group users\n                    </label>\n                  </div>\n                  <div class=\"form-check\">\n                    <input class=\"form-check-input\" \n                           type=\"checkbox\" \n                           id=\"customRouting\" \n                           v-model=\"vpnForm.custom_routing_enabled\">\n                    <label class=\"form-check-label\" for=\"customRouting\">\n                      Allow custom routing rules\n                    </label>\n                  </div>\n                  <div class=\"form-check\">\n                    <input class=\"form-check-input\" \n                           type=\"checkbox\" \n                           id=\"firewallRules\" \n                           v-model=\"vpnForm.firewall_rules_enabled\">\n                    <label class=\"form-check-label\" for=\"firewallRules\">\n                      Enable firewall rules for organization traffic\n                    </label>\n                  </div>\n                </div>\n\n                <div v-if=\"vpnSubnets.length > 0\" class=\"mb-3\">\n                  <h6>VPN Subnets Preview ({{ vpnSubnets.length }} subnets)</h6>\n                  <div class=\"table-responsive\">\n                    <table class=\"table table-sm\">\n                      <thead>\n                        <tr>\n                          <th>Subnet</th>\n                          <th>Description</th>\n                          <th>Organization</th>\n                          <th>Primary</th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        <tr v-for=\"subnet in vpnSubnets\" :key=\"subnet.id\">\n                          <td><code>{{ subnet.subnet_cidr }}</code></td>\n                          <td>{{ subnet.description || 'No description' }}</td>\n                          <td>\n                            <div class=\"d-flex align-items-center\">\n                              <div class=\"me-2\" \n                                   :style=\"`width: 12px; height: 12px; background-color: ${subnet.organization_color}; border-radius: 50%;`\">\n                              </div>\n                              {{ subnet.organization_name }}\n                            </div>\n                          </td>\n                          <td>\n                            <i class=\"bi bi-check-circle text-success\" v-if=\"subnet.is_primary\"></i>\n                            <i class=\"bi bi-circle text-muted\" v-else></i>\n                          </td>\n                        </tr>\n                      </tbody>\n                    </table>\n                  </div>\n                </div>\n              </div>\n            </form>\n          </div>\n          <div class=\"modal-footer\">\n            <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Cancel</button>\n            <button type=\"button\" class=\"btn btn-primary\" @click=\"saveVpnAssignment\">\n              <i class=\"bi bi-check-circle me-2\"></i>\n              Save VPN Assignment\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- Create Group Modal -->\n    <div class=\"modal fade\" id=\"createGroupModal\" tabindex=\"-1\" aria-labelledby=\"createGroupModalLabel\" aria-hidden=\"true\">\n      <div class=\"modal-dialog\">\n        <div class=\"modal-content\">\n          <div class=\"modal-header\">\n            <h5 class=\"modal-title\" id=\"createGroupModalLabel\">Create New Group</h5>\n            <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n          </div>\n          <div class=\"modal-body\">\n            <form @submit.prevent=\"createGroup\">\n              <div class=\"mb-3\">\n                <label for=\"groupName\" class=\"form-label\">Group Name <span class=\"text-danger\">*</span></label>\n                <input type=\"text\" \n                       class=\"form-control\" \n                       id=\"groupName\" \n                       v-model=\"groupForm.name\" \n                       required>\n              </div>\n              <div class=\"mb-3\">\n                <label for=\"groupDescription\" class=\"form-label\">Description</label>\n                <textarea class=\"form-control\" \n                          id=\"groupDescription\" \n                          rows=\"3\" \n                          v-model=\"groupForm.description\"></textarea>\n              </div>\n              <div class=\"mb-3\">\n                <label for=\"groupColor\" class=\"form-label\">Color</label>\n                <input type=\"color\" \n                       class=\"form-control form-control-color\" \n                       id=\"groupColor\" \n                       v-model=\"groupForm.color\">\n              </div>\n            </form>\n          </div>\n          <div class=\"modal-footer\">\n            <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Cancel</button>\n            <button type=\"button\" class=\"btn btn-primary\" @click=\"createGroup\">\n              <i class=\"bi bi-plus-circle me-2\"></i>\n              Create Group\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, onMounted, computed } from 'vue'\nimport { fetchDelete } from '@/utilities/fetch.js'\n\n// Reactive data\nconst loading = ref(false)\nconst enhancedGroups = ref([])\nconst selectedGroup = ref(null)\nconst groupOrganizations = ref([])\nconst availableOrganizations = ref([])\nconst effectivePolicies = ref({\n  filter_policies: [],\n  nat_policies: [],\n  organizations: []\n})\n\nconst groupForm = ref({\n  name: '',\n  description: '',\n  color: '#007bff'\n})\n\n// VPN Integration data\nconst vpnAssignment = ref({\n  vpn_enabled: false,\n  vpn_type: 'wireguard',\n  vpn_server_name: '',\n  auto_route_subnets: true,\n  custom_routing_enabled: true,\n  firewall_rules_enabled: true,\n  vpn_assignment_updated: null\n})\n\nconst vpnSubnets = ref([])\nconst availableVpnServers = ref([])\n\nconst vpnForm = ref({\n  vpn_enabled: false,\n  vpn_type: 'wireguard',\n  vpn_server_name: '',\n  auto_route_subnets: true,\n  custom_routing_enabled: true,\n  firewall_rules_enabled: true\n})\n\n// Users & Peers tab data\nconst groupUsers = ref([])\nconst loadingGroupUsers = ref(false)\nconst vpnPeersSummary = ref({\n  total: 0,\n  active: 0,\n  pending: 0\n})\nconst loadingVpnGeneration = ref(false)\nconst activeGroupTab = ref('groupInfo')\n\n// Computed properties\nconst stats = computed(() => {\n  return {\n    totalGroups: enhancedGroups.value.length,\n    totalOrganizations: enhancedGroups.value.reduce((sum, group) => sum + (group.organization_count || 0), 0),\n    totalPeers: enhancedGroups.value.reduce((sum, group) => sum + (group.peer_count || 0), 0),\n    activeRelations: enhancedGroups.value.filter(group => group.organization_count > 0).length\n  }\n})\n\n// Methods\nconst loadEnhancedGroups = async () => {\n  loading.value = true\n  try {\n    const response = await fetch('/api/enhanced-rbac/groups')\n    const result = await response.json()\n    if (result.status) {\n      enhancedGroups.value = result.data\n    } else {\n      showToast('error', 'Failed to load enhanced groups: ' + result.message)\n    }\n  } catch (error) {\n    showToast('error', 'Error loading enhanced groups: ' + error.message)\n  } finally {\n    loading.value = false\n  }\n}\n\nconst loadGroupOrganizations = async (groupId) => {\n  try {\n    const response = await fetch(`/api/enhanced-rbac/groups/${groupId}/organizations`)\n    const result = await response.json()\n    if (result.status) {\n      groupOrganizations.value = result.data\n    } else {\n      showToast('error', 'Failed to load group organizations: ' + result.message)\n    }\n  } catch (error) {\n    showToast('error', 'Error loading group organizations: ' + error.message)\n  }\n}\n\nconst loadAvailableOrganizations = async (groupId) => {\n  try {\n    const response = await fetch(`/api/enhanced-rbac/groups/${groupId}/available-organizations`)\n    const result = await response.json()\n    if (result.status) {\n      availableOrganizations.value = result.data\n    } else {\n      showToast('error', 'Failed to load available organizations: ' + result.message)\n    }\n  } catch (error) {\n    showToast('error', 'Error loading available organizations: ' + error.message)\n  }\n}\n\nconst loadEffectivePolicies = async (groupId) => {\n  try {\n    const response = await fetch(`/api/enhanced-rbac/groups/${groupId}/effective-policies`)\n    const result = await response.json()\n    if (result.status) {\n      effectivePolicies.value = result.data\n    } else {\n      showToast('error', 'Failed to load effective policies: ' + result.message)\n    }\n  } catch (error) {\n    showToast('error', 'Error loading effective policies: ' + error.message)\n  }\n}\n\nconst viewGroupDetails = async (group) => {\n  selectedGroup.value = group\n  activeGroupTab.value = 'groupInfo' // Reset to first tab\n  await loadGroupOrganizations(group.id)\n  await loadEffectivePolicies(group.id)\n  await loadVpnAssignment(group.id)\n  await loadVpnSubnets(group.id)\n  await loadGroupUsers(group.id)\n  await loadVpnPeersSummary(group.id)\n  const modal = new bootstrap.Modal(document.getElementById('groupDetailsModal'))\n  modal.show()\n}\n\nconst openAttachOrgModal = async () => {\n  await loadAvailableOrganizations(selectedGroup.value.id)\n  const modal = new bootstrap.Modal(document.getElementById('attachOrgModal'))\n  modal.show()\n}\n\nconst attachOrganization = async (orgId) => {\n  try {\n    const response = await fetch(`/api/enhanced-rbac/groups/${selectedGroup.value.id}/organizations/${orgId}`, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({})\n    })\n    const result = await response.json()\n    if (result.status) {\n      showToast('success', result.message)\n      closeModalSafely('attachOrgModal')\n      await loadGroupOrganizations(selectedGroup.value.id)\n      await loadEnhancedGroups() // Refresh stats\n    } else {\n      showToast('error', result.message)\n    }\n  } catch (error) {\n    showToast('error', 'Error attaching organization: ' + error.message)\n  }\n}\n\nconst detachOrganization = async (orgId) => {\n  if (confirm('Are you sure you want to detach this organization from the group?')) {\n    try {\n      const response = await fetch(`/api/enhanced-rbac/groups/${selectedGroup.value.id}/organizations/${orgId}`, {\n        method: 'DELETE'\n      })\n      const result = await response.json()\n      if (result.status) {\n        showToast('success', result.message)\n        await loadGroupOrganizations(selectedGroup.value.id)\n        await loadEnhancedGroups() // Refresh stats\n      } else {\n        showToast('error', result.message)\n      }\n    } catch (error) {\n      showToast('error', 'Error detaching organization: ' + error.message)\n    }\n  }\n}\n\nconst refreshEffectivePolicies = async () => {\n  await loadEffectivePolicies(selectedGroup.value.id)\n}\n\nconst openCreateGroupModal = () => {\n  groupForm.value = {\n    name: '',\n    description: '',\n    color: '#007bff'\n  }\n  const modal = new bootstrap.Modal(document.getElementById('createGroupModal'))\n  modal.show()\n}\n\nconst createGroup = async () => {\n  try {\n    const response = await fetch('/api/enhanced-rbac/groups', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(groupForm.value)\n    })\n    const result = await response.json()\n    if (result.status) {\n      showToast('success', result.message)\n      closeModalSafely('createGroupModal')\n      await loadEnhancedGroups()\n    } else {\n      showToast('error', result.message)\n    }\n  } catch (error) {\n    showToast('error', 'Error creating group: ' + error.message)\n  }\n}\n\nconst editGroup = (group) => {\n  // TODO: Implement edit group functionality\n  showToast('info', 'Edit group functionality coming soon!')\n}\n\nconst deleteGroup = async (group) => {\n  if (confirm(`Are you sure you want to delete group \"${group.name}\"?`)) {\n    try {\n      loading.value = true\n      \n      const response = await fetchDelete(`/api/rbac/groups/${group.id}`)\n      \n      if (response.status) {\n        showToast('success', response.message || 'Group deleted successfully')\n        await loadEnhancedGroups() // Refresh the groups list\n      } else {\n        showToast('error', response.message || 'Failed to delete group')\n      }\n    } catch (error) {\n      console.error('Error deleting group:', error)\n      showToast('error', 'Failed to delete group')\n    } finally {\n      loading.value = false\n    }\n  }\n}\n\nconst manageOrganizations = (group) => {\n  viewGroupDetails(group)\n}\n\nconst viewEffectiveAccess = (group) => {\n  // TODO: Implement effective access view\n  showToast('info', 'Effective access view coming soon!')\n}\n\nconst refreshData = async () => {\n  await loadEnhancedGroups()\n}\n\nconst getSourceBadgeClass = (source) => {\n  switch (source) {\n    case 'org_default': return 'bg-secondary'\n    case 'group_override': return 'bg-warning'\n    case 'group_policy': return 'bg-info'\n    default: return 'bg-light text-dark'\n  }\n}\n\nconst formatDate = (dateString) => {\n  if (!dateString) return '-'\n  return new Date(dateString).toLocaleDateString()\n}\n\nconst closeModalSafely = (modalId) => {\n  const modal = bootstrap.Modal.getInstance(document.getElementById(modalId))\n  if (modal) {\n    modal.hide()\n  } else {\n    // Fallback: manually remove modal and backdrop\n    const modalElement = document.getElementById(modalId)\n    if (modalElement) {\n      modalElement.classList.remove('show')\n      modalElement.style.display = 'none'\n      modalElement.setAttribute('aria-hidden', 'true')\n      modalElement.removeAttribute('aria-modal')\n    }\n    // Remove backdrop\n    const backdrops = document.querySelectorAll('.modal-backdrop')\n    backdrops.forEach(backdrop => backdrop.remove())\n    // Remove modal-open class from body\n    document.body.classList.remove('modal-open')\n    document.body.style.overflow = ''\n  }\n}\n\nconst showToast = (type, message) => {\n  // Simple toast implementation\n  const toast = document.createElement('div')\n  toast.className = `alert alert-${type === 'error' ? 'danger' : type} alert-dismissible fade show position-fixed`\n  toast.style.cssText = 'top: 20px; right: 20px; z-index: 9999; min-width: 300px;'\n  toast.innerHTML = `\n    ${message}\n    <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\"></button>\n  `\n  document.body.appendChild(toast)\n  \n  setTimeout(() => {\n    if (toast.parentNode) {\n      toast.parentNode.removeChild(toast)\n    }\n  }, 5000)\n}\n\n// VPN Integration methods\nconst loadVpnAssignment = async (groupId) => {\n  try {\n    const response = await fetch(`/api/enhanced-rbac/groups/${groupId}/vpn-assignment`)\n    const result = await response.json()\n    \n    if (result.status) {\n      vpnAssignment.value = {\n        vpn_enabled: result.data?.vpn_enabled || false,\n        vpn_type: result.data?.vpn_type || 'wireguard',\n        vpn_server_name: result.data?.vpn_server_name || '',\n        auto_route_subnets: result.data?.auto_route_subnets || true,\n        custom_routing_enabled: result.data?.custom_routing_enabled || true,\n        firewall_rules_enabled: result.data?.firewall_rules_enabled || true,\n        vpn_assignment_updated: result.data?.vpn_assignment_updated || null\n      }\n    }\n  } catch (error) {\n    console.error('Error loading VPN assignment:', error)\n  }\n}\n\nconst loadVpnSubnets = async (groupId) => {\n  try {\n    const response = await fetch(`/api/enhanced-rbac/groups/${groupId}/vpn-subnets`)\n    const result = await response.json()\n    \n    if (result.status) {\n      vpnSubnets.value = result.data || []\n    }\n  } catch (error) {\n    console.error('Error loading VPN subnets:', error)\n  }\n}\n\nconst loadAvailableVpnServers = async () => {\n  try {\n    const response = await fetch('/api/wireguard-configurations')\n    const result = await response.json()\n    \n    if (result.status) {\n      availableVpnServers.value = result.data.map(server => ({\n        name: server.name,\n        status: server.status || 'Active',\n        peer_count: server.peer_count || 0\n      }))\n    }\n  } catch (error) {\n    console.error('Error loading VPN servers:', error)\n  }\n}\n\nconst openVpnAssignmentModal = async () => {\n  if (selectedGroup.value) {\n    // Load current VPN assignment\n    await loadVpnAssignment(selectedGroup.value.id)\n    await loadVpnSubnets(selectedGroup.value.id)\n    await loadAvailableVpnServers()\n    \n    // Populate form with current values\n    vpnForm.value = {\n      vpn_enabled: vpnAssignment.value.vpn_enabled,\n      vpn_type: vpnAssignment.value.vpn_type,\n      vpn_server_name: vpnAssignment.value.vpn_server_name,\n      auto_route_subnets: vpnAssignment.value.auto_route_subnets,\n      custom_routing_enabled: vpnAssignment.value.custom_routing_enabled,\n      firewall_rules_enabled: vpnAssignment.value.firewall_rules_enabled\n    }\n    \n    // Show modal\n    const modal = new bootstrap.Modal(document.getElementById('vpnAssignmentModal'))\n    modal.show()\n  }\n}\n\nconst saveVpnAssignment = async () => {\n  if (!selectedGroup.value) return\n  \n  try {\n    const response = await fetch(`/api/enhanced-rbac/groups/${selectedGroup.value.id}/vpn-assignment`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(vpnForm.value)\n    })\n    \n    const result = await response.json()\n    \n    if (result.status) {\n      showToast('VPN assignment updated successfully', 'success')\n      \n      // Reload VPN assignment and subnets\n      await loadVpnAssignment(selectedGroup.value.id)\n      await loadVpnSubnets(selectedGroup.value.id)\n      \n      // Close modal\n      closeModalSafely('vpnAssignmentModal')\n    } else {\n      showToast(result.message || 'Failed to update VPN assignment', 'error')\n    }\n  } catch (error) {\n    console.error('Error saving VPN assignment:', error)\n    showToast('Error saving VPN assignment', 'error')\n  }\n}\n\nconst testVpnConnection = () => {\n  showToast('VPN connection test feature coming soon', 'info')\n}\n\nconst viewVpnConfig = () => {\n  showToast('VPN config viewer feature coming soon', 'info')\n}\n\n// Users & Peers tab methods\nconst loadGroupUsers = async (groupId) => {\n  loadingGroupUsers.value = true\n  try {\n    const response = await fetch(`/api/enhanced-rbac/groups/${groupId}/users`)\n    const result = await response.json()\n    if (result.status) {\n      groupUsers.value = result.data || []\n    } else {\n      showToast('Failed to load group users: ' + result.message, 'error')\n    }\n  } catch (error) {\n    showToast('Error loading group users: ' + error.message, 'error')\n  } finally {\n    loadingGroupUsers.value = false\n  }\n}\n\nconst loadVpnPeersSummary = async (groupId) => {\n  try {\n    const response = await fetch(`/api/enhanced-rbac/groups/${groupId}/peers-summary`)\n    const result = await response.json()\n    if (result.status) {\n      vpnPeersSummary.value = result.data || { total: 0, active: 0, pending: 0 }\n    } else {\n      showToast('Failed to load VPN peers summary: ' + result.message, 'error')\n    }\n  } catch (error) {\n    showToast('Error loading VPN peers summary: ' + error.message, 'error')\n  }\n}\n\nconst generateVpnPeer = async (userId) => {\n  loadingVpnGeneration.value = true\n  try {\n    const response = await fetch(`/api/users/${userId}/vpn-peer`, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ group_id: selectedGroup.value.id })\n    })\n    const result = await response.json()\n    if (result.status) {\n      showToast('VPN peer generated successfully', 'success')\n      // Reload group users and summary\n      await loadGroupUsers(selectedGroup.value.id)\n      await loadVpnPeersSummary(selectedGroup.value.id)\n    } else {\n      showToast('Failed to generate VPN peer: ' + result.message, 'error')\n    }\n  } catch (error) {\n    showToast('Error generating VPN peer: ' + error.message, 'error')\n  } finally {\n    loadingVpnGeneration.value = false\n  }\n}\n\nconst removeUserFromGroup = async (userId) => {\n  if (!confirm('Are you sure you want to remove this user from the group? This will also remove their VPN peer.')) {\n    return\n  }\n  \n  try {\n    const response = await fetch(`/api/users/${userId}/groups/${selectedGroup.value.id}`, {\n      method: 'DELETE'\n    })\n    const result = await response.json()\n    if (result.status) {\n      showToast('User removed from group successfully', 'success')\n      // Reload group users and summary\n      await loadGroupUsers(selectedGroup.value.id)\n      await loadVpnPeersSummary(selectedGroup.value.id)\n    } else {\n      showToast('Failed to remove user from group: ' + result.message, 'error')\n    }\n  } catch (error) {\n    showToast('Error removing user from group: ' + error.message, 'error')\n  }\n}\n\nconst addUserToGroup = () => {\n  showToast('Add user to group feature coming soon', 'info')\n}\n\nconst updateAllRoutes = () => {\n  showToast('Update all routes feature coming soon', 'info')\n}\n\nconst getUserVpnStatusBadge = (user) => {\n  if (user.vpn_peer_generated) {\n    return 'bg-success'\n  } else {\n    return 'bg-warning'\n  }\n}\n\n// Lifecycle\nonMounted(() => {\n  loadEnhancedGroups()\n})\n</script>\n\n<style scoped>\n.card {\n  border: 1px solid rgba(255, 255, 255, 0.125);\n  background-color: rgba(255, 255, 255, 0.05);\n}\n\n.card-header {\n  background-color: rgba(255, 255, 255, 0.1);\n  border-bottom: 1px solid rgba(255, 255, 255, 0.125);\n}\n\n.table {\n  --bs-table-bg: transparent;\n}\n\n.table-hover tbody tr:hover {\n  background-color: rgba(255, 255, 255, 0.075);\n}\n\n.btn-group-sm > .btn {\n  padding: 0.25rem 0.5rem;\n}\n\n.badge {\n  font-size: 0.75em;\n}\n\n.list-group-item {\n  background-color: rgba(255, 255, 255, 0.05);\n  border: 1px solid rgba(255, 255, 255, 0.125);\n}\n\n.list-group-item:hover {\n  background-color: rgba(255, 255, 255, 0.1);\n}\n\n.modal-content {\n  background-color: #1a1a1a;\n  border: 1px solid rgba(255, 255, 255, 0.125);\n}\n\n.modal-header {\n  border-bottom: 1px solid rgba(255, 255, 255, 0.125);\n}\n\n.modal-footer {\n  border-top: 1px solid rgba(255, 255, 255, 0.125);\n}\n\n.form-control {\n  background-color: rgba(255, 255, 255, 0.1);\n  border: 1px solid rgba(255, 255, 255, 0.125);\n  color: white;\n}\n\n.form-control:focus {\n  background-color: rgba(255, 255, 255, 0.15);\n  border-color: #0d6efd;\n  box-shadow: 0 0 0 0.25rem rgba(13, 110, 253, 0.25);\n  color: white;\n}\n\n.form-control::placeholder {\n  color: rgba(255, 255, 255, 0.6);\n}\n\n.table-sm td {\n  padding: 0.5rem;\n}\n</style>\n\n\n\n"],"names":["loading","ref","enhancedGroups","selectedGroup","groupOrganizations","availableOrganizations","effectivePolicies","groupForm","vpnAssignment","vpnSubnets","availableVpnServers","vpnForm","groupUsers","loadingGroupUsers","vpnPeersSummary","loadingVpnGeneration","activeGroupTab","stats","computed","sum","group","loadEnhancedGroups","result","showToast","error","loadGroupOrganizations","groupId","loadAvailableOrganizations","loadEffectivePolicies","viewGroupDetails","loadVpnAssignment","loadVpnSubnets","loadGroupUsers","loadVpnPeersSummary","openAttachOrgModal","attachOrganization","orgId","closeModalSafely","detachOrganization","openCreateGroupModal","createGroup","editGroup","deleteGroup","response","fetchDelete","manageOrganizations","viewEffectiveAccess","refreshData","formatDate","dateString","modalId","modal","modalElement","backdrop","type","message","toast","loadAvailableVpnServers","server","openVpnAssignmentModal","saveVpnAssignment","testVpnConnection","viewVpnConfig","generateVpnPeer","userId","removeUserFromGroup","addUserToGroup","updateAllRoutes","getUserVpnStatusBadge","user","onMounted"],"mappings":"24LA04BA,MAAMA,EAAUC,EAAI,EAAK,EACnBC,EAAiBD,EAAI,EAAE,EACvBE,EAAgBF,EAAI,IAAI,EACxBG,EAAqBH,EAAI,EAAE,EAC3BI,EAAyBJ,EAAI,EAAE,EAC/BK,GAAoBL,EAAI,CAC5B,gBAAiB,CAAE,EACnB,aAAc,CAAE,EAChB,cAAe,CAAE,CACnB,CAAC,EAEKM,EAAYN,EAAI,CACpB,KAAM,GACN,YAAa,GACb,MAAO,SACT,CAAC,EAGKO,EAAgBP,EAAI,CACxB,YAAa,GACb,SAAU,YACV,gBAAiB,GACjB,mBAAoB,GACpB,uBAAwB,GACxB,uBAAwB,GACxB,uBAAwB,IAC1B,CAAC,EAEKQ,EAAaR,EAAI,EAAE,EACnBS,EAAsBT,EAAI,EAAE,EAE5BU,EAAUV,EAAI,CAClB,YAAa,GACb,SAAU,YACV,gBAAiB,GACjB,mBAAoB,GACpB,uBAAwB,GACxB,uBAAwB,EAC1B,CAAC,EAGKW,EAAaX,EAAI,EAAE,EACnBY,EAAoBZ,EAAI,EAAK,EAC7Ba,EAAkBb,EAAI,CAC1B,MAAO,EACP,OAAQ,EACR,QAAS,CACX,CAAC,EACKc,EAAuBd,EAAI,EAAK,EAChCe,EAAiBf,EAAI,WAAW,EAGhCgB,EAAQC,GAAS,KACd,CACL,YAAahB,EAAe,MAAM,OAClC,mBAAoBA,EAAe,MAAM,OAAO,CAACiB,EAAKC,IAAUD,GAAOC,EAAM,oBAAsB,GAAI,CAAC,EACxG,WAAYlB,EAAe,MAAM,OAAO,CAACiB,EAAKC,IAAUD,GAAOC,EAAM,YAAc,GAAI,CAAC,EACxF,gBAAiBlB,EAAe,MAAM,OAAOkB,GAASA,EAAM,mBAAqB,CAAC,EAAE,MACrF,EACF,EAGKC,EAAqB,SAAY,CACrCrB,EAAQ,MAAQ,GAChB,GAAI,CAEF,MAAMsB,EAAS,MADE,MAAM,MAAM,2BAA2B,GAC1B,KAAM,EAChCA,EAAO,OACTpB,EAAe,MAAQoB,EAAO,KAE9BC,EAAU,QAAS,mCAAqCD,EAAO,OAAO,CAEzE,OAAQE,EAAO,CACdD,EAAU,QAAS,kCAAoCC,EAAM,OAAO,CACxE,QAAY,CACRxB,EAAQ,MAAQ,EACjB,CACH,EAEMyB,EAAyB,MAAOC,GAAY,CAChD,GAAI,CAEF,MAAMJ,EAAS,MADE,MAAM,MAAM,6BAA6BI,CAAO,gBAAgB,GACnD,KAAM,EAChCJ,EAAO,OACTlB,EAAmB,MAAQkB,EAAO,KAElCC,EAAU,QAAS,uCAAyCD,EAAO,OAAO,CAE7E,OAAQE,EAAO,CACdD,EAAU,QAAS,sCAAwCC,EAAM,OAAO,CACzE,CACH,EAEMG,GAA6B,MAAOD,GAAY,CACpD,GAAI,CAEF,MAAMJ,EAAS,MADE,MAAM,MAAM,6BAA6BI,CAAO,0BAA0B,GAC7D,KAAM,EAChCJ,EAAO,OACTjB,EAAuB,MAAQiB,EAAO,KAEtCC,EAAU,QAAS,2CAA6CD,EAAO,OAAO,CAEjF,OAAQE,EAAO,CACdD,EAAU,QAAS,0CAA4CC,EAAM,OAAO,CAC7E,CACH,EAEMI,GAAwB,MAAOF,GAAY,CAC/C,GAAI,CAEF,MAAMJ,EAAS,MADE,MAAM,MAAM,6BAA6BI,CAAO,qBAAqB,GACxD,KAAM,EAChCJ,EAAO,OACThB,GAAkB,MAAQgB,EAAO,KAEjCC,EAAU,QAAS,sCAAwCD,EAAO,OAAO,CAE5E,OAAQE,EAAO,CACdD,EAAU,QAAS,qCAAuCC,EAAM,OAAO,CACxE,CACH,EAEMK,EAAmB,MAAOT,GAAU,CACxCjB,EAAc,MAAQiB,EACtBJ,EAAe,MAAQ,YACvB,MAAMS,EAAuBL,EAAM,EAAE,EACrC,MAAMQ,GAAsBR,EAAM,EAAE,EACpC,MAAMU,EAAkBV,EAAM,EAAE,EAChC,MAAMW,EAAeX,EAAM,EAAE,EAC7B,MAAMY,EAAeZ,EAAM,EAAE,EAC7B,MAAMa,EAAoBb,EAAM,EAAE,EACpB,IAAI,UAAU,MAAM,SAAS,eAAe,mBAAmB,CAAC,EACxE,KAAM,CACd,EAEMc,EAAqB,SAAY,CACrC,MAAMP,GAA2BxB,EAAc,MAAM,EAAE,EACzC,IAAI,UAAU,MAAM,SAAS,eAAe,gBAAgB,CAAC,EACrE,KAAM,CACd,EAEMgC,GAAqB,MAAOC,GAAU,CAC1C,GAAI,CAMF,MAAMd,EAAS,MALE,MAAM,MAAM,6BAA6BnB,EAAc,MAAM,EAAE,kBAAkBiC,CAAK,GAAI,CACzG,OAAQ,OACR,QAAS,CAAE,eAAgB,kBAAoB,EAC/C,KAAM,KAAK,UAAU,EAAE,CAC7B,CAAK,GAC6B,KAAM,EAChCd,EAAO,QACTC,EAAU,UAAWD,EAAO,OAAO,EACnCe,EAAiB,gBAAgB,EACjC,MAAMZ,EAAuBtB,EAAc,MAAM,EAAE,EACnD,MAAMkB,EAAoB,GAE1BE,EAAU,QAASD,EAAO,OAAO,CAEpC,OAAQE,EAAO,CACdD,EAAU,QAAS,iCAAmCC,EAAM,OAAO,CACpE,CACH,EAEMc,EAAqB,MAAOF,GAAU,CAC1C,GAAI,QAAQ,mEAAmE,EAC7E,GAAI,CAIF,MAAMd,EAAS,MAHE,MAAM,MAAM,6BAA6BnB,EAAc,MAAM,EAAE,kBAAkBiC,CAAK,GAAI,CACzG,OAAQ,QAChB,CAAO,GAC6B,KAAM,EAChCd,EAAO,QACTC,EAAU,UAAWD,EAAO,OAAO,EACnC,MAAMG,EAAuBtB,EAAc,MAAM,EAAE,EACnD,MAAMkB,EAAoB,GAE1BE,EAAU,QAASD,EAAO,OAAO,CAEpC,OAAQE,EAAO,CACdD,EAAU,QAAS,iCAAmCC,EAAM,OAAO,CACpE,CAEL,EAMMe,GAAuB,IAAM,CACjChC,EAAU,MAAQ,CAChB,KAAM,GACN,YAAa,GACb,MAAO,SACR,EACa,IAAI,UAAU,MAAM,SAAS,eAAe,kBAAkB,CAAC,EACvE,KAAM,CACd,EAEMiC,EAAc,SAAY,CAC9B,GAAI,CAMF,MAAMlB,EAAS,MALE,MAAM,MAAM,4BAA6B,CACxD,OAAQ,OACR,QAAS,CAAE,eAAgB,kBAAoB,EAC/C,KAAM,KAAK,UAAUf,EAAU,KAAK,CAC1C,CAAK,GAC6B,KAAM,EAChCe,EAAO,QACTC,EAAU,UAAWD,EAAO,OAAO,EACnCe,EAAiB,kBAAkB,EACnC,MAAMhB,EAAoB,GAE1BE,EAAU,QAASD,EAAO,OAAO,CAEpC,OAAQE,EAAO,CACdD,EAAU,QAAS,yBAA2BC,EAAM,OAAO,CAC5D,CACH,EAEMiB,EAAarB,GAAU,CAE3BG,EAAU,OAAQ,uCAAuC,CAC3D,EAEMmB,GAAc,MAAOtB,GAAU,CACnC,GAAI,QAAQ,0CAA0CA,EAAM,IAAI,IAAI,EAClE,GAAI,CACFpB,EAAQ,MAAQ,GAEhB,MAAM2C,EAAW,MAAMC,GAAY,oBAAoBxB,EAAM,EAAE,EAAE,EAE7DuB,EAAS,QACXpB,EAAU,UAAWoB,EAAS,SAAW,4BAA4B,EACrE,MAAMtB,EAAoB,GAE1BE,EAAU,QAASoB,EAAS,SAAW,wBAAwB,CAElE,OAAQnB,EAAO,CACd,QAAQ,MAAM,wBAAyBA,CAAK,EAC5CD,EAAU,QAAS,wBAAwB,CACjD,QAAc,CACRvB,EAAQ,MAAQ,EACjB,CAEL,EAEM6C,GAAuBzB,GAAU,CACrCS,EAAiBT,CAAK,CACxB,EAEM0B,GAAuB1B,GAAU,CAErCG,EAAU,OAAQ,oCAAoC,CACxD,EAEMwB,GAAc,SAAY,CAC9B,MAAM1B,EAAoB,CAC5B,EAWM2B,EAAcC,GACbA,EACE,IAAI,KAAKA,CAAU,EAAE,mBAAoB,EADxB,IAIpBZ,EAAoBa,GAAY,CACpC,MAAMC,EAAQ,UAAU,MAAM,YAAY,SAAS,eAAeD,CAAO,CAAC,EAC1E,GAAIC,EACFA,EAAM,KAAM,MACP,CAEL,MAAMC,EAAe,SAAS,eAAeF,CAAO,EAChDE,IACFA,EAAa,UAAU,OAAO,MAAM,EACpCA,EAAa,MAAM,QAAU,OAC7BA,EAAa,aAAa,cAAe,MAAM,EAC/CA,EAAa,gBAAgB,YAAY,GAGzB,SAAS,iBAAiB,iBAAiB,EACnD,QAAQC,IAAYA,GAAS,OAAM,CAAE,EAE/C,SAAS,KAAK,UAAU,OAAO,YAAY,EAC3C,SAAS,KAAK,MAAM,SAAW,EAChC,CACH,EAEM9B,EAAY,CAAC+B,EAAMC,IAAY,CAEnC,MAAMC,EAAQ,SAAS,cAAc,KAAK,EAC1CA,EAAM,UAAY,eAAeF,IAAS,QAAU,SAAWA,CAAI,8CACnEE,EAAM,MAAM,QAAU,2DACtBA,EAAM,UAAY;AAAA,MACdD,CAAO;AAAA;AAAA,IAGX,SAAS,KAAK,YAAYC,CAAK,EAE/B,WAAW,IAAM,CACXA,EAAM,YACRA,EAAM,WAAW,YAAYA,CAAK,CAErC,EAAE,GAAI,CACT,EAGM1B,EAAoB,MAAOJ,GAAY,CAC3C,GAAI,CAEF,MAAMJ,EAAS,MADE,MAAM,MAAM,6BAA6BI,CAAO,iBAAiB,GACpD,KAAM,EAEhCJ,EAAO,SACTd,EAAc,MAAQ,CACpB,YAAac,EAAO,MAAM,aAAe,GACzC,SAAUA,EAAO,MAAM,UAAY,YACnC,gBAAiBA,EAAO,MAAM,iBAAmB,GACjD,mBAAoBA,EAAO,MAAM,oBAAsB,GACvD,uBAAwBA,EAAO,MAAM,wBAA0B,GAC/D,uBAAwBA,EAAO,MAAM,wBAA0B,GAC/D,uBAAwBA,EAAO,MAAM,wBAA0B,IAChE,EAEJ,OAAQE,EAAO,CACd,QAAQ,MAAM,gCAAiCA,CAAK,CACrD,CACH,EAEMO,EAAiB,MAAOL,GAAY,CACxC,GAAI,CAEF,MAAMJ,EAAS,MADE,MAAM,MAAM,6BAA6BI,CAAO,cAAc,GACjD,KAAM,EAEhCJ,EAAO,SACTb,EAAW,MAAQa,EAAO,MAAQ,CAAE,EAEvC,OAAQE,EAAO,CACd,QAAQ,MAAM,6BAA8BA,CAAK,CAClD,CACH,EAEMiC,GAA0B,SAAY,CAC1C,GAAI,CAEF,MAAMnC,EAAS,MADE,MAAM,MAAM,+BAA+B,GAC9B,KAAM,EAEhCA,EAAO,SACTZ,EAAoB,MAAQY,EAAO,KAAK,IAAIoC,IAAW,CACrD,KAAMA,EAAO,KACb,OAAQA,EAAO,QAAU,SACzB,WAAYA,EAAO,YAAc,CACzC,EAAQ,EAEL,OAAQlC,EAAO,CACd,QAAQ,MAAM,6BAA8BA,CAAK,CAClD,CACH,EAEMmC,EAAyB,SAAY,CACrCxD,EAAc,QAEhB,MAAM2B,EAAkB3B,EAAc,MAAM,EAAE,EAC9C,MAAM4B,EAAe5B,EAAc,MAAM,EAAE,EAC3C,MAAMsD,GAAyB,EAG/B9C,EAAQ,MAAQ,CACd,YAAaH,EAAc,MAAM,YACjC,SAAUA,EAAc,MAAM,SAC9B,gBAAiBA,EAAc,MAAM,gBACrC,mBAAoBA,EAAc,MAAM,mBACxC,uBAAwBA,EAAc,MAAM,uBAC5C,uBAAwBA,EAAc,MAAM,sBAC7C,EAGa,IAAI,UAAU,MAAM,SAAS,eAAe,oBAAoB,CAAC,EACzE,KAAM,EAEhB,EAEMoD,EAAoB,SAAY,CACpC,GAAKzD,EAAc,MAEnB,GAAI,CASF,MAAMmB,EAAS,MARE,MAAM,MAAM,6BAA6BnB,EAAc,MAAM,EAAE,kBAAmB,CACjG,OAAQ,MACR,QAAS,CACP,eAAgB,kBACjB,EACD,KAAM,KAAK,UAAUQ,EAAQ,KAAK,CACxC,CAAK,GAE6B,KAAM,EAEhCW,EAAO,QACTC,EAAU,sCAAuC,SAAS,EAG1D,MAAMO,EAAkB3B,EAAc,MAAM,EAAE,EAC9C,MAAM4B,EAAe5B,EAAc,MAAM,EAAE,EAG3CkC,EAAiB,oBAAoB,GAErCd,EAAUD,EAAO,SAAW,kCAAmC,OAAO,CAEzE,OAAQE,EAAO,CACd,QAAQ,MAAM,+BAAgCA,CAAK,EACnDD,EAAU,8BAA+B,OAAO,CACjD,CACH,EAEMsC,EAAoB,IAAM,CAC9BtC,EAAU,0CAA2C,MAAM,CAC7D,EAEMuC,EAAgB,IAAM,CAC1BvC,EAAU,wCAAyC,MAAM,CAC3D,EAGMS,EAAiB,MAAON,GAAY,CACxCb,EAAkB,MAAQ,GAC1B,GAAI,CAEF,MAAMS,EAAS,MADE,MAAM,MAAM,6BAA6BI,CAAO,QAAQ,GAC3C,KAAM,EAChCJ,EAAO,OACTV,EAAW,MAAQU,EAAO,MAAQ,CAAE,EAEpCC,EAAU,+BAAiCD,EAAO,QAAS,OAAO,CAErE,OAAQE,EAAO,CACdD,EAAU,8BAAgCC,EAAM,QAAS,OAAO,CACpE,QAAY,CACRX,EAAkB,MAAQ,EAC3B,CACH,EAEMoB,EAAsB,MAAOP,GAAY,CAC7C,GAAI,CAEF,MAAMJ,EAAS,MADE,MAAM,MAAM,6BAA6BI,CAAO,gBAAgB,GACnD,KAAM,EAChCJ,EAAO,OACTR,EAAgB,MAAQQ,EAAO,MAAQ,CAAE,MAAO,EAAG,OAAQ,EAAG,QAAS,CAAG,EAE1EC,EAAU,qCAAuCD,EAAO,QAAS,OAAO,CAE3E,OAAQE,EAAO,CACdD,EAAU,oCAAsCC,EAAM,QAAS,OAAO,CACvE,CACH,EAEMuC,GAAkB,MAAOC,GAAW,CACxCjD,EAAqB,MAAQ,GAC7B,GAAI,CAMF,MAAMO,EAAS,MALE,MAAM,MAAM,cAAc0C,CAAM,YAAa,CAC5D,OAAQ,OACR,QAAS,CAAE,eAAgB,kBAAoB,EAC/C,KAAM,KAAK,UAAU,CAAE,SAAU7D,EAAc,MAAM,GAAI,CAC/D,CAAK,GAC6B,KAAM,EAChCmB,EAAO,QACTC,EAAU,kCAAmC,SAAS,EAEtD,MAAMS,EAAe7B,EAAc,MAAM,EAAE,EAC3C,MAAM8B,EAAoB9B,EAAc,MAAM,EAAE,GAEhDoB,EAAU,gCAAkCD,EAAO,QAAS,OAAO,CAEtE,OAAQE,EAAO,CACdD,EAAU,8BAAgCC,EAAM,QAAS,OAAO,CACpE,QAAY,CACRT,EAAqB,MAAQ,EAC9B,CACH,EAEMkD,GAAsB,MAAOD,GAAW,CAC5C,GAAK,QAAQ,iGAAiG,EAI9G,GAAI,CAIF,MAAM1C,EAAS,MAHE,MAAM,MAAM,cAAc0C,CAAM,WAAW7D,EAAc,MAAM,EAAE,GAAI,CACpF,OAAQ,QACd,CAAK,GAC6B,KAAM,EAChCmB,EAAO,QACTC,EAAU,uCAAwC,SAAS,EAE3D,MAAMS,EAAe7B,EAAc,MAAM,EAAE,EAC3C,MAAM8B,EAAoB9B,EAAc,MAAM,EAAE,GAEhDoB,EAAU,qCAAuCD,EAAO,QAAS,OAAO,CAE3E,OAAQE,EAAO,CACdD,EAAU,mCAAqCC,EAAM,QAAS,OAAO,CACtE,CACH,EAEM0C,GAAiB,IAAM,CAC3B3C,EAAU,wCAAyC,MAAM,CAC3D,EAEM4C,GAAkB,IAAM,CAC5B5C,EAAU,wCAAyC,MAAM,CAC3D,EAEM6C,GAAyBC,GACzBA,EAAK,mBACA,aAEA,aAKX,OAAAC,GAAU,IAAM,CACdjD,EAAoB,CACtB,CAAC"}